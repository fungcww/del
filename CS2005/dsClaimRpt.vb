'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.Data
Imports System.Runtime.Serialization
Imports System.Xml


<Serializable(),  _
 System.ComponentModel.DesignerCategoryAttribute("code"),  _
 System.Diagnostics.DebuggerStepThrough(),  _
 System.ComponentModel.ToolboxItem(true)>  _
Public Class dsClaimRpt
    Inherits DataSet
    
    Private tablemcsvw_claim_breakdown_rpt As mcsvw_claim_breakdown_rptDataTable
    
    Private tableProduct As ProductDataTable
    
    Public Sub New()
        MyBase.New
        Me.InitClass
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    Protected Sub New(ByVal info As SerializationInfo, ByVal context As StreamingContext)
        MyBase.New
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(System.String)),String)
        If (Not (strSchema) Is Nothing) Then
            Dim ds As DataSet = New DataSet
            ds.ReadXmlSchema(New XmlTextReader(New System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("mcsvw_claim_breakdown_rpt")) Is Nothing) Then
                Me.Tables.Add(New mcsvw_claim_breakdown_rptDataTable(ds.Tables("mcsvw_claim_breakdown_rpt")))
            End If
            If (Not (ds.Tables("Product")) Is Nothing) Then
                Me.Tables.Add(New ProductDataTable(ds.Tables("Product")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.InitClass
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler Me.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property mcsvw_claim_breakdown_rpt As mcsvw_claim_breakdown_rptDataTable
        Get
            Return Me.tablemcsvw_claim_breakdown_rpt
        End Get
    End Property
    
    <System.ComponentModel.Browsable(false),  _
     System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Product As ProductDataTable
        Get
            Return Me.tableProduct
        End Get
    End Property
    
    Public Overrides Function Clone() As DataSet
        Dim cln As dsClaimRpt = CType(MyBase.Clone,dsClaimRpt)
        cln.InitVars
        Return cln
    End Function
    
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As XmlReader)
        Me.Reset
        Dim ds As DataSet = New DataSet
        ds.ReadXml(reader)
        If (Not (ds.Tables("mcsvw_claim_breakdown_rpt")) Is Nothing) Then
            Me.Tables.Add(New mcsvw_claim_breakdown_rptDataTable(ds.Tables("mcsvw_claim_breakdown_rpt")))
        End If
        If (Not (ds.Tables("Product")) Is Nothing) Then
            Me.Tables.Add(New ProductDataTable(ds.Tables("Product")))
        End If
        Me.DataSetName = ds.DataSetName
        Me.Prefix = ds.Prefix
        Me.Namespace = ds.Namespace
        Me.Locale = ds.Locale
        Me.CaseSensitive = ds.CaseSensitive
        Me.EnforceConstraints = ds.EnforceConstraints
        Me.Merge(ds, false, System.Data.MissingSchemaAction.Add)
        Me.InitVars
    End Sub
    
    Protected Overrides Function GetSchemaSerializable() As System.Xml.Schema.XmlSchema
        Dim stream As System.IO.MemoryStream = New System.IO.MemoryStream
        Me.WriteXmlSchema(New XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return System.Xml.Schema.XmlSchema.Read(New XmlTextReader(stream), Nothing)
    End Function
    
    Friend Sub InitVars()
        Me.tablemcsvw_claim_breakdown_rpt = CType(Me.Tables("mcsvw_claim_breakdown_rpt"),mcsvw_claim_breakdown_rptDataTable)
        If (Not (Me.tablemcsvw_claim_breakdown_rpt) Is Nothing) Then
            Me.tablemcsvw_claim_breakdown_rpt.InitVars
        End If
        Me.tableProduct = CType(Me.Tables("Product"),ProductDataTable)
        If (Not (Me.tableProduct) Is Nothing) Then
            Me.tableProduct.InitVars
        End If
    End Sub
    
    Private Sub InitClass()
        Me.DataSetName = "dsClaimRpt"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsClaimRpt.xsd"
        Me.Locale = New System.Globalization.CultureInfo("en-US")
        Me.CaseSensitive = false
        Me.EnforceConstraints = true
        Me.tablemcsvw_claim_breakdown_rpt = New mcsvw_claim_breakdown_rptDataTable
        Me.Tables.Add(Me.tablemcsvw_claim_breakdown_rpt)
        Me.tableProduct = New ProductDataTable
        Me.Tables.Add(Me.tableProduct)
    End Sub
    
    Private Function ShouldSerializemcsvw_claim_breakdown_rpt() As Boolean
        Return false
    End Function
    
    Private Function ShouldSerializeProduct() As Boolean
        Return false
    End Function
    
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    Public Delegate Sub mcsvw_claim_breakdown_rptRowChangeEventHandler(ByVal sender As Object, ByVal e As mcsvw_claim_breakdown_rptRowChangeEvent)
    
    Public Delegate Sub ProductRowChangeEventHandler(ByVal sender As Object, ByVal e As ProductRowChangeEvent)
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class mcsvw_claim_breakdown_rptDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnmcscbh_claim_no As DataColumn
        
        Private columnmcscbh_claim_occur As DataColumn
        
        Private columnmcschd_insured_id As DataColumn
        
        Private columnmcschd_insured_name As DataColumn
        
        Private columnmcschd_accident_date As DataColumn
        
        Private columnmcschd_hospital_indate As DataColumn
        
        Private columnmcschd_hospital_outdate As DataColumn
        
        Private columnmcschd_present_curr As DataColumn
        
        Private columnmcsply_policy_no As DataColumn
        
        Private columnmcsply_policy_curr As DataColumn
        
        Private columnmcschd_exchg_rate As DataColumn
        
        Private columnmcscbh_pre_pol_xrate As DataColumn
        
        Private columnmcscpc_coverage As DataColumn
        
        Private columnmcscpc_plan_type As DataColumn
        
        Private columnmcscpc_plan_code As DataColumn
        
        Private columnmcscbh_table1 As DataColumn
        
        Private columnmcscbh_table2 As DataColumn
        
        Private columnmcsbrb_remain_booster As DataColumn
        
        Private columnmcscbh_benefit_code As DataColumn
        
        Private columnmcscbh_benefit_pcode As DataColumn
        
        Private columnmcsben_benefit_desc As DataColumn
        
        Private columnmcscbh_present_amt As DataColumn
        
        Private columnmcscbh_present_day As DataColumn
        
        Private columnmcscbh_paid_amt As DataColumn
        
        Private columnmcscbh_paid_day As DataColumn
        
        Private columnmcscbh_booster_paid As DataColumn
        
        Private columnmcscbh_remain_clm_amt As DataColumn
        
        Private columnmcscbh_remain_clm_days As DataColumn
        
        Private columnmcscrb_remain_amt As DataColumn
        
        Private columnmcscrb_remain_day As DataColumn
        
        Private columnmcscbh_sys_paid_amt As DataColumn
        
        Friend Sub New()
            MyBase.New("mcsvw_claim_breakdown_rpt")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property mcscbh_claim_noColumn As DataColumn
            Get
                Return Me.columnmcscbh_claim_no
            End Get
        End Property
        
        Friend ReadOnly Property mcscbh_claim_occurColumn As DataColumn
            Get
                Return Me.columnmcscbh_claim_occur
            End Get
        End Property
        
        Friend ReadOnly Property mcschd_insured_idColumn As DataColumn
            Get
                Return Me.columnmcschd_insured_id
            End Get
        End Property
        
        Friend ReadOnly Property mcschd_insured_nameColumn As DataColumn
            Get
                Return Me.columnmcschd_insured_name
            End Get
        End Property
        
        Friend ReadOnly Property mcschd_accident_dateColumn As DataColumn
            Get
                Return Me.columnmcschd_accident_date
            End Get
        End Property
        
        Friend ReadOnly Property mcschd_hospital_indateColumn As DataColumn
            Get
                Return Me.columnmcschd_hospital_indate
            End Get
        End Property
        
        Friend ReadOnly Property mcschd_hospital_outdateColumn As DataColumn
            Get
                Return Me.columnmcschd_hospital_outdate
            End Get
        End Property
        
        Friend ReadOnly Property mcschd_present_currColumn As DataColumn
            Get
                Return Me.columnmcschd_present_curr
            End Get
        End Property
        
        Friend ReadOnly Property mcsply_policy_noColumn As DataColumn
            Get
                Return Me.columnmcsply_policy_no
            End Get
        End Property
        
        Friend ReadOnly Property mcsply_policy_currColumn As DataColumn
            Get
                Return Me.columnmcsply_policy_curr
            End Get
        End Property
        
        Friend ReadOnly Property mcschd_exchg_rateColumn As DataColumn
            Get
                Return Me.columnmcschd_exchg_rate
            End Get
        End Property
        
        Friend ReadOnly Property mcscbh_pre_pol_xrateColumn As DataColumn
            Get
                Return Me.columnmcscbh_pre_pol_xrate
            End Get
        End Property
        
        Friend ReadOnly Property mcscpc_coverageColumn As DataColumn
            Get
                Return Me.columnmcscpc_coverage
            End Get
        End Property
        
        Friend ReadOnly Property mcscpc_plan_typeColumn As DataColumn
            Get
                Return Me.columnmcscpc_plan_type
            End Get
        End Property
        
        Friend ReadOnly Property mcscpc_plan_codeColumn As DataColumn
            Get
                Return Me.columnmcscpc_plan_code
            End Get
        End Property
        
        Friend ReadOnly Property mcscbh_table1Column As DataColumn
            Get
                Return Me.columnmcscbh_table1
            End Get
        End Property
        
        Friend ReadOnly Property mcscbh_table2Column As DataColumn
            Get
                Return Me.columnmcscbh_table2
            End Get
        End Property
        
        Friend ReadOnly Property mcsbrb_remain_boosterColumn As DataColumn
            Get
                Return Me.columnmcsbrb_remain_booster
            End Get
        End Property
        
        Friend ReadOnly Property mcscbh_benefit_codeColumn As DataColumn
            Get
                Return Me.columnmcscbh_benefit_code
            End Get
        End Property
        
        Friend ReadOnly Property mcscbh_benefit_pcodeColumn As DataColumn
            Get
                Return Me.columnmcscbh_benefit_pcode
            End Get
        End Property
        
        Friend ReadOnly Property mcsben_benefit_descColumn As DataColumn
            Get
                Return Me.columnmcsben_benefit_desc
            End Get
        End Property
        
        Friend ReadOnly Property mcscbh_present_amtColumn As DataColumn
            Get
                Return Me.columnmcscbh_present_amt
            End Get
        End Property
        
        Friend ReadOnly Property mcscbh_present_dayColumn As DataColumn
            Get
                Return Me.columnmcscbh_present_day
            End Get
        End Property
        
        Friend ReadOnly Property mcscbh_paid_amtColumn As DataColumn
            Get
                Return Me.columnmcscbh_paid_amt
            End Get
        End Property
        
        Friend ReadOnly Property mcscbh_paid_dayColumn As DataColumn
            Get
                Return Me.columnmcscbh_paid_day
            End Get
        End Property
        
        Friend ReadOnly Property mcscbh_booster_paidColumn As DataColumn
            Get
                Return Me.columnmcscbh_booster_paid
            End Get
        End Property
        
        Friend ReadOnly Property mcscbh_remain_clm_amtColumn As DataColumn
            Get
                Return Me.columnmcscbh_remain_clm_amt
            End Get
        End Property
        
        Friend ReadOnly Property mcscbh_remain_clm_daysColumn As DataColumn
            Get
                Return Me.columnmcscbh_remain_clm_days
            End Get
        End Property
        
        Friend ReadOnly Property mcscrb_remain_amtColumn As DataColumn
            Get
                Return Me.columnmcscrb_remain_amt
            End Get
        End Property
        
        Friend ReadOnly Property mcscrb_remain_dayColumn As DataColumn
            Get
                Return Me.columnmcscrb_remain_day
            End Get
        End Property
        
        Friend ReadOnly Property mcscbh_sys_paid_amtColumn As DataColumn
            Get
                Return Me.columnmcscbh_sys_paid_amt
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As mcsvw_claim_breakdown_rptRow
            Get
                Return CType(Me.Rows(index),mcsvw_claim_breakdown_rptRow)
            End Get
        End Property
        
        Public Event mcsvw_claim_breakdown_rptRowChanged As mcsvw_claim_breakdown_rptRowChangeEventHandler
        
        Public Event mcsvw_claim_breakdown_rptRowChanging As mcsvw_claim_breakdown_rptRowChangeEventHandler
        
        Public Event mcsvw_claim_breakdown_rptRowDeleted As mcsvw_claim_breakdown_rptRowChangeEventHandler
        
        Public Event mcsvw_claim_breakdown_rptRowDeleting As mcsvw_claim_breakdown_rptRowChangeEventHandler
        
        Public Overloads Sub Addmcsvw_claim_breakdown_rptRow(ByVal row As mcsvw_claim_breakdown_rptRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function Addmcsvw_claim_breakdown_rptRow( _
                    ByVal mcscbh_claim_no As Decimal,  _
                    ByVal mcscbh_claim_occur As Decimal,  _
                    ByVal mcschd_insured_id As String,  _
                    ByVal mcschd_insured_name As String,  _
                    ByVal mcschd_accident_date As Date,  _
                    ByVal mcschd_hospital_indate As Date,  _
                    ByVal mcschd_hospital_outdate As Date,  _
                    ByVal mcschd_present_curr As String,  _
                    ByVal mcsply_policy_no As String,  _
                    ByVal mcsply_policy_curr As String,  _
                    ByVal mcschd_exchg_rate As Decimal,  _
                    ByVal mcscbh_pre_pol_xrate As Decimal,  _
                    ByVal mcscpc_coverage As Decimal,  _
                    ByVal mcscpc_plan_type As String,  _
                    ByVal mcscpc_plan_code As String,  _
                    ByVal mcscbh_table1 As String,  _
                    ByVal mcscbh_table2 As String,  _
                    ByVal mcsbrb_remain_booster As Decimal,  _
                    ByVal mcscbh_benefit_code As String,  _
                    ByVal mcscbh_benefit_pcode As String,  _
                    ByVal mcsben_benefit_desc As String,  _
                    ByVal mcscbh_present_amt As Decimal,  _
                    ByVal mcscbh_present_day As Decimal,  _
                    ByVal mcscbh_paid_amt As Decimal,  _
                    ByVal mcscbh_paid_day As Decimal,  _
                    ByVal mcscbh_booster_paid As Decimal,  _
                    ByVal mcscbh_remain_clm_amt As Decimal,  _
                    ByVal mcscbh_remain_clm_days As Decimal,  _
                    ByVal mcscrb_remain_amt As Decimal,  _
                    ByVal mcscrb_remain_day As Decimal,  _
                    ByVal mcscbh_sys_paid_amt As Decimal) As mcsvw_claim_breakdown_rptRow
            Dim rowmcsvw_claim_breakdown_rptRow As mcsvw_claim_breakdown_rptRow = CType(Me.NewRow,mcsvw_claim_breakdown_rptRow)
            rowmcsvw_claim_breakdown_rptRow.ItemArray = New Object() {mcscbh_claim_no, mcscbh_claim_occur, mcschd_insured_id, mcschd_insured_name, mcschd_accident_date, mcschd_hospital_indate, mcschd_hospital_outdate, mcschd_present_curr, mcsply_policy_no, mcsply_policy_curr, mcschd_exchg_rate, mcscbh_pre_pol_xrate, mcscpc_coverage, mcscpc_plan_type, mcscpc_plan_code, mcscbh_table1, mcscbh_table2, mcsbrb_remain_booster, mcscbh_benefit_code, mcscbh_benefit_pcode, mcsben_benefit_desc, mcscbh_present_amt, mcscbh_present_day, mcscbh_paid_amt, mcscbh_paid_day, mcscbh_booster_paid, mcscbh_remain_clm_amt, mcscbh_remain_clm_days, mcscrb_remain_amt, mcscrb_remain_day, mcscbh_sys_paid_amt}
            Me.Rows.Add(rowmcsvw_claim_breakdown_rptRow)
            Return rowmcsvw_claim_breakdown_rptRow
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As mcsvw_claim_breakdown_rptDataTable = CType(MyBase.Clone,mcsvw_claim_breakdown_rptDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New mcsvw_claim_breakdown_rptDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnmcscbh_claim_no = Me.Columns("mcscbh_claim_no")
            Me.columnmcscbh_claim_occur = Me.Columns("mcscbh_claim_occur")
            Me.columnmcschd_insured_id = Me.Columns("mcschd_insured_id")
            Me.columnmcschd_insured_name = Me.Columns("mcschd_insured_name")
            Me.columnmcschd_accident_date = Me.Columns("mcschd_accident_date")
            Me.columnmcschd_hospital_indate = Me.Columns("mcschd_hospital_indate")
            Me.columnmcschd_hospital_outdate = Me.Columns("mcschd_hospital_outdate")
            Me.columnmcschd_present_curr = Me.Columns("mcschd_present_curr")
            Me.columnmcsply_policy_no = Me.Columns("mcsply_policy_no")
            Me.columnmcsply_policy_curr = Me.Columns("mcsply_policy_curr")
            Me.columnmcschd_exchg_rate = Me.Columns("mcschd_exchg_rate")
            Me.columnmcscbh_pre_pol_xrate = Me.Columns("mcscbh_pre_pol_xrate")
            Me.columnmcscpc_coverage = Me.Columns("mcscpc_coverage")
            Me.columnmcscpc_plan_type = Me.Columns("mcscpc_plan_type")
            Me.columnmcscpc_plan_code = Me.Columns("mcscpc_plan_code")
            Me.columnmcscbh_table1 = Me.Columns("mcscbh_table1")
            Me.columnmcscbh_table2 = Me.Columns("mcscbh_table2")
            Me.columnmcsbrb_remain_booster = Me.Columns("mcsbrb_remain_booster")
            Me.columnmcscbh_benefit_code = Me.Columns("mcscbh_benefit_code")
            Me.columnmcscbh_benefit_pcode = Me.Columns("mcscbh_benefit_pcode")
            Me.columnmcsben_benefit_desc = Me.Columns("mcsben_benefit_desc")
            Me.columnmcscbh_present_amt = Me.Columns("mcscbh_present_amt")
            Me.columnmcscbh_present_day = Me.Columns("mcscbh_present_day")
            Me.columnmcscbh_paid_amt = Me.Columns("mcscbh_paid_amt")
            Me.columnmcscbh_paid_day = Me.Columns("mcscbh_paid_day")
            Me.columnmcscbh_booster_paid = Me.Columns("mcscbh_booster_paid")
            Me.columnmcscbh_remain_clm_amt = Me.Columns("mcscbh_remain_clm_amt")
            Me.columnmcscbh_remain_clm_days = Me.Columns("mcscbh_remain_clm_days")
            Me.columnmcscrb_remain_amt = Me.Columns("mcscrb_remain_amt")
            Me.columnmcscrb_remain_day = Me.Columns("mcscrb_remain_day")
            Me.columnmcscbh_sys_paid_amt = Me.Columns("mcscbh_sys_paid_amt")
        End Sub
        
        Private Sub InitClass()
            Me.columnmcscbh_claim_no = New DataColumn("mcscbh_claim_no", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcscbh_claim_no)
            Me.columnmcscbh_claim_occur = New DataColumn("mcscbh_claim_occur", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcscbh_claim_occur)
            Me.columnmcschd_insured_id = New DataColumn("mcschd_insured_id", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcschd_insured_id)
            Me.columnmcschd_insured_name = New DataColumn("mcschd_insured_name", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcschd_insured_name)
            Me.columnmcschd_accident_date = New DataColumn("mcschd_accident_date", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcschd_accident_date)
            Me.columnmcschd_hospital_indate = New DataColumn("mcschd_hospital_indate", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcschd_hospital_indate)
            Me.columnmcschd_hospital_outdate = New DataColumn("mcschd_hospital_outdate", GetType(System.DateTime), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcschd_hospital_outdate)
            Me.columnmcschd_present_curr = New DataColumn("mcschd_present_curr", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcschd_present_curr)
            Me.columnmcsply_policy_no = New DataColumn("mcsply_policy_no", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcsply_policy_no)
            Me.columnmcsply_policy_curr = New DataColumn("mcsply_policy_curr", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcsply_policy_curr)
            Me.columnmcschd_exchg_rate = New DataColumn("mcschd_exchg_rate", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcschd_exchg_rate)
            Me.columnmcscbh_pre_pol_xrate = New DataColumn("mcscbh_pre_pol_xrate", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcscbh_pre_pol_xrate)
            Me.columnmcscpc_coverage = New DataColumn("mcscpc_coverage", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcscpc_coverage)
            Me.columnmcscpc_plan_type = New DataColumn("mcscpc_plan_type", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcscpc_plan_type)
            Me.columnmcscpc_plan_code = New DataColumn("mcscpc_plan_code", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcscpc_plan_code)
            Me.columnmcscbh_table1 = New DataColumn("mcscbh_table1", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcscbh_table1)
            Me.columnmcscbh_table2 = New DataColumn("mcscbh_table2", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcscbh_table2)
            Me.columnmcsbrb_remain_booster = New DataColumn("mcsbrb_remain_booster", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcsbrb_remain_booster)
            Me.columnmcscbh_benefit_code = New DataColumn("mcscbh_benefit_code", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcscbh_benefit_code)
            Me.columnmcscbh_benefit_pcode = New DataColumn("mcscbh_benefit_pcode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcscbh_benefit_pcode)
            Me.columnmcsben_benefit_desc = New DataColumn("mcsben_benefit_desc", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcsben_benefit_desc)
            Me.columnmcscbh_present_amt = New DataColumn("mcscbh_present_amt", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcscbh_present_amt)
            Me.columnmcscbh_present_day = New DataColumn("mcscbh_present_day", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcscbh_present_day)
            Me.columnmcscbh_paid_amt = New DataColumn("mcscbh_paid_amt", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcscbh_paid_amt)
            Me.columnmcscbh_paid_day = New DataColumn("mcscbh_paid_day", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcscbh_paid_day)
            Me.columnmcscbh_booster_paid = New DataColumn("mcscbh_booster_paid", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcscbh_booster_paid)
            Me.columnmcscbh_remain_clm_amt = New DataColumn("mcscbh_remain_clm_amt", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcscbh_remain_clm_amt)
            Me.columnmcscbh_remain_clm_days = New DataColumn("mcscbh_remain_clm_days", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcscbh_remain_clm_days)
            Me.columnmcscrb_remain_amt = New DataColumn("mcscrb_remain_amt", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcscrb_remain_amt)
            Me.columnmcscrb_remain_day = New DataColumn("mcscrb_remain_day", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcscrb_remain_day)
            Me.columnmcscbh_sys_paid_amt = New DataColumn("mcscbh_sys_paid_amt", GetType(System.Decimal), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnmcscbh_sys_paid_amt)
            Me.columnmcscbh_claim_no.AllowDBNull = false
            Me.columnmcscbh_claim_occur.AllowDBNull = false
            Me.columnmcschd_insured_id.AllowDBNull = false
            Me.columnmcschd_insured_name.AllowDBNull = false
            Me.columnmcschd_present_curr.AllowDBNull = false
            Me.columnmcsply_policy_no.AllowDBNull = false
            Me.columnmcsply_policy_curr.AllowDBNull = false
            Me.columnmcschd_exchg_rate.AllowDBNull = false
            Me.columnmcscbh_pre_pol_xrate.AllowDBNull = false
            Me.columnmcscpc_coverage.AllowDBNull = false
            Me.columnmcscpc_plan_type.AllowDBNull = false
            Me.columnmcscpc_plan_code.AllowDBNull = false
            Me.columnmcscbh_table1.AllowDBNull = false
            Me.columnmcscbh_table2.AllowDBNull = false
            Me.columnmcscbh_benefit_code.AllowDBNull = false
            Me.columnmcsben_benefit_desc.AllowDBNull = false
            Me.columnmcscbh_present_amt.AllowDBNull = false
            Me.columnmcscbh_present_day.AllowDBNull = false
            Me.columnmcscbh_paid_amt.AllowDBNull = false
            Me.columnmcscbh_paid_day.AllowDBNull = false
            Me.columnmcscbh_booster_paid.AllowDBNull = false
            Me.columnmcscbh_remain_clm_amt.ReadOnly = true
            Me.columnmcscbh_remain_clm_days.ReadOnly = true
            Me.columnmcscbh_sys_paid_amt.AllowDBNull = false
        End Sub
        
        Public Function Newmcsvw_claim_breakdown_rptRow() As mcsvw_claim_breakdown_rptRow
            Return CType(Me.NewRow,mcsvw_claim_breakdown_rptRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New mcsvw_claim_breakdown_rptRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(mcsvw_claim_breakdown_rptRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.mcsvw_claim_breakdown_rptRowChangedEvent) Is Nothing) Then
                RaiseEvent mcsvw_claim_breakdown_rptRowChanged(Me, New mcsvw_claim_breakdown_rptRowChangeEvent(CType(e.Row,mcsvw_claim_breakdown_rptRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.mcsvw_claim_breakdown_rptRowChangingEvent) Is Nothing) Then
                RaiseEvent mcsvw_claim_breakdown_rptRowChanging(Me, New mcsvw_claim_breakdown_rptRowChangeEvent(CType(e.Row,mcsvw_claim_breakdown_rptRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.mcsvw_claim_breakdown_rptRowDeletedEvent) Is Nothing) Then
                RaiseEvent mcsvw_claim_breakdown_rptRowDeleted(Me, New mcsvw_claim_breakdown_rptRowChangeEvent(CType(e.Row,mcsvw_claim_breakdown_rptRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.mcsvw_claim_breakdown_rptRowDeletingEvent) Is Nothing) Then
                RaiseEvent mcsvw_claim_breakdown_rptRowDeleting(Me, New mcsvw_claim_breakdown_rptRowChangeEvent(CType(e.Row,mcsvw_claim_breakdown_rptRow), e.Action))
            End If
        End Sub
        
        Public Sub Removemcsvw_claim_breakdown_rptRow(ByVal row As mcsvw_claim_breakdown_rptRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class mcsvw_claim_breakdown_rptRow
        Inherits DataRow
        
        Private tablemcsvw_claim_breakdown_rpt As mcsvw_claim_breakdown_rptDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tablemcsvw_claim_breakdown_rpt = CType(Me.Table,mcsvw_claim_breakdown_rptDataTable)
        End Sub
        
        Public Property mcscbh_claim_no As Decimal
            Get
                Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_claim_noColumn),Decimal)
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_claim_noColumn) = value
            End Set
        End Property
        
        Public Property mcscbh_claim_occur As Decimal
            Get
                Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_claim_occurColumn),Decimal)
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_claim_occurColumn) = value
            End Set
        End Property
        
        Public Property mcschd_insured_id As String
            Get
                Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcschd_insured_idColumn),String)
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcschd_insured_idColumn) = value
            End Set
        End Property
        
        Public Property mcschd_insured_name As String
            Get
                Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcschd_insured_nameColumn),String)
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcschd_insured_nameColumn) = value
            End Set
        End Property
        
        Public Property mcschd_accident_date As Date
            Get
                Try 
                    Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcschd_accident_dateColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcschd_accident_dateColumn) = value
            End Set
        End Property
        
        Public Property mcschd_hospital_indate As Date
            Get
                Try 
                    Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcschd_hospital_indateColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcschd_hospital_indateColumn) = value
            End Set
        End Property
        
        Public Property mcschd_hospital_outdate As Date
            Get
                Try 
                    Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcschd_hospital_outdateColumn),Date)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcschd_hospital_outdateColumn) = value
            End Set
        End Property
        
        Public Property mcschd_present_curr As String
            Get
                Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcschd_present_currColumn),String)
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcschd_present_currColumn) = value
            End Set
        End Property
        
        Public Property mcsply_policy_no As String
            Get
                Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcsply_policy_noColumn),String)
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcsply_policy_noColumn) = value
            End Set
        End Property
        
        Public Property mcsply_policy_curr As String
            Get
                Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcsply_policy_currColumn),String)
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcsply_policy_currColumn) = value
            End Set
        End Property
        
        Public Property mcschd_exchg_rate As Decimal
            Get
                Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcschd_exchg_rateColumn),Decimal)
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcschd_exchg_rateColumn) = value
            End Set
        End Property
        
        Public Property mcscbh_pre_pol_xrate As Decimal
            Get
                Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_pre_pol_xrateColumn),Decimal)
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_pre_pol_xrateColumn) = value
            End Set
        End Property
        
        Public Property mcscpc_coverage As Decimal
            Get
                Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcscpc_coverageColumn),Decimal)
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcscpc_coverageColumn) = value
            End Set
        End Property
        
        Public Property mcscpc_plan_type As String
            Get
                Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcscpc_plan_typeColumn),String)
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcscpc_plan_typeColumn) = value
            End Set
        End Property
        
        Public Property mcscpc_plan_code As String
            Get
                Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcscpc_plan_codeColumn),String)
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcscpc_plan_codeColumn) = value
            End Set
        End Property
        
        Public Property mcscbh_table1 As String
            Get
                Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_table1Column),String)
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_table1Column) = value
            End Set
        End Property
        
        Public Property mcscbh_table2 As String
            Get
                Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_table2Column),String)
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_table2Column) = value
            End Set
        End Property
        
        Public Property mcsbrb_remain_booster As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcsbrb_remain_boosterColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcsbrb_remain_boosterColumn) = value
            End Set
        End Property
        
        Public Property mcscbh_benefit_code As String
            Get
                Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_benefit_codeColumn),String)
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_benefit_codeColumn) = value
            End Set
        End Property
        
        Public Property mcscbh_benefit_pcode As String
            Get
                Try 
                    Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_benefit_pcodeColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_benefit_pcodeColumn) = value
            End Set
        End Property
        
        Public Property mcsben_benefit_desc As String
            Get
                Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcsben_benefit_descColumn),String)
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcsben_benefit_descColumn) = value
            End Set
        End Property
        
        Public Property mcscbh_present_amt As Decimal
            Get
                Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_present_amtColumn),Decimal)
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_present_amtColumn) = value
            End Set
        End Property
        
        Public Property mcscbh_present_day As Decimal
            Get
                Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_present_dayColumn),Decimal)
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_present_dayColumn) = value
            End Set
        End Property
        
        Public Property mcscbh_paid_amt As Decimal
            Get
                Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_paid_amtColumn),Decimal)
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_paid_amtColumn) = value
            End Set
        End Property
        
        Public Property mcscbh_paid_day As Decimal
            Get
                Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_paid_dayColumn),Decimal)
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_paid_dayColumn) = value
            End Set
        End Property
        
        Public Property mcscbh_booster_paid As Decimal
            Get
                Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_booster_paidColumn),Decimal)
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_booster_paidColumn) = value
            End Set
        End Property
        
        Public Property mcscbh_remain_clm_amt As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_remain_clm_amtColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_remain_clm_amtColumn) = value
            End Set
        End Property
        
        Public Property mcscbh_remain_clm_days As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_remain_clm_daysColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_remain_clm_daysColumn) = value
            End Set
        End Property
        
        Public Property mcscrb_remain_amt As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcscrb_remain_amtColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcscrb_remain_amtColumn) = value
            End Set
        End Property
        
        Public Property mcscrb_remain_day As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcscrb_remain_dayColumn),Decimal)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcscrb_remain_dayColumn) = value
            End Set
        End Property
        
        Public Property mcscbh_sys_paid_amt As Decimal
            Get
                Return CType(Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_sys_paid_amtColumn),Decimal)
            End Get
            Set
                Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_sys_paid_amtColumn) = value
            End Set
        End Property
        
        Public Function Ismcschd_accident_dateNull() As Boolean
            Return Me.IsNull(Me.tablemcsvw_claim_breakdown_rpt.mcschd_accident_dateColumn)
        End Function
        
        Public Sub Setmcschd_accident_dateNull()
            Me(Me.tablemcsvw_claim_breakdown_rpt.mcschd_accident_dateColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Ismcschd_hospital_indateNull() As Boolean
            Return Me.IsNull(Me.tablemcsvw_claim_breakdown_rpt.mcschd_hospital_indateColumn)
        End Function
        
        Public Sub Setmcschd_hospital_indateNull()
            Me(Me.tablemcsvw_claim_breakdown_rpt.mcschd_hospital_indateColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Ismcschd_hospital_outdateNull() As Boolean
            Return Me.IsNull(Me.tablemcsvw_claim_breakdown_rpt.mcschd_hospital_outdateColumn)
        End Function
        
        Public Sub Setmcschd_hospital_outdateNull()
            Me(Me.tablemcsvw_claim_breakdown_rpt.mcschd_hospital_outdateColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Ismcsbrb_remain_boosterNull() As Boolean
            Return Me.IsNull(Me.tablemcsvw_claim_breakdown_rpt.mcsbrb_remain_boosterColumn)
        End Function
        
        Public Sub Setmcsbrb_remain_boosterNull()
            Me(Me.tablemcsvw_claim_breakdown_rpt.mcsbrb_remain_boosterColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Ismcscbh_benefit_pcodeNull() As Boolean
            Return Me.IsNull(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_benefit_pcodeColumn)
        End Function
        
        Public Sub Setmcscbh_benefit_pcodeNull()
            Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_benefit_pcodeColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Ismcscbh_remain_clm_amtNull() As Boolean
            Return Me.IsNull(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_remain_clm_amtColumn)
        End Function
        
        Public Sub Setmcscbh_remain_clm_amtNull()
            Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_remain_clm_amtColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Ismcscbh_remain_clm_daysNull() As Boolean
            Return Me.IsNull(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_remain_clm_daysColumn)
        End Function
        
        Public Sub Setmcscbh_remain_clm_daysNull()
            Me(Me.tablemcsvw_claim_breakdown_rpt.mcscbh_remain_clm_daysColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Ismcscrb_remain_amtNull() As Boolean
            Return Me.IsNull(Me.tablemcsvw_claim_breakdown_rpt.mcscrb_remain_amtColumn)
        End Function
        
        Public Sub Setmcscrb_remain_amtNull()
            Me(Me.tablemcsvw_claim_breakdown_rpt.mcscrb_remain_amtColumn) = System.Convert.DBNull
        End Sub
        
        Public Function Ismcscrb_remain_dayNull() As Boolean
            Return Me.IsNull(Me.tablemcsvw_claim_breakdown_rpt.mcscrb_remain_dayColumn)
        End Function
        
        Public Sub Setmcscrb_remain_dayNull()
            Me(Me.tablemcsvw_claim_breakdown_rpt.mcscrb_remain_dayColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class mcsvw_claim_breakdown_rptRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As mcsvw_claim_breakdown_rptRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As mcsvw_claim_breakdown_rptRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As mcsvw_claim_breakdown_rptRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class ProductDataTable
        Inherits DataTable
        Implements System.Collections.IEnumerable
        
        Private columnProductID As DataColumn
        
        Private columnCompanyID As DataColumn
        
        Private columnName As DataColumn
        
        Private columnProductCategory As DataColumn
        
        Private columnProductTypeCode As DataColumn
        
        Private columnDescription As DataColumn
        
        Private columntimestamp As DataColumn
        
        Friend Sub New()
            MyBase.New("Product")
            Me.InitClass
        End Sub
        
        Friend Sub New(ByVal table As DataTable)
            MyBase.New(table.TableName)
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
            Me.DisplayExpression = table.DisplayExpression
        End Sub
        
        <System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        Friend ReadOnly Property ProductIDColumn As DataColumn
            Get
                Return Me.columnProductID
            End Get
        End Property
        
        Friend ReadOnly Property CompanyIDColumn As DataColumn
            Get
                Return Me.columnCompanyID
            End Get
        End Property
        
        Friend ReadOnly Property NameColumn As DataColumn
            Get
                Return Me.columnName
            End Get
        End Property
        
        Friend ReadOnly Property ProductCategoryColumn As DataColumn
            Get
                Return Me.columnProductCategory
            End Get
        End Property
        
        Friend ReadOnly Property ProductTypeCodeColumn As DataColumn
            Get
                Return Me.columnProductTypeCode
            End Get
        End Property
        
        Friend ReadOnly Property DescriptionColumn As DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        Friend ReadOnly Property timestampColumn As DataColumn
            Get
                Return Me.columntimestamp
            End Get
        End Property
        
        Public Default ReadOnly Property Item(ByVal index As Integer) As ProductRow
            Get
                Return CType(Me.Rows(index),ProductRow)
            End Get
        End Property
        
        Public Event ProductRowChanged As ProductRowChangeEventHandler
        
        Public Event ProductRowChanging As ProductRowChangeEventHandler
        
        Public Event ProductRowDeleted As ProductRowChangeEventHandler
        
        Public Event ProductRowDeleting As ProductRowChangeEventHandler
        
        Public Overloads Sub AddProductRow(ByVal row As ProductRow)
            Me.Rows.Add(row)
        End Sub
        
        Public Overloads Function AddProductRow(ByVal ProductID As String, ByVal CompanyID As String, ByVal Name As String, ByVal ProductCategory As String, ByVal ProductTypeCode As String, ByVal Description As String, ByVal timestamp() As Byte) As ProductRow
            Dim rowProductRow As ProductRow = CType(Me.NewRow,ProductRow)
            rowProductRow.ItemArray = New Object() {ProductID, CompanyID, Name, ProductCategory, ProductTypeCode, Description, timestamp}
            Me.Rows.Add(rowProductRow)
            Return rowProductRow
        End Function
        
        Public Function FindByProductID(ByVal ProductID As String) As ProductRow
            Return CType(Me.Rows.Find(New Object() {ProductID}),ProductRow)
        End Function
        
        Public Function GetEnumerator() As System.Collections.IEnumerator Implements System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        Public Overrides Function Clone() As DataTable
            Dim cln As ProductDataTable = CType(MyBase.Clone,ProductDataTable)
            cln.InitVars
            Return cln
        End Function
        
        Protected Overrides Function CreateInstance() As DataTable
            Return New ProductDataTable
        End Function
        
        Friend Sub InitVars()
            Me.columnProductID = Me.Columns("ProductID")
            Me.columnCompanyID = Me.Columns("CompanyID")
            Me.columnName = Me.Columns("Name")
            Me.columnProductCategory = Me.Columns("ProductCategory")
            Me.columnProductTypeCode = Me.Columns("ProductTypeCode")
            Me.columnDescription = Me.Columns("Description")
            Me.columntimestamp = Me.Columns("timestamp")
        End Sub
        
        Private Sub InitClass()
            Me.columnProductID = New DataColumn("ProductID", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnProductID)
            Me.columnCompanyID = New DataColumn("CompanyID", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnCompanyID)
            Me.columnName = New DataColumn("Name", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnName)
            Me.columnProductCategory = New DataColumn("ProductCategory", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnProductCategory)
            Me.columnProductTypeCode = New DataColumn("ProductTypeCode", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnProductTypeCode)
            Me.columnDescription = New DataColumn("Description", GetType(System.String), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columnDescription)
            Me.columntimestamp = New DataColumn("timestamp", GetType(System.Byte()), Nothing, System.Data.MappingType.Element)
            Me.Columns.Add(Me.columntimestamp)
            Me.Constraints.Add(New UniqueConstraint("dsClaimRptKey1", New DataColumn() {Me.columnProductID}, true))
            Me.columnProductID.AllowDBNull = false
            Me.columnProductID.Unique = true
            Me.columntimestamp.ReadOnly = true
        End Sub
        
        Public Function NewProductRow() As ProductRow
            Return CType(Me.NewRow,ProductRow)
        End Function
        
        Protected Overrides Function NewRowFromBuilder(ByVal builder As DataRowBuilder) As DataRow
            Return New ProductRow(builder)
        End Function
        
        Protected Overrides Function GetRowType() As System.Type
            Return GetType(ProductRow)
        End Function
        
        Protected Overrides Sub OnRowChanged(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ProductRowChangedEvent) Is Nothing) Then
                RaiseEvent ProductRowChanged(Me, New ProductRowChangeEvent(CType(e.Row,ProductRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowChanging(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ProductRowChangingEvent) Is Nothing) Then
                RaiseEvent ProductRowChanging(Me, New ProductRowChangeEvent(CType(e.Row,ProductRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleted(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ProductRowDeletedEvent) Is Nothing) Then
                RaiseEvent ProductRowDeleted(Me, New ProductRowChangeEvent(CType(e.Row,ProductRow), e.Action))
            End If
        End Sub
        
        Protected Overrides Sub OnRowDeleting(ByVal e As DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ProductRowDeletingEvent) Is Nothing) Then
                RaiseEvent ProductRowDeleting(Me, New ProductRowChangeEvent(CType(e.Row,ProductRow), e.Action))
            End If
        End Sub
        
        Public Sub RemoveProductRow(ByVal row As ProductRow)
            Me.Rows.Remove(row)
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class ProductRow
        Inherits DataRow
        
        Private tableProduct As ProductDataTable
        
        Friend Sub New(ByVal rb As DataRowBuilder)
            MyBase.New(rb)
            Me.tableProduct = CType(Me.Table,ProductDataTable)
        End Sub
        
        Public Property ProductID As String
            Get
                Return CType(Me(Me.tableProduct.ProductIDColumn),String)
            End Get
            Set
                Me(Me.tableProduct.ProductIDColumn) = value
            End Set
        End Property
        
        Public Property CompanyID As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct.CompanyIDColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct.CompanyIDColumn) = value
            End Set
        End Property
        
        Public Property Name As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct.NameColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct.NameColumn) = value
            End Set
        End Property
        
        Public Property ProductCategory As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct.ProductCategoryColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct.ProductCategoryColumn) = value
            End Set
        End Property
        
        Public Property ProductTypeCode As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct.ProductTypeCodeColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct.ProductTypeCodeColumn) = value
            End Set
        End Property
        
        Public Property Description As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct.DescriptionColumn),String)
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct.DescriptionColumn) = value
            End Set
        End Property
        
        Public Property timestamp As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableProduct.timestampColumn),Byte())
                Catch e As InvalidCastException
                    Throw New StrongTypingException("Cannot get value because it is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct.timestampColumn) = value
            End Set
        End Property
        
        Public Function IsCompanyIDNull() As Boolean
            Return Me.IsNull(Me.tableProduct.CompanyIDColumn)
        End Function
        
        Public Sub SetCompanyIDNull()
            Me(Me.tableProduct.CompanyIDColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsNameNull() As Boolean
            Return Me.IsNull(Me.tableProduct.NameColumn)
        End Function
        
        Public Sub SetNameNull()
            Me(Me.tableProduct.NameColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsProductCategoryNull() As Boolean
            Return Me.IsNull(Me.tableProduct.ProductCategoryColumn)
        End Function
        
        Public Sub SetProductCategoryNull()
            Me(Me.tableProduct.ProductCategoryColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsProductTypeCodeNull() As Boolean
            Return Me.IsNull(Me.tableProduct.ProductTypeCodeColumn)
        End Function
        
        Public Sub SetProductTypeCodeNull()
            Me(Me.tableProduct.ProductTypeCodeColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableProduct.DescriptionColumn)
        End Function
        
        Public Sub SetDescriptionNull()
            Me(Me.tableProduct.DescriptionColumn) = System.Convert.DBNull
        End Sub
        
        Public Function IstimestampNull() As Boolean
            Return Me.IsNull(Me.tableProduct.timestampColumn)
        End Function
        
        Public Sub SettimestampNull()
            Me(Me.tableProduct.timestampColumn) = System.Convert.DBNull
        End Sub
    End Class
    
    <System.Diagnostics.DebuggerStepThrough()>  _
    Public Class ProductRowChangeEvent
        Inherits EventArgs
        
        Private eventRow As ProductRow
        
        Private eventAction As DataRowAction
        
        Public Sub New(ByVal row As ProductRow, ByVal action As DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        Public ReadOnly Property Row As ProductRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        Public ReadOnly Property Action As DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
