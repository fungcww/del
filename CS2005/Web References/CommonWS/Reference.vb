'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace CommonWS
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="ServiceSoap", [Namespace]:="http://inglife.com.hk/"),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(SchemaObject)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(SerializableAlternateView()))>  _
    Partial Public Class Service
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private smsSubmissionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private smsXgateSubmissionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private dBSOAPHeaderValueField As DBSOAPHeader
        
        Private GetExchangeRateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getPendingRequestItemsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAggregateInfoWithValidateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAggregateProductGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCswTransHeaderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAggregateInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAggregateValidationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAggregateValidationWithNewBoosterOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getUWCommentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getBranchOfficeCodeByUserIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFundInfoFromRMOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UploadAccVerRNTFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UploadTransUploadRNTFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDailyAcountVerificationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTransRecordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidateCupPaymentInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDailyTransFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFundDisclaimerCodeTableOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendExternalMailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.CS2005.My.MySettings.Default.CS2005_CommonWS_Service
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Property DBSOAPHeaderValue() As DBSOAPHeader
            Get
                Return Me.dBSOAPHeaderValueField
            End Get
            Set
                Me.dBSOAPHeaderValueField = value
            End Set
        End Property
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event smsSubmissionCompleted As smsSubmissionCompletedEventHandler
        
        '''<remarks/>
        Public Event smsXgateSubmissionCompleted As smsXgateSubmissionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetExchangeRateCompleted As GetExchangeRateCompletedEventHandler
        
        '''<remarks/>
        Public Event getPendingRequestItemsCompleted As getPendingRequestItemsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAggregateInfoWithValidateCompleted As GetAggregateInfoWithValidateCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAggregateProductGroupCompleted As GetAggregateProductGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCswTransHeaderCompleted As UpdateCswTransHeaderCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAggregateInfoCompleted As GetAggregateInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAggregateValidationCompleted As GetAggregateValidationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAggregateValidationWithNewBoosterCompleted As GetAggregateValidationWithNewBoosterCompletedEventHandler
        
        '''<remarks/>
        Public Event getUWCommentCompleted As getUWCommentCompletedEventHandler
        
        '''<remarks/>
        Public Event getBranchOfficeCodeByUserIDCompleted As getBranchOfficeCodeByUserIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFundInfoFromRMCompleted As GetFundInfoFromRMCompletedEventHandler
        
        '''<remarks/>
        Public Event UploadAccVerRNTFileCompleted As UploadAccVerRNTFileCompletedEventHandler
        
        '''<remarks/>
        Public Event UploadTransUploadRNTFileCompleted As UploadTransUploadRNTFileCompletedEventHandler
        
        '''<remarks/>
        Public Event getDailyAcountVerificationCompleted As getDailyAcountVerificationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTransRecordCompleted As GetTransRecordCompletedEventHandler
        
        '''<remarks/>
        Public Event ValidateCupPaymentInfoCompleted As ValidateCupPaymentInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event getDailyTransFileCompleted As getDailyTransFileCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFundDisclaimerCodeTableCompleted As GetFundDisclaimerCodeTableCompletedEventHandler
        
        '''<remarks/>
        Public Event SendExternalMailCompleted As SendExternalMailCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://inglife.com.hk/smsSubmission", RequestNamespace:="http://inglife.com.hk/", ResponseNamespace:="http://inglife.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function smsSubmission(ByVal pCompID As String, ByVal pStrUser As String, ByVal pStrEnv As String, ByVal plngCustNo As Long, ByVal pstrAgtNo As String, ByVal pdateEffDate As Date, ByVal pdateExpDate As Date, ByVal pstrMsgCat As String, ByVal pstrMsg As String, ByVal pstrPolNo As String, ByRef pstrRefNo As String, ByRef pintReqNo As Integer, ByRef strErr As String) As Integer
            Dim results() As Object = Me.Invoke("smsSubmission", New Object() {pCompID, pStrUser, pStrEnv, plngCustNo, pstrAgtNo, pdateEffDate, pdateExpDate, pstrMsgCat, pstrMsg, pstrPolNo, pstrRefNo, pintReqNo, strErr})
            pstrRefNo = CType(results(1),String)
            pintReqNo = CType(results(2),Integer)
            strErr = CType(results(3),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub smsSubmissionAsync(ByVal pCompID As String, ByVal pStrUser As String, ByVal pStrEnv As String, ByVal plngCustNo As Long, ByVal pstrAgtNo As String, ByVal pdateEffDate As Date, ByVal pdateExpDate As Date, ByVal pstrMsgCat As String, ByVal pstrMsg As String, ByVal pstrPolNo As String, ByVal pstrRefNo As String, ByVal pintReqNo As Integer, ByVal strErr As String)
            Me.smsSubmissionAsync(pCompID, pStrUser, pStrEnv, plngCustNo, pstrAgtNo, pdateEffDate, pdateExpDate, pstrMsgCat, pstrMsg, pstrPolNo, pstrRefNo, pintReqNo, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub smsSubmissionAsync(ByVal pCompID As String, ByVal pStrUser As String, ByVal pStrEnv As String, ByVal plngCustNo As Long, ByVal pstrAgtNo As String, ByVal pdateEffDate As Date, ByVal pdateExpDate As Date, ByVal pstrMsgCat As String, ByVal pstrMsg As String, ByVal pstrPolNo As String, ByVal pstrRefNo As String, ByVal pintReqNo As Integer, ByVal strErr As String, ByVal userState As Object)
            If (Me.smsSubmissionOperationCompleted Is Nothing) Then
                Me.smsSubmissionOperationCompleted = AddressOf Me.OnsmsSubmissionOperationCompleted
            End If
            Me.InvokeAsync("smsSubmission", New Object() {pCompID, pStrUser, pStrEnv, plngCustNo, pstrAgtNo, pdateEffDate, pdateExpDate, pstrMsgCat, pstrMsg, pstrPolNo, pstrRefNo, pintReqNo, strErr}, Me.smsSubmissionOperationCompleted, userState)
        End Sub
        
        Private Sub OnsmsSubmissionOperationCompleted(ByVal arg As Object)
            If (Not (Me.smsSubmissionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent smsSubmissionCompleted(Me, New smsSubmissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://inglife.com.hk/smsXgateSubmission", RequestNamespace:="http://inglife.com.hk/", ResponseNamespace:="http://inglife.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function smsXgateSubmission(ByVal pCompID As String, ByVal pStrUser As String, ByVal pStrEnv As String, ByVal plngCustNo As Long, ByVal pstrAgtNo As String, ByVal pdateEffDate As Date, ByVal pdateExpDate As Date, ByVal pstrMsgCat As String, ByVal pstrMsg As String, ByVal pstrPolNo As String, ByRef pstrRefNo As String, ByRef pintReqNo As Integer, ByRef strErr As String) As Integer
            Dim results() As Object = Me.Invoke("smsXgateSubmission", New Object() {pCompID, pStrUser, pStrEnv, plngCustNo, pstrAgtNo, pdateEffDate, pdateExpDate, pstrMsgCat, pstrMsg, pstrPolNo, pstrRefNo, pintReqNo, strErr})
            pstrRefNo = CType(results(1),String)
            pintReqNo = CType(results(2),Integer)
            strErr = CType(results(3),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub smsXgateSubmissionAsync(ByVal pCompID As String, ByVal pStrUser As String, ByVal pStrEnv As String, ByVal plngCustNo As Long, ByVal pstrAgtNo As String, ByVal pdateEffDate As Date, ByVal pdateExpDate As Date, ByVal pstrMsgCat As String, ByVal pstrMsg As String, ByVal pstrPolNo As String, ByVal pstrRefNo As String, ByVal pintReqNo As Integer, ByVal strErr As String)
            Me.smsXgateSubmissionAsync(pCompID, pStrUser, pStrEnv, plngCustNo, pstrAgtNo, pdateEffDate, pdateExpDate, pstrMsgCat, pstrMsg, pstrPolNo, pstrRefNo, pintReqNo, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub smsXgateSubmissionAsync(ByVal pCompID As String, ByVal pStrUser As String, ByVal pStrEnv As String, ByVal plngCustNo As Long, ByVal pstrAgtNo As String, ByVal pdateEffDate As Date, ByVal pdateExpDate As Date, ByVal pstrMsgCat As String, ByVal pstrMsg As String, ByVal pstrPolNo As String, ByVal pstrRefNo As String, ByVal pintReqNo As Integer, ByVal strErr As String, ByVal userState As Object)
            If (Me.smsXgateSubmissionOperationCompleted Is Nothing) Then
                Me.smsXgateSubmissionOperationCompleted = AddressOf Me.OnsmsXgateSubmissionOperationCompleted
            End If
            Me.InvokeAsync("smsXgateSubmission", New Object() {pCompID, pStrUser, pStrEnv, plngCustNo, pstrAgtNo, pdateEffDate, pdateExpDate, pstrMsgCat, pstrMsg, pstrPolNo, pstrRefNo, pintReqNo, strErr}, Me.smsXgateSubmissionOperationCompleted, userState)
        End Sub
        
        Private Sub OnsmsXgateSubmissionOperationCompleted(ByVal arg As Object)
            If (Not (Me.smsXgateSubmissionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent smsXgateSubmissionCompleted(Me, New smsXgateSubmissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://inglife.com.hk/GetExchangeRate", RequestNamespace:="http://inglife.com.hk/", ResponseNamespace:="http://inglife.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetExchangeRate(ByVal strUser As String, ByRef strFromCurr As String, ByRef strToCurr As String, ByRef ReceObj As BoSchema_ExchangeRate_Rece_schema, ByRef strErr As String, ByRef dteEffectiveDate As Date, ByRef strRateType As String, ByRef strFixedFunc As String) As Boolean
            Dim results() As Object = Me.Invoke("GetExchangeRate", New Object() {strUser, strFromCurr, strToCurr, ReceObj, strErr, dteEffectiveDate, strRateType, strFixedFunc})
            strFromCurr = CType(results(1),String)
            strToCurr = CType(results(2),String)
            ReceObj = CType(results(3),BoSchema_ExchangeRate_Rece_schema)
            strErr = CType(results(4),String)
            dteEffectiveDate = CType(results(5),Date)
            strRateType = CType(results(6),String)
            strFixedFunc = CType(results(7),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetExchangeRateAsync(ByVal strUser As String, ByVal strFromCurr As String, ByVal strToCurr As String, ByVal ReceObj As BoSchema_ExchangeRate_Rece_schema, ByVal strErr As String, ByVal dteEffectiveDate As Date, ByVal strRateType As String, ByVal strFixedFunc As String)
            Me.GetExchangeRateAsync(strUser, strFromCurr, strToCurr, ReceObj, strErr, dteEffectiveDate, strRateType, strFixedFunc, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetExchangeRateAsync(ByVal strUser As String, ByVal strFromCurr As String, ByVal strToCurr As String, ByVal ReceObj As BoSchema_ExchangeRate_Rece_schema, ByVal strErr As String, ByVal dteEffectiveDate As Date, ByVal strRateType As String, ByVal strFixedFunc As String, ByVal userState As Object)
            If (Me.GetExchangeRateOperationCompleted Is Nothing) Then
                Me.GetExchangeRateOperationCompleted = AddressOf Me.OnGetExchangeRateOperationCompleted
            End If
            Me.InvokeAsync("GetExchangeRate", New Object() {strUser, strFromCurr, strToCurr, ReceObj, strErr, dteEffectiveDate, strRateType, strFixedFunc}, Me.GetExchangeRateOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetExchangeRateOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetExchangeRateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetExchangeRateCompleted(Me, New GetExchangeRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://inglife.com.hk/getPendingRequestItems", RequestNamespace:="http://inglife.com.hk/", ResponseNamespace:="http://inglife.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getPendingRequestItems(ByVal agentNo As String, ByRef dsData As System.Data.DataSet, ByRef strErr As String, ByVal strPolicyNo As String) As Boolean
            Dim results() As Object = Me.Invoke("getPendingRequestItems", New Object() {agentNo, dsData, strErr, strPolicyNo})
            dsData = CType(results(1),System.Data.DataSet)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getPendingRequestItemsAsync(ByVal agentNo As String, ByVal dsData As System.Data.DataSet, ByVal strErr As String, ByVal strPolicyNo As String)
            Me.getPendingRequestItemsAsync(agentNo, dsData, strErr, strPolicyNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPendingRequestItemsAsync(ByVal agentNo As String, ByVal dsData As System.Data.DataSet, ByVal strErr As String, ByVal strPolicyNo As String, ByVal userState As Object)
            If (Me.getPendingRequestItemsOperationCompleted Is Nothing) Then
                Me.getPendingRequestItemsOperationCompleted = AddressOf Me.OngetPendingRequestItemsOperationCompleted
            End If
            Me.InvokeAsync("getPendingRequestItems", New Object() {agentNo, dsData, strErr, strPolicyNo}, Me.getPendingRequestItemsOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPendingRequestItemsOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPendingRequestItemsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPendingRequestItemsCompleted(Me, New getPendingRequestItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://inglife.com.hk/GetAggregateInfoWithValidate", RequestNamespace:="http://inglife.com.hk/", ResponseNamespace:="http://inglife.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAggregateInfoWithValidate(ByVal sendObj As Send_ASIInfo, ByRef receAsiInfoObj As Recp_ASIInfo, ByRef validateObj As Recp_ASIValidation, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("GetAggregateInfoWithValidate", New Object() {sendObj, receAsiInfoObj, validateObj, strErr})
            receAsiInfoObj = CType(results(1),Recp_ASIInfo)
            validateObj = CType(results(2),Recp_ASIValidation)
            strErr = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAggregateInfoWithValidateAsync(ByVal sendObj As Send_ASIInfo, ByVal receAsiInfoObj As Recp_ASIInfo, ByVal validateObj As Recp_ASIValidation, ByVal strErr As String)
            Me.GetAggregateInfoWithValidateAsync(sendObj, receAsiInfoObj, validateObj, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAggregateInfoWithValidateAsync(ByVal sendObj As Send_ASIInfo, ByVal receAsiInfoObj As Recp_ASIInfo, ByVal validateObj As Recp_ASIValidation, ByVal strErr As String, ByVal userState As Object)
            If (Me.GetAggregateInfoWithValidateOperationCompleted Is Nothing) Then
                Me.GetAggregateInfoWithValidateOperationCompleted = AddressOf Me.OnGetAggregateInfoWithValidateOperationCompleted
            End If
            Me.InvokeAsync("GetAggregateInfoWithValidate", New Object() {sendObj, receAsiInfoObj, validateObj, strErr}, Me.GetAggregateInfoWithValidateOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAggregateInfoWithValidateOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAggregateInfoWithValidateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAggregateInfoWithValidateCompleted(Me, New GetAggregateInfoWithValidateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://inglife.com.hk/GetAggregateProductGroup", RequestNamespace:="http://inglife.com.hk/", ResponseNamespace:="http://inglife.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAggregateProductGroup(ByVal strProductId As String, ByRef dsProductList As System.Data.DataSet, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("GetAggregateProductGroup", New Object() {strProductId, dsProductList, strErr})
            dsProductList = CType(results(1),System.Data.DataSet)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAggregateProductGroupAsync(ByVal strProductId As String, ByVal dsProductList As System.Data.DataSet, ByVal strErr As String)
            Me.GetAggregateProductGroupAsync(strProductId, dsProductList, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAggregateProductGroupAsync(ByVal strProductId As String, ByVal dsProductList As System.Data.DataSet, ByVal strErr As String, ByVal userState As Object)
            If (Me.GetAggregateProductGroupOperationCompleted Is Nothing) Then
                Me.GetAggregateProductGroupOperationCompleted = AddressOf Me.OnGetAggregateProductGroupOperationCompleted
            End If
            Me.InvokeAsync("GetAggregateProductGroup", New Object() {strProductId, dsProductList, strErr}, Me.GetAggregateProductGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAggregateProductGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAggregateProductGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAggregateProductGroupCompleted(Me, New GetAggregateProductGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://inglife.com.hk/UpdateCswTransHeader", RequestNamespace:="http://inglife.com.hk/", ResponseNamespace:="http://inglife.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCswTransHeader(ByVal strTransId As String, ByRef strMessage As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateCswTransHeader", New Object() {strTransId, strMessage})
            strMessage = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCswTransHeaderAsync(ByVal strTransId As String, ByVal strMessage As String)
            Me.UpdateCswTransHeaderAsync(strTransId, strMessage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCswTransHeaderAsync(ByVal strTransId As String, ByVal strMessage As String, ByVal userState As Object)
            If (Me.UpdateCswTransHeaderOperationCompleted Is Nothing) Then
                Me.UpdateCswTransHeaderOperationCompleted = AddressOf Me.OnUpdateCswTransHeaderOperationCompleted
            End If
            Me.InvokeAsync("UpdateCswTransHeader", New Object() {strTransId, strMessage}, Me.UpdateCswTransHeaderOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCswTransHeaderOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCswTransHeaderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCswTransHeaderCompleted(Me, New UpdateCswTransHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://inglife.com.hk/GetAggregateInfo", RequestNamespace:="http://inglife.com.hk/", ResponseNamespace:="http://inglife.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAggregateInfo(ByVal sendObj As Send_ASIInfo, ByRef receAsiInfoObj As Recp_ASIInfo, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("GetAggregateInfo", New Object() {sendObj, receAsiInfoObj, strErr})
            receAsiInfoObj = CType(results(1),Recp_ASIInfo)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAggregateInfoAsync(ByVal sendObj As Send_ASIInfo, ByVal receAsiInfoObj As Recp_ASIInfo, ByVal strErr As String)
            Me.GetAggregateInfoAsync(sendObj, receAsiInfoObj, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAggregateInfoAsync(ByVal sendObj As Send_ASIInfo, ByVal receAsiInfoObj As Recp_ASIInfo, ByVal strErr As String, ByVal userState As Object)
            If (Me.GetAggregateInfoOperationCompleted Is Nothing) Then
                Me.GetAggregateInfoOperationCompleted = AddressOf Me.OnGetAggregateInfoOperationCompleted
            End If
            Me.InvokeAsync("GetAggregateInfo", New Object() {sendObj, receAsiInfoObj, strErr}, Me.GetAggregateInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAggregateInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAggregateInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAggregateInfoCompleted(Me, New GetAggregateInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://inglife.com.hk/GetAggregateValidation", RequestNamespace:="http://inglife.com.hk/", ResponseNamespace:="http://inglife.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAggregateValidation(ByVal sendObj As Send_ASIInfo, ByVal sendAsiInfoObj As Recp_ASIInfo, ByRef receAsiValidateObj As Recp_ASIValidation, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("GetAggregateValidation", New Object() {sendObj, sendAsiInfoObj, receAsiValidateObj, strErr})
            receAsiValidateObj = CType(results(1),Recp_ASIValidation)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAggregateValidationAsync(ByVal sendObj As Send_ASIInfo, ByVal sendAsiInfoObj As Recp_ASIInfo, ByVal receAsiValidateObj As Recp_ASIValidation, ByVal strErr As String)
            Me.GetAggregateValidationAsync(sendObj, sendAsiInfoObj, receAsiValidateObj, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAggregateValidationAsync(ByVal sendObj As Send_ASIInfo, ByVal sendAsiInfoObj As Recp_ASIInfo, ByVal receAsiValidateObj As Recp_ASIValidation, ByVal strErr As String, ByVal userState As Object)
            If (Me.GetAggregateValidationOperationCompleted Is Nothing) Then
                Me.GetAggregateValidationOperationCompleted = AddressOf Me.OnGetAggregateValidationOperationCompleted
            End If
            Me.InvokeAsync("GetAggregateValidation", New Object() {sendObj, sendAsiInfoObj, receAsiValidateObj, strErr}, Me.GetAggregateValidationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAggregateValidationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAggregateValidationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAggregateValidationCompleted(Me, New GetAggregateValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://inglife.com.hk/GetAggregateValidationWithNewBooster", RequestNamespace:="http://inglife.com.hk/", ResponseNamespace:="http://inglife.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAggregateValidationWithNewBooster(ByVal sendObj As Send_ASIInfo, ByVal strBoosterPlan As String, ByVal dblBoosterAmount As Double, ByRef receAsiInfoObj As Recp_ASIInfo, ByRef validateObj As Recp_ASIValidation, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("GetAggregateValidationWithNewBooster", New Object() {sendObj, strBoosterPlan, dblBoosterAmount, receAsiInfoObj, validateObj, strErr})
            receAsiInfoObj = CType(results(1),Recp_ASIInfo)
            validateObj = CType(results(2),Recp_ASIValidation)
            strErr = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAggregateValidationWithNewBoosterAsync(ByVal sendObj As Send_ASIInfo, ByVal strBoosterPlan As String, ByVal dblBoosterAmount As Double, ByVal receAsiInfoObj As Recp_ASIInfo, ByVal validateObj As Recp_ASIValidation, ByVal strErr As String)
            Me.GetAggregateValidationWithNewBoosterAsync(sendObj, strBoosterPlan, dblBoosterAmount, receAsiInfoObj, validateObj, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAggregateValidationWithNewBoosterAsync(ByVal sendObj As Send_ASIInfo, ByVal strBoosterPlan As String, ByVal dblBoosterAmount As Double, ByVal receAsiInfoObj As Recp_ASIInfo, ByVal validateObj As Recp_ASIValidation, ByVal strErr As String, ByVal userState As Object)
            If (Me.GetAggregateValidationWithNewBoosterOperationCompleted Is Nothing) Then
                Me.GetAggregateValidationWithNewBoosterOperationCompleted = AddressOf Me.OnGetAggregateValidationWithNewBoosterOperationCompleted
            End If
            Me.InvokeAsync("GetAggregateValidationWithNewBooster", New Object() {sendObj, strBoosterPlan, dblBoosterAmount, receAsiInfoObj, validateObj, strErr}, Me.GetAggregateValidationWithNewBoosterOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAggregateValidationWithNewBoosterOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAggregateValidationWithNewBoosterCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAggregateValidationWithNewBoosterCompleted(Me, New GetAggregateValidationWithNewBoosterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://inglife.com.hk/getUWComment", RequestNamespace:="http://inglife.com.hk/", ResponseNamespace:="http://inglife.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getUWComment(ByVal agentNo As String, ByVal strPolicyNo As String, ByRef dsData As System.Data.DataSet, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("getUWComment", New Object() {agentNo, strPolicyNo, dsData, strErr})
            dsData = CType(results(1),System.Data.DataSet)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getUWCommentAsync(ByVal agentNo As String, ByVal strPolicyNo As String, ByVal dsData As System.Data.DataSet, ByVal strErr As String)
            Me.getUWCommentAsync(agentNo, strPolicyNo, dsData, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getUWCommentAsync(ByVal agentNo As String, ByVal strPolicyNo As String, ByVal dsData As System.Data.DataSet, ByVal strErr As String, ByVal userState As Object)
            If (Me.getUWCommentOperationCompleted Is Nothing) Then
                Me.getUWCommentOperationCompleted = AddressOf Me.OngetUWCommentOperationCompleted
            End If
            Me.InvokeAsync("getUWComment", New Object() {agentNo, strPolicyNo, dsData, strErr}, Me.getUWCommentOperationCompleted, userState)
        End Sub
        
        Private Sub OngetUWCommentOperationCompleted(ByVal arg As Object)
            If (Not (Me.getUWCommentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getUWCommentCompleted(Me, New getUWCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://inglife.com.hk/getBranchOfficeCodeByUserID", RequestNamespace:="http://inglife.com.hk/", ResponseNamespace:="http://inglife.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getBranchOfficeCodeByUserID(ByVal strUserID As String, ByRef dsData As System.Data.DataSet, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("getBranchOfficeCodeByUserID", New Object() {strUserID, dsData, strErr})
            dsData = CType(results(1),System.Data.DataSet)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getBranchOfficeCodeByUserIDAsync(ByVal strUserID As String, ByVal dsData As System.Data.DataSet, ByVal strErr As String)
            Me.getBranchOfficeCodeByUserIDAsync(strUserID, dsData, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBranchOfficeCodeByUserIDAsync(ByVal strUserID As String, ByVal dsData As System.Data.DataSet, ByVal strErr As String, ByVal userState As Object)
            If (Me.getBranchOfficeCodeByUserIDOperationCompleted Is Nothing) Then
                Me.getBranchOfficeCodeByUserIDOperationCompleted = AddressOf Me.OngetBranchOfficeCodeByUserIDOperationCompleted
            End If
            Me.InvokeAsync("getBranchOfficeCodeByUserID", New Object() {strUserID, dsData, strErr}, Me.getBranchOfficeCodeByUserIDOperationCompleted, userState)
        End Sub
        
        Private Sub OngetBranchOfficeCodeByUserIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.getBranchOfficeCodeByUserIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getBranchOfficeCodeByUserIDCompleted(Me, New getBranchOfficeCodeByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://inglife.com.hk/GetFundInfoFromRM", RequestNamespace:="http://inglife.com.hk/", ResponseNamespace:="http://inglife.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFundInfoFromRM(ByVal fundCode As String, ByRef dsData As System.Data.DataSet, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("GetFundInfoFromRM", New Object() {fundCode, dsData, strErr})
            dsData = CType(results(1),System.Data.DataSet)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFundInfoFromRMAsync(ByVal fundCode As String, ByVal dsData As System.Data.DataSet, ByVal strErr As String)
            Me.GetFundInfoFromRMAsync(fundCode, dsData, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFundInfoFromRMAsync(ByVal fundCode As String, ByVal dsData As System.Data.DataSet, ByVal strErr As String, ByVal userState As Object)
            If (Me.GetFundInfoFromRMOperationCompleted Is Nothing) Then
                Me.GetFundInfoFromRMOperationCompleted = AddressOf Me.OnGetFundInfoFromRMOperationCompleted
            End If
            Me.InvokeAsync("GetFundInfoFromRM", New Object() {fundCode, dsData, strErr}, Me.GetFundInfoFromRMOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFundInfoFromRMOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFundInfoFromRMCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFundInfoFromRMCompleted(Me, New GetFundInfoFromRMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://inglife.com.hk/UploadAccVerRNTFile", RequestNamespace:="http://inglife.com.hk/", ResponseNamespace:="http://inglife.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UploadAccVerRNTFile(ByRef strErr As String, ByVal FileName As String, ByVal FileContent As String) As Boolean
            Dim results() As Object = Me.Invoke("UploadAccVerRNTFile", New Object() {strErr, FileName, FileContent})
            strErr = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UploadAccVerRNTFileAsync(ByVal strErr As String, ByVal FileName As String, ByVal FileContent As String)
            Me.UploadAccVerRNTFileAsync(strErr, FileName, FileContent, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UploadAccVerRNTFileAsync(ByVal strErr As String, ByVal FileName As String, ByVal FileContent As String, ByVal userState As Object)
            If (Me.UploadAccVerRNTFileOperationCompleted Is Nothing) Then
                Me.UploadAccVerRNTFileOperationCompleted = AddressOf Me.OnUploadAccVerRNTFileOperationCompleted
            End If
            Me.InvokeAsync("UploadAccVerRNTFile", New Object() {strErr, FileName, FileContent}, Me.UploadAccVerRNTFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnUploadAccVerRNTFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.UploadAccVerRNTFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UploadAccVerRNTFileCompleted(Me, New UploadAccVerRNTFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://inglife.com.hk/UploadTransUploadRNTFile", RequestNamespace:="http://inglife.com.hk/", ResponseNamespace:="http://inglife.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UploadTransUploadRNTFile(ByRef strErr As String, ByVal FileName As String, ByVal FileContent As String) As Boolean
            Dim results() As Object = Me.Invoke("UploadTransUploadRNTFile", New Object() {strErr, FileName, FileContent})
            strErr = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UploadTransUploadRNTFileAsync(ByVal strErr As String, ByVal FileName As String, ByVal FileContent As String)
            Me.UploadTransUploadRNTFileAsync(strErr, FileName, FileContent, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UploadTransUploadRNTFileAsync(ByVal strErr As String, ByVal FileName As String, ByVal FileContent As String, ByVal userState As Object)
            If (Me.UploadTransUploadRNTFileOperationCompleted Is Nothing) Then
                Me.UploadTransUploadRNTFileOperationCompleted = AddressOf Me.OnUploadTransUploadRNTFileOperationCompleted
            End If
            Me.InvokeAsync("UploadTransUploadRNTFile", New Object() {strErr, FileName, FileContent}, Me.UploadTransUploadRNTFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnUploadTransUploadRNTFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.UploadTransUploadRNTFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UploadTransUploadRNTFileCompleted(Me, New UploadTransUploadRNTFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://inglife.com.hk/getDailyAcountVerification", RequestNamespace:="http://inglife.com.hk/", ResponseNamespace:="http://inglife.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDailyAcountVerification(ByRef strErr As String, ByVal TranDate As Date, ByRef strFileName As String, ByRef FileContent As String, ByVal strUserName As String) As Boolean
            Dim results() As Object = Me.Invoke("getDailyAcountVerification", New Object() {strErr, TranDate, strFileName, FileContent, strUserName})
            strErr = CType(results(1),String)
            strFileName = CType(results(2),String)
            FileContent = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDailyAcountVerificationAsync(ByVal strErr As String, ByVal TranDate As Date, ByVal strFileName As String, ByVal FileContent As String, ByVal strUserName As String)
            Me.getDailyAcountVerificationAsync(strErr, TranDate, strFileName, FileContent, strUserName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDailyAcountVerificationAsync(ByVal strErr As String, ByVal TranDate As Date, ByVal strFileName As String, ByVal FileContent As String, ByVal strUserName As String, ByVal userState As Object)
            If (Me.getDailyAcountVerificationOperationCompleted Is Nothing) Then
                Me.getDailyAcountVerificationOperationCompleted = AddressOf Me.OngetDailyAcountVerificationOperationCompleted
            End If
            Me.InvokeAsync("getDailyAcountVerification", New Object() {strErr, TranDate, strFileName, FileContent, strUserName}, Me.getDailyAcountVerificationOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDailyAcountVerificationOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDailyAcountVerificationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDailyAcountVerificationCompleted(Me, New getDailyAcountVerificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://inglife.com.hk/GetTransRecord", RequestNamespace:="http://inglife.com.hk/", ResponseNamespace:="http://inglife.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTransRecord(ByVal System As String, ByVal StartDate As String, ByVal EndDate As String, ByVal PolicyNo As String, ByRef strErr As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetTransRecord", New Object() {System, StartDate, EndDate, PolicyNo, strErr})
            strErr = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTransRecordAsync(ByVal System As String, ByVal StartDate As String, ByVal EndDate As String, ByVal PolicyNo As String, ByVal strErr As String)
            Me.GetTransRecordAsync(System, StartDate, EndDate, PolicyNo, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTransRecordAsync(ByVal System As String, ByVal StartDate As String, ByVal EndDate As String, ByVal PolicyNo As String, ByVal strErr As String, ByVal userState As Object)
            If (Me.GetTransRecordOperationCompleted Is Nothing) Then
                Me.GetTransRecordOperationCompleted = AddressOf Me.OnGetTransRecordOperationCompleted
            End If
            Me.InvokeAsync("GetTransRecord", New Object() {System, StartDate, EndDate, PolicyNo, strErr}, Me.GetTransRecordOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTransRecordOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTransRecordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTransRecordCompleted(Me, New GetTransRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://inglife.com.hk/ValidateCupPaymentInfo", RequestNamespace:="http://inglife.com.hk/", ResponseNamespace:="http://inglife.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ValidateCupPaymentInfo(ByVal strPolicyNo As String, ByVal strPaymentCurrency As String, ByVal dblPaymentAmount As Double, ByVal strBankCode As String, ByVal strProvince As String, ByVal strCity As String, ByVal strAccountNo As String, ByVal strExpiryDate As String, ByVal strIdNo As String, ByVal strIdType As String, ByVal strTranditionalChineseName As String, ByVal strSimpifiedChineseName As String, ByRef strError As String) As Boolean
            Dim results() As Object = Me.Invoke("ValidateCupPaymentInfo", New Object() {strPolicyNo, strPaymentCurrency, dblPaymentAmount, strBankCode, strProvince, strCity, strAccountNo, strExpiryDate, strIdNo, strIdType, strTranditionalChineseName, strSimpifiedChineseName, strError})
            strError = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ValidateCupPaymentInfoAsync(ByVal strPolicyNo As String, ByVal strPaymentCurrency As String, ByVal dblPaymentAmount As Double, ByVal strBankCode As String, ByVal strProvince As String, ByVal strCity As String, ByVal strAccountNo As String, ByVal strExpiryDate As String, ByVal strIdNo As String, ByVal strIdType As String, ByVal strTranditionalChineseName As String, ByVal strSimpifiedChineseName As String, ByVal strError As String)
            Me.ValidateCupPaymentInfoAsync(strPolicyNo, strPaymentCurrency, dblPaymentAmount, strBankCode, strProvince, strCity, strAccountNo, strExpiryDate, strIdNo, strIdType, strTranditionalChineseName, strSimpifiedChineseName, strError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ValidateCupPaymentInfoAsync(ByVal strPolicyNo As String, ByVal strPaymentCurrency As String, ByVal dblPaymentAmount As Double, ByVal strBankCode As String, ByVal strProvince As String, ByVal strCity As String, ByVal strAccountNo As String, ByVal strExpiryDate As String, ByVal strIdNo As String, ByVal strIdType As String, ByVal strTranditionalChineseName As String, ByVal strSimpifiedChineseName As String, ByVal strError As String, ByVal userState As Object)
            If (Me.ValidateCupPaymentInfoOperationCompleted Is Nothing) Then
                Me.ValidateCupPaymentInfoOperationCompleted = AddressOf Me.OnValidateCupPaymentInfoOperationCompleted
            End If
            Me.InvokeAsync("ValidateCupPaymentInfo", New Object() {strPolicyNo, strPaymentCurrency, dblPaymentAmount, strBankCode, strProvince, strCity, strAccountNo, strExpiryDate, strIdNo, strIdType, strTranditionalChineseName, strSimpifiedChineseName, strError}, Me.ValidateCupPaymentInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnValidateCupPaymentInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidateCupPaymentInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidateCupPaymentInfoCompleted(Me, New ValidateCupPaymentInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://inglife.com.hk/getDailyTransFile", RequestNamespace:="http://inglife.com.hk/", ResponseNamespace:="http://inglife.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDailyTransFile(ByRef strErr As String, ByVal Currency As String, ByVal System As String, ByVal TranDate As Date, ByRef strFileName As String, ByRef ResultText As String, ByVal strUserName As String) As Boolean
            Dim results() As Object = Me.Invoke("getDailyTransFile", New Object() {strErr, Currency, System, TranDate, strFileName, ResultText, strUserName})
            strErr = CType(results(1),String)
            strFileName = CType(results(2),String)
            ResultText = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDailyTransFileAsync(ByVal strErr As String, ByVal Currency As String, ByVal System As String, ByVal TranDate As Date, ByVal strFileName As String, ByVal ResultText As String, ByVal strUserName As String)
            Me.getDailyTransFileAsync(strErr, Currency, System, TranDate, strFileName, ResultText, strUserName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDailyTransFileAsync(ByVal strErr As String, ByVal Currency As String, ByVal System As String, ByVal TranDate As Date, ByVal strFileName As String, ByVal ResultText As String, ByVal strUserName As String, ByVal userState As Object)
            If (Me.getDailyTransFileOperationCompleted Is Nothing) Then
                Me.getDailyTransFileOperationCompleted = AddressOf Me.OngetDailyTransFileOperationCompleted
            End If
            Me.InvokeAsync("getDailyTransFile", New Object() {strErr, Currency, System, TranDate, strFileName, ResultText, strUserName}, Me.getDailyTransFileOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDailyTransFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDailyTransFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDailyTransFileCompleted(Me, New getDailyTransFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://inglife.com.hk/GetFundDisclaimerCodeTable", RequestNamespace:="http://inglife.com.hk/", ResponseNamespace:="http://inglife.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFundDisclaimerCodeTable(ByRef dsData As System.Data.DataSet, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("GetFundDisclaimerCodeTable", New Object() {dsData, strErr})
            dsData = CType(results(1),System.Data.DataSet)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFundDisclaimerCodeTableAsync(ByVal dsData As System.Data.DataSet, ByVal strErr As String)
            Me.GetFundDisclaimerCodeTableAsync(dsData, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFundDisclaimerCodeTableAsync(ByVal dsData As System.Data.DataSet, ByVal strErr As String, ByVal userState As Object)
            If (Me.GetFundDisclaimerCodeTableOperationCompleted Is Nothing) Then
                Me.GetFundDisclaimerCodeTableOperationCompleted = AddressOf Me.OnGetFundDisclaimerCodeTableOperationCompleted
            End If
            Me.InvokeAsync("GetFundDisclaimerCodeTable", New Object() {dsData, strErr}, Me.GetFundDisclaimerCodeTableOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFundDisclaimerCodeTableOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFundDisclaimerCodeTableCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFundDisclaimerCodeTableCompleted(Me, New GetFundDisclaimerCodeTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://inglife.com.hk/SendExternalMail", RequestNamespace:="http://inglife.com.hk/", ResponseNamespace:="http://inglife.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub SendExternalMail(ByVal mail As SerializableMailMessage)
            Me.Invoke("SendExternalMail", New Object() {mail})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendExternalMailAsync(ByVal mail As SerializableMailMessage)
            Me.SendExternalMailAsync(mail, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendExternalMailAsync(ByVal mail As SerializableMailMessage, ByVal userState As Object)
            If (Me.SendExternalMailOperationCompleted Is Nothing) Then
                Me.SendExternalMailOperationCompleted = AddressOf Me.OnSendExternalMailOperationCompleted
            End If
            Me.InvokeAsync("SendExternalMail", New Object() {mail}, Me.SendExternalMailOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendExternalMailOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendExternalMailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendExternalMailCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://inglife.com.hk/"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://inglife.com.hk/", IsNullable:=false)>  _
    Partial Public Class DBSOAPHeader
        Inherits System.Web.Services.Protocols.SoapHeader
        
        Private projectField As String
        
        Private connectionAliasField As String
        
        Private userField As String
        
        Private userTypeField As String
        
        Private envField As String
        
        Private compField As String
        
        Private cIWProjectField As String
        
        Private cIWConnectionAliasField As String
        
        Private cIWUserField As String
        
        Private cIWEnvField As String
        
        Private cIWCompField As String
        
        Private anyAttrField() As System.Xml.XmlAttribute
        
        '''<remarks/>
        Public Property Project() As String
            Get
                Return Me.projectField
            End Get
            Set
                Me.projectField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ConnectionAlias() As String
            Get
                Return Me.connectionAliasField
            End Get
            Set
                Me.connectionAliasField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property User() As String
            Get
                Return Me.userField
            End Get
            Set
                Me.userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserType() As String
            Get
                Return Me.userTypeField
            End Get
            Set
                Me.userTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Env() As String
            Get
                Return Me.envField
            End Get
            Set
                Me.envField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Comp() As String
            Get
                Return Me.compField
            End Get
            Set
                Me.compField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CIWProject() As String
            Get
                Return Me.cIWProjectField
            End Get
            Set
                Me.cIWProjectField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CIWConnectionAlias() As String
            Get
                Return Me.cIWConnectionAliasField
            End Get
            Set
                Me.cIWConnectionAliasField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CIWUser() As String
            Get
                Return Me.cIWUserField
            End Get
            Set
                Me.cIWUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CIWEnv() As String
            Get
                Return Me.cIWEnvField
            End Get
            Set
                Me.cIWEnvField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CIWComp() As String
            Get
                Return Me.cIWCompField
            End Get
            Set
                Me.cIWCompField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAnyAttributeAttribute()>  _
        Public Property AnyAttr() As System.Xml.XmlAttribute()
            Get
                Return Me.anyAttrField
            End Get
            Set
                Me.anyAttrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://inglife.com.hk/")>  _
    Partial Public Class SerializableContentDisposition
        
        Private creationDateField As Date
        
        Private dispositionTypeField As String
        
        Private fileNameField As String
        
        Private inlineField As Boolean
        
        Private modificationDateField As Date
        
        Private readDateField As Date
        
        Private sizeField As Long
        
        Private parametersField As System.Data.DataSet
        
        '''<remarks/>
        Public Property CreationDate() As Date
            Get
                Return Me.creationDateField
            End Get
            Set
                Me.creationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DispositionType() As String
            Get
                Return Me.dispositionTypeField
            End Get
            Set
                Me.dispositionTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FileName() As String
            Get
                Return Me.fileNameField
            End Get
            Set
                Me.fileNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Inline() As Boolean
            Get
                Return Me.inlineField
            End Get
            Set
                Me.inlineField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ModificationDate() As Date
            Get
                Return Me.modificationDateField
            End Get
            Set
                Me.modificationDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReadDate() As Date
            Get
                Return Me.readDateField
            End Get
            Set
                Me.readDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Size() As Long
            Get
                Return Me.sizeField
            End Get
            Set
                Me.sizeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Parameters() As System.Data.DataSet
            Get
                Return Me.parametersField
            End Get
            Set
                Me.parametersField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://inglife.com.hk/")>  _
    Partial Public Class SerializableAttachment
        
        Private contentIdField As String
        
        Private contentDispositionField As SerializableContentDisposition
        
        Private contentTypeField As SerializableContentType
        
        Private contentStreamField() As Byte
        
        Private transferEncodingField As TransferEncoding
        
        Private nameField As String
        
        Private nameEncodingField As Encoding
        
        '''<remarks/>
        Public Property ContentId() As String
            Get
                Return Me.contentIdField
            End Get
            Set
                Me.contentIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContentDisposition() As SerializableContentDisposition
            Get
                Return Me.contentDispositionField
            End Get
            Set
                Me.contentDispositionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContentType() As SerializableContentType
            Get
                Return Me.contentTypeField
            End Get
            Set
                Me.contentTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property ContentStream() As Byte()
            Get
                Return Me.contentStreamField
            End Get
            Set
                Me.contentStreamField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TransferEncoding() As TransferEncoding
            Get
                Return Me.transferEncodingField
            End Get
            Set
                Me.transferEncodingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NameEncoding() As Encoding
            Get
                Return Me.nameEncodingField
            End Get
            Set
                Me.nameEncodingField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://inglife.com.hk/")>  _
    Partial Public Class SerializableContentType
        
        Private boundaryField As String
        
        Private charSetField As String
        
        Private mediaTypeField As String
        
        Private nameField As String
        
        Private parametersField As System.Data.DataSet
        
        '''<remarks/>
        Public Property Boundary() As String
            Get
                Return Me.boundaryField
            End Get
            Set
                Me.boundaryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CharSet() As String
            Get
                Return Me.charSetField
            End Get
            Set
                Me.charSetField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MediaType() As String
            Get
                Return Me.mediaTypeField
            End Get
            Set
                Me.mediaTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Parameters() As System.Data.DataSet
            Get
                Return Me.parametersField
            End Get
            Set
                Me.parametersField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://inglife.com.hk/")>  _
    Public Enum TransferEncoding
        
        '''<remarks/>
        QuotedPrintable
        
        '''<remarks/>
        Base64
        
        '''<remarks/>
        SevenBit
        
        '''<remarks/>
        Unknown
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://inglife.com.hk/")>  _
    Partial Public MustInherit Class Encoding
        
        Private encoderFallbackField As EncoderFallback
        
        Private decoderFallbackField As DecoderFallback
        
        '''<remarks/>
        Public Property EncoderFallback() As EncoderFallback
            Get
                Return Me.encoderFallbackField
            End Get
            Set
                Me.encoderFallbackField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DecoderFallback() As DecoderFallback
            Get
                Return Me.decoderFallbackField
            End Get
            Set
                Me.decoderFallbackField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://inglife.com.hk/")>  _
    Partial Public MustInherit Class EncoderFallback
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://inglife.com.hk/")>  _
    Partial Public MustInherit Class DecoderFallback
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://inglife.com.hk/")>  _
    Partial Public Class SerializableAlternateView
        
        Private baseUriField As String
        
        Private contentIdField As String
        
        Private contentStreamField() As Byte
        
        Private contentTypeField As SerializableContentType
        
        Private linkedResourcesField As Object
        
        Private transferEncodingField As TransferEncoding
        
        '''<remarks/>
        Public Property BaseUri() As String
            Get
                Return Me.baseUriField
            End Get
            Set
                Me.baseUriField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContentId() As String
            Get
                Return Me.contentIdField
            End Get
            Set
                Me.contentIdField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property ContentStream() As Byte()
            Get
                Return Me.contentStreamField
            End Get
            Set
                Me.contentStreamField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ContentType() As SerializableContentType
            Get
                Return Me.contentTypeField
            End Get
            Set
                Me.contentTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LinkedResources() As Object
            Get
                Return Me.linkedResourcesField
            End Get
            Set
                Me.linkedResourcesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TransferEncoding() As TransferEncoding
            Get
                Return Me.transferEncodingField
            End Get
            Set
                Me.transferEncodingField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://inglife.com.hk/")>  _
    Partial Public Class SerializableMailAddress
        
        Private addressField As String
        
        Private displayNameField As String
        
        '''<remarks/>
        Public Property Address() As String
            Get
                Return Me.addressField
            End Get
            Set
                Me.addressField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DisplayName() As String
            Get
                Return Me.displayNameField
            End Get
            Set
                Me.displayNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://inglife.com.hk/")>  _
    Partial Public Class SerializableMailMessage
        
        Private isBodyHtmlField As Boolean
        
        Private bodyField As String
        
        Private fromField As SerializableMailAddress
        
        Private senderField As SerializableMailAddress
        
        Private subjectField As String
        
        Private bodyEncodingField As Encoding
        
        Private subjectEncodingField As Encoding
        
        Private deliveryNotificationOptionsField As DeliveryNotificationOptions
        
        Private headersField As System.Data.DataSet
        
        Private priorityField As MailPriority
        
        Private toField() As SerializableMailAddress
        
        Private ccField() As SerializableMailAddress
        
        Private bccField() As SerializableMailAddress
        
        Private replyToField As SerializableMailAddress
        
        Private alternateViewsField() As SerializableAlternateView
        
        Private attachmentsField() As SerializableAttachment
        
        '''<remarks/>
        Public Property IsBodyHtml() As Boolean
            Get
                Return Me.isBodyHtmlField
            End Get
            Set
                Me.isBodyHtmlField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Body() As String
            Get
                Return Me.bodyField
            End Get
            Set
                Me.bodyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property From() As SerializableMailAddress
            Get
                Return Me.fromField
            End Get
            Set
                Me.fromField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Sender() As SerializableMailAddress
            Get
                Return Me.senderField
            End Get
            Set
                Me.senderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Subject() As String
            Get
                Return Me.subjectField
            End Get
            Set
                Me.subjectField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BodyEncoding() As Encoding
            Get
                Return Me.bodyEncodingField
            End Get
            Set
                Me.bodyEncodingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SubjectEncoding() As Encoding
            Get
                Return Me.subjectEncodingField
            End Get
            Set
                Me.subjectEncodingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DeliveryNotificationOptions() As DeliveryNotificationOptions
            Get
                Return Me.deliveryNotificationOptionsField
            End Get
            Set
                Me.deliveryNotificationOptionsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Headers() As System.Data.DataSet
            Get
                Return Me.headersField
            End Get
            Set
                Me.headersField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Priority() As MailPriority
            Get
                Return Me.priorityField
            End Get
            Set
                Me.priorityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property [To]() As SerializableMailAddress()
            Get
                Return Me.toField
            End Get
            Set
                Me.toField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CC() As SerializableMailAddress()
            Get
                Return Me.ccField
            End Get
            Set
                Me.ccField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Bcc() As SerializableMailAddress()
            Get
                Return Me.bccField
            End Get
            Set
                Me.bccField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReplyTo() As SerializableMailAddress
            Get
                Return Me.replyToField
            End Get
            Set
                Me.replyToField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AlternateViews() As SerializableAlternateView()
            Get
                Return Me.alternateViewsField
            End Get
            Set
                Me.alternateViewsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Attachments() As SerializableAttachment()
            Get
                Return Me.attachmentsField
            End Get
            Set
                Me.attachmentsField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.FlagsAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://inglife.com.hk/")>  _
    Public Enum DeliveryNotificationOptions
        
        '''<remarks/>
        None = 1
        
        '''<remarks/>
        OnSuccess = 2
        
        '''<remarks/>
        OnFailure = 4
        
        '''<remarks/>
        Delay = 8
        
        '''<remarks/>
        Never = 16
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://inglife.com.hk/")>  _
    Public Enum MailPriority
        
        '''<remarks/>
        Normal
        
        '''<remarks/>
        Low
        
        '''<remarks/>
        High
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://inglife.com.hk/")>  _
    Partial Public Class Recp_ASIValidation
        
        Private validationField() As String
        
        Private typeField() As String
        
        '''<remarks/>
        Public Property Validation() As String()
            Get
                Return Me.validationField
            End Get
            Set
                Me.validationField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Type() As String()
            Get
                Return Me.typeField
            End Get
            Set
                Me.typeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://inglife.com.hk/")>  _
    Partial Public Class ASIDtlItem
        
        Private aggTypeField As String
        
        Private aggDescriptionField As String
        
        Private aggAmountField As Double
        
        Private polAmountField As Double
        
        '''<remarks/>
        Public Property AggType() As String
            Get
                Return Me.aggTypeField
            End Get
            Set
                Me.aggTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AggDescription() As String
            Get
                Return Me.aggDescriptionField
            End Get
            Set
                Me.aggDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AggAmount() As Double
            Get
                Return Me.aggAmountField
            End Get
            Set
                Me.aggAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PolAmount() As Double
            Get
                Return Me.polAmountField
            End Get
            Set
                Me.polAmountField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://inglife.com.hk/")>  _
    Partial Public Class Recp_ASIInfo
        
        Private currencyField As String
        
        Private customerIdField As String
        
        Private aSIDtlField() As ASIDtlItem
        
        '''<remarks/>
        Public Property Currency() As String
            Get
                Return Me.currencyField
            End Get
            Set
                Me.currencyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustomerId() As String
            Get
                Return Me.customerIdField
            End Get
            Set
                Me.customerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ASIDtl() As ASIDtlItem()
            Get
                Return Me.aSIDtlField
            End Get
            Set
                Me.aSIDtlField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://inglife.com.hk/")>  _
    Partial Public Class Send_ASIInfo
        
        Private policyAccountIdField As String
        
        Private customerIdField As String
        
        Private currencyField As String
        
        '''<remarks/>
        Public Property PolicyAccountId() As String
            Get
                Return Me.policyAccountIdField
            End Get
            Set
                Me.policyAccountIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustomerId() As String
            Get
                Return Me.customerIdField
            End Get
            Set
                Me.customerIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Currency() As String
            Get
                Return Me.currencyField
            End Get
            Set
                Me.currencyField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(SchemaReceiveObject)),  _
     System.Xml.Serialization.XmlIncludeAttribute(GetType(BoSchema_ExchangeRate_Rece_schema)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://inglife.com.hk/")>  _
    Partial Public MustInherit Class SchemaObject
    End Class
    
    '''<remarks/>
    <System.Xml.Serialization.XmlIncludeAttribute(GetType(BoSchema_ExchangeRate_Rece_schema)),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://inglife.com.hk/")>  _
    Partial Public MustInherit Class SchemaReceiveObject
        Inherits SchemaObject
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://inglife.com.hk/")>  _
    Partial Public Class BoSchema_ExchangeRate_Rece_schema
        Inherits SchemaReceiveObject
        
        Private rlfcxr_from_ccyField As String
        
        Private rlfcxr_to_ccyField As String
        
        Private rlfcxr_buy_rateField As Double
        
        Private rlfcxr_sell_rateField As Double
        
        Private errorMessageField As String
        
        '''<remarks/>
        Public Property rlfcxr_from_ccy() As String
            Get
                Return Me.rlfcxr_from_ccyField
            End Get
            Set
                Me.rlfcxr_from_ccyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rlfcxr_to_ccy() As String
            Get
                Return Me.rlfcxr_to_ccyField
            End Get
            Set
                Me.rlfcxr_to_ccyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rlfcxr_buy_rate() As Double
            Get
                Return Me.rlfcxr_buy_rateField
            End Get
            Set
                Me.rlfcxr_buy_rateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property rlfcxr_sell_rate() As Double
            Get
                Return Me.rlfcxr_sell_rateField
            End Get
            Set
                Me.rlfcxr_sell_rateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorMessage() As String
            Get
                Return Me.errorMessageField
            End Get
            Set
                Me.errorMessageField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub smsSubmissionCompletedEventHandler(ByVal sender As Object, ByVal e As smsSubmissionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class smsSubmissionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pstrRefNo() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pintReqNo() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub smsXgateSubmissionCompletedEventHandler(ByVal sender As Object, ByVal e As smsXgateSubmissionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class smsXgateSubmissionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pstrRefNo() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property pintReqNo() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetExchangeRateCompletedEventHandler(ByVal sender As Object, ByVal e As GetExchangeRateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetExchangeRateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strFromCurr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strToCurr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ReceObj() As BoSchema_ExchangeRate_Rece_schema
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),BoSchema_ExchangeRate_Rece_schema)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dteEffectiveDate() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(5),Date)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strRateType() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(6),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strFixedFunc() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(7),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub getPendingRequestItemsCompletedEventHandler(ByVal sender As Object, ByVal e As getPendingRequestItemsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getPendingRequestItemsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetAggregateInfoWithValidateCompletedEventHandler(ByVal sender As Object, ByVal e As GetAggregateInfoWithValidateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAggregateInfoWithValidateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property receAsiInfoObj() As Recp_ASIInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Recp_ASIInfo)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property validateObj() As Recp_ASIValidation
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Recp_ASIValidation)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetAggregateProductGroupCompletedEventHandler(ByVal sender As Object, ByVal e As GetAggregateProductGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAggregateProductGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsProductList() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub UpdateCswTransHeaderCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCswTransHeaderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCswTransHeaderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strMessage() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetAggregateInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetAggregateInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAggregateInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property receAsiInfoObj() As Recp_ASIInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Recp_ASIInfo)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetAggregateValidationCompletedEventHandler(ByVal sender As Object, ByVal e As GetAggregateValidationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAggregateValidationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property receAsiValidateObj() As Recp_ASIValidation
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Recp_ASIValidation)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetAggregateValidationWithNewBoosterCompletedEventHandler(ByVal sender As Object, ByVal e As GetAggregateValidationWithNewBoosterCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAggregateValidationWithNewBoosterCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property receAsiInfoObj() As Recp_ASIInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Recp_ASIInfo)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property validateObj() As Recp_ASIValidation
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Recp_ASIValidation)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub getUWCommentCompletedEventHandler(ByVal sender As Object, ByVal e As getUWCommentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getUWCommentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub getBranchOfficeCodeByUserIDCompletedEventHandler(ByVal sender As Object, ByVal e As getBranchOfficeCodeByUserIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getBranchOfficeCodeByUserIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetFundInfoFromRMCompletedEventHandler(ByVal sender As Object, ByVal e As GetFundInfoFromRMCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFundInfoFromRMCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub UploadAccVerRNTFileCompletedEventHandler(ByVal sender As Object, ByVal e As UploadAccVerRNTFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UploadAccVerRNTFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub UploadTransUploadRNTFileCompletedEventHandler(ByVal sender As Object, ByVal e As UploadTransUploadRNTFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UploadTransUploadRNTFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub getDailyAcountVerificationCompletedEventHandler(ByVal sender As Object, ByVal e As getDailyAcountVerificationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDailyAcountVerificationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strFileName() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property FileContent() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetTransRecordCompletedEventHandler(ByVal sender As Object, ByVal e As GetTransRecordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTransRecordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub ValidateCupPaymentInfoCompletedEventHandler(ByVal sender As Object, ByVal e As ValidateCupPaymentInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ValidateCupPaymentInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub getDailyTransFileCompletedEventHandler(ByVal sender As Object, ByVal e As getDailyTransFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDailyTransFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strFileName() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ResultText() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub GetFundDisclaimerCodeTableCompletedEventHandler(ByVal sender As Object, ByVal e As GetFundDisclaimerCodeTableCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFundDisclaimerCodeTableCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")>  _
    Public Delegate Sub SendExternalMailCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
End Namespace
