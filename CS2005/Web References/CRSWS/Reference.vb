'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace CRSWS
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="CRSWSSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class CRSWS
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private mQSOAPHeaderValueField As MQSOAPHeader
        
        Private GetMandateListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDirDebitEnqOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTranHistOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTranPostingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSubAcctBalEnqOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSubAcctBalPostingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPaymentHistOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckPendingFSWOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPolicyListMCUCIWOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCustomerListMcuOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMcuAgentInfoListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private checkUserRightOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUPSGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAgentAccountListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadComboBoxOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPersonalInfoAddress4McuCustomerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGIPolicyMcuListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private dBSOAPHeaderValueField As DBSOAPHeader
        
        Private GetFundTxHistOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDDRRejectReasonOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckUserPermissionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPrivRSOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMClaimPolicyRecOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMcuMClaimPendingRecOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMcuMClaimBenefitRecOperationCompleted As System.Threading.SendOrPostCallback
        
        Private chkWebsConnetionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMacauDDACCDRStatusCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAplHistMcuRecOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMcuSmsMsgDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMcuSMSPolicyInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMcuQDAPRefundExtraPaymentAlertOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getPendingAgtCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMcuPolicyUWOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getMcuUWOutstandingReqOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetNBRPolicyMcuOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetNCBOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrievePostSalesCallQuestionsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SavePostSalesCallQuestionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IsPostSalesCallQuestionInUseOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeletePostSalesCallQuestionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrievePostSalesCallProductSettingsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrievePostSalesCallProductCategoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdatePostSalesCallProductSettingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddPostSalesCallProductSettingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeletePostSalesCallProductSettingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrievePostSalesCallProductsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CopySalesCallProductSettingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddPostSalesCallProductQuestionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RemovePostSalesCallProductQuestionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetPostSalesCallProductQuestionOrderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IsPostSalesCallProductSettingExistsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCoverageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrievePostSalesCallPolicyQuestionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SavePostSalesCallPolicyAnswerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private IsPostSalesCallCompletedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrieveInvestmentFundOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateFundRiskLevelOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPolicyPostSalesCallTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RetrievePolicyHighRiskFundOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSerLogbyCriteriaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSerLogbyCusIdOrCriteriaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMarkinOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMarkinHistOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPendingMarkinOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPendingMarkinHistOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetReportListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoadFundPopupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRptILASNotificationLetterInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPremCallRptOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetHKFIReportOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPolicyInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPIPHCustomerIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCustomerAndAgentInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPaymentInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ClaimsAuditOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.CS2005.My.MySettings.Default.CS2005_CRSWS_CRSWS
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Property MQSOAPHeaderValue() As MQSOAPHeader
            Get
                Return Me.mQSOAPHeaderValueField
            End Get
            Set
                Me.mQSOAPHeaderValueField = value
            End Set
        End Property
        
        Public Property DBSOAPHeaderValue() As DBSOAPHeader
            Get
                Return Me.dBSOAPHeaderValueField
            End Get
            Set
                Me.dBSOAPHeaderValueField = value
            End Set
        End Property
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetMandateListCompleted As GetMandateListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDirDebitEnqCompleted As GetDirDebitEnqCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTranHistCompleted As GetTranHistCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTranPostingCompleted As GetTranPostingCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSubAcctBalEnqCompleted As GetSubAcctBalEnqCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSubAcctBalPostingCompleted As GetSubAcctBalPostingCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPaymentHistCompleted As GetPaymentHistCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckPendingFSWCompleted As CheckPendingFSWCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPolicyListMCUCIWCompleted As GetPolicyListMCUCIWCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCustomerListMcuCompleted As GetCustomerListMcuCompletedEventHandler
        
        '''<remarks/>
        Public Event getMcuAgentInfoListCompleted As getMcuAgentInfoListCompletedEventHandler
        
        '''<remarks/>
        Public Event checkUserRightCompleted As checkUserRightCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUPSGroupCompleted As GetUPSGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event getAgentAccountListCompleted As getAgentAccountListCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadComboBoxCompleted As LoadComboBoxCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPersonalInfoAddress4McuCustomerCompleted As GetPersonalInfoAddress4McuCustomerCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGIPolicyMcuListCompleted As GetGIPolicyMcuListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFundTxHistCompleted As GetFundTxHistCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDDRRejectReasonCompleted As GetDDRRejectReasonCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckUserPermissionCompleted As CheckUserPermissionCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPrivRSCompleted As GetPrivRSCompletedEventHandler
        
        '''<remarks/>
        Public Event getMClaimPolicyRecCompleted As getMClaimPolicyRecCompletedEventHandler
        
        '''<remarks/>
        Public Event getMcuMClaimPendingRecCompleted As getMcuMClaimPendingRecCompletedEventHandler
        
        '''<remarks/>
        Public Event getMcuMClaimBenefitRecCompleted As getMcuMClaimBenefitRecCompletedEventHandler
        
        '''<remarks/>
        Public Event chkWebsConnetionCompleted As chkWebsConnetionCompletedEventHandler
        
        '''<remarks/>
        Public Event getMacauDDACCDRStatusCodeCompleted As getMacauDDACCDRStatusCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event getAplHistMcuRecCompleted As getAplHistMcuRecCompletedEventHandler
        
        '''<remarks/>
        Public Event getMcuSmsMsgDetailCompleted As getMcuSmsMsgDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event getMcuSMSPolicyInfoCompleted As getMcuSMSPolicyInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event getMcuQDAPRefundExtraPaymentAlertCompleted As getMcuQDAPRefundExtraPaymentAlertCompletedEventHandler
        
        '''<remarks/>
        Public Event getPendingAgtCodeCompleted As getPendingAgtCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event getMcuPolicyUWCompleted As getMcuPolicyUWCompletedEventHandler
        
        '''<remarks/>
        Public Event getMcuUWOutstandingReqCompleted As getMcuUWOutstandingReqCompletedEventHandler
        
        '''<remarks/>
        Public Event GetNBRPolicyMcuCompleted As GetNBRPolicyMcuCompletedEventHandler
        
        '''<remarks/>
        Public Event GetNCBCompleted As GetNCBCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrievePostSalesCallQuestionsCompleted As RetrievePostSalesCallQuestionsCompletedEventHandler
        
        '''<remarks/>
        Public Event SavePostSalesCallQuestionCompleted As SavePostSalesCallQuestionCompletedEventHandler
        
        '''<remarks/>
        Public Event IsPostSalesCallQuestionInUseCompleted As IsPostSalesCallQuestionInUseCompletedEventHandler
        
        '''<remarks/>
        Public Event DeletePostSalesCallQuestionCompleted As DeletePostSalesCallQuestionCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrievePostSalesCallProductSettingsCompleted As RetrievePostSalesCallProductSettingsCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrievePostSalesCallProductCategoryCompleted As RetrievePostSalesCallProductCategoryCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdatePostSalesCallProductSettingCompleted As UpdatePostSalesCallProductSettingCompletedEventHandler
        
        '''<remarks/>
        Public Event AddPostSalesCallProductSettingCompleted As AddPostSalesCallProductSettingCompletedEventHandler
        
        '''<remarks/>
        Public Event DeletePostSalesCallProductSettingCompleted As DeletePostSalesCallProductSettingCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrievePostSalesCallProductsCompleted As RetrievePostSalesCallProductsCompletedEventHandler
        
        '''<remarks/>
        Public Event CopySalesCallProductSettingCompleted As CopySalesCallProductSettingCompletedEventHandler
        
        '''<remarks/>
        Public Event AddPostSalesCallProductQuestionCompleted As AddPostSalesCallProductQuestionCompletedEventHandler
        
        '''<remarks/>
        Public Event RemovePostSalesCallProductQuestionCompleted As RemovePostSalesCallProductQuestionCompletedEventHandler
        
        '''<remarks/>
        Public Event SetPostSalesCallProductQuestionOrderCompleted As SetPostSalesCallProductQuestionOrderCompletedEventHandler
        
        '''<remarks/>
        Public Event IsPostSalesCallProductSettingExistsCompleted As IsPostSalesCallProductSettingExistsCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCoverageCompleted As GetCoverageCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrievePostSalesCallPolicyQuestionCompleted As RetrievePostSalesCallPolicyQuestionCompletedEventHandler
        
        '''<remarks/>
        Public Event SavePostSalesCallPolicyAnswerCompleted As SavePostSalesCallPolicyAnswerCompletedEventHandler
        
        '''<remarks/>
        Public Event IsPostSalesCallCompletedCompleted As IsPostSalesCallCompletedCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrieveInvestmentFundCompleted As RetrieveInvestmentFundCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateFundRiskLevelCompleted As UpdateFundRiskLevelCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPolicyPostSalesCallTypeCompleted As GetPolicyPostSalesCallTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event RetrievePolicyHighRiskFundCompleted As RetrievePolicyHighRiskFundCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSerLogbyCriteriaCompleted As GetSerLogbyCriteriaCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSerLogbyCusIdOrCriteriaCompleted As GetSerLogbyCusIdOrCriteriaCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMarkinCompleted As GetMarkinCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMarkinHistCompleted As GetMarkinHistCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPendingMarkinCompleted As GetPendingMarkinCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPendingMarkinHistCompleted As GetPendingMarkinHistCompletedEventHandler
        
        '''<remarks/>
        Public Event GetReportListCompleted As GetReportListCompletedEventHandler
        
        '''<remarks/>
        Public Event LoadFundPopupCompleted As LoadFundPopupCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRptILASNotificationLetterInfoCompleted As GetRptILASNotificationLetterInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPremCallRptCompleted As GetPremCallRptCompletedEventHandler
        
        '''<remarks/>
        Public Event GetHKFIReportCompleted As GetHKFIReportCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPolicyInfoCompleted As GetPolicyInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPIPHCustomerIDCompleted As GetPIPHCustomerIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCustomerAndAgentInfoCompleted As GetCustomerAndAgentInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPaymentInfoCompleted As GetPaymentInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event ClaimsAuditCompleted As ClaimsAuditCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("MQSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMandateList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMandateList(ByRef dsSendData As System.Data.DataSet, ByRef dsReceData As System.Data.DataSet, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("GetMandateList", New Object() {dsSendData, dsReceData, strErr})
            dsSendData = CType(results(1),System.Data.DataSet)
            dsReceData = CType(results(2),System.Data.DataSet)
            strErr = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMandateListAsync(ByVal dsSendData As System.Data.DataSet, ByVal dsReceData As System.Data.DataSet, ByVal strErr As String)
            Me.GetMandateListAsync(dsSendData, dsReceData, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMandateListAsync(ByVal dsSendData As System.Data.DataSet, ByVal dsReceData As System.Data.DataSet, ByVal strErr As String, ByVal userState As Object)
            If (Me.GetMandateListOperationCompleted Is Nothing) Then
                Me.GetMandateListOperationCompleted = AddressOf Me.OnGetMandateListOperationCompleted
            End If
            Me.InvokeAsync("GetMandateList", New Object() {dsSendData, dsReceData, strErr}, Me.GetMandateListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMandateListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMandateListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMandateListCompleted(Me, New GetMandateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("MQSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDirDebitEnq", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDirDebitEnq(ByRef dsSendData As System.Data.DataSet, ByRef dsReceData As System.Data.DataSet, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("GetDirDebitEnq", New Object() {dsSendData, dsReceData, strErr})
            dsSendData = CType(results(1),System.Data.DataSet)
            dsReceData = CType(results(2),System.Data.DataSet)
            strErr = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDirDebitEnqAsync(ByVal dsSendData As System.Data.DataSet, ByVal dsReceData As System.Data.DataSet, ByVal strErr As String)
            Me.GetDirDebitEnqAsync(dsSendData, dsReceData, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDirDebitEnqAsync(ByVal dsSendData As System.Data.DataSet, ByVal dsReceData As System.Data.DataSet, ByVal strErr As String, ByVal userState As Object)
            If (Me.GetDirDebitEnqOperationCompleted Is Nothing) Then
                Me.GetDirDebitEnqOperationCompleted = AddressOf Me.OnGetDirDebitEnqOperationCompleted
            End If
            Me.InvokeAsync("GetDirDebitEnq", New Object() {dsSendData, dsReceData, strErr}, Me.GetDirDebitEnqOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDirDebitEnqOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDirDebitEnqCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDirDebitEnqCompleted(Me, New GetDirDebitEnqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("MQSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTranHist", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTranHist(ByRef dsSendData As System.Data.DataSet, ByRef dsReceData As System.Data.DataSet, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("GetTranHist", New Object() {dsSendData, dsReceData, strErr})
            dsSendData = CType(results(1),System.Data.DataSet)
            dsReceData = CType(results(2),System.Data.DataSet)
            strErr = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTranHistAsync(ByVal dsSendData As System.Data.DataSet, ByVal dsReceData As System.Data.DataSet, ByVal strErr As String)
            Me.GetTranHistAsync(dsSendData, dsReceData, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTranHistAsync(ByVal dsSendData As System.Data.DataSet, ByVal dsReceData As System.Data.DataSet, ByVal strErr As String, ByVal userState As Object)
            If (Me.GetTranHistOperationCompleted Is Nothing) Then
                Me.GetTranHistOperationCompleted = AddressOf Me.OnGetTranHistOperationCompleted
            End If
            Me.InvokeAsync("GetTranHist", New Object() {dsSendData, dsReceData, strErr}, Me.GetTranHistOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTranHistOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTranHistCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTranHistCompleted(Me, New GetTranHistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("MQSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTranPosting", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTranPosting(ByRef dsSendData As System.Data.DataSet, ByRef dsReceData As System.Data.DataSet, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("GetTranPosting", New Object() {dsSendData, dsReceData, strErr})
            dsSendData = CType(results(1),System.Data.DataSet)
            dsReceData = CType(results(2),System.Data.DataSet)
            strErr = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTranPostingAsync(ByVal dsSendData As System.Data.DataSet, ByVal dsReceData As System.Data.DataSet, ByVal strErr As String)
            Me.GetTranPostingAsync(dsSendData, dsReceData, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTranPostingAsync(ByVal dsSendData As System.Data.DataSet, ByVal dsReceData As System.Data.DataSet, ByVal strErr As String, ByVal userState As Object)
            If (Me.GetTranPostingOperationCompleted Is Nothing) Then
                Me.GetTranPostingOperationCompleted = AddressOf Me.OnGetTranPostingOperationCompleted
            End If
            Me.InvokeAsync("GetTranPosting", New Object() {dsSendData, dsReceData, strErr}, Me.GetTranPostingOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTranPostingOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTranPostingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTranPostingCompleted(Me, New GetTranPostingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("MQSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubAcctBalEnq", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSubAcctBalEnq(ByRef dsSendData As System.Data.DataSet, ByRef dsReceData As System.Data.DataSet, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("GetSubAcctBalEnq", New Object() {dsSendData, dsReceData, strErr})
            dsSendData = CType(results(1),System.Data.DataSet)
            dsReceData = CType(results(2),System.Data.DataSet)
            strErr = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSubAcctBalEnqAsync(ByVal dsSendData As System.Data.DataSet, ByVal dsReceData As System.Data.DataSet, ByVal strErr As String)
            Me.GetSubAcctBalEnqAsync(dsSendData, dsReceData, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSubAcctBalEnqAsync(ByVal dsSendData As System.Data.DataSet, ByVal dsReceData As System.Data.DataSet, ByVal strErr As String, ByVal userState As Object)
            If (Me.GetSubAcctBalEnqOperationCompleted Is Nothing) Then
                Me.GetSubAcctBalEnqOperationCompleted = AddressOf Me.OnGetSubAcctBalEnqOperationCompleted
            End If
            Me.InvokeAsync("GetSubAcctBalEnq", New Object() {dsSendData, dsReceData, strErr}, Me.GetSubAcctBalEnqOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSubAcctBalEnqOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSubAcctBalEnqCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSubAcctBalEnqCompleted(Me, New GetSubAcctBalEnqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("MQSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubAcctBalPosting", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSubAcctBalPosting(ByRef dsSendData As System.Data.DataSet, ByRef dsReceData As System.Data.DataSet, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("GetSubAcctBalPosting", New Object() {dsSendData, dsReceData, strErr})
            dsSendData = CType(results(1),System.Data.DataSet)
            dsReceData = CType(results(2),System.Data.DataSet)
            strErr = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSubAcctBalPostingAsync(ByVal dsSendData As System.Data.DataSet, ByVal dsReceData As System.Data.DataSet, ByVal strErr As String)
            Me.GetSubAcctBalPostingAsync(dsSendData, dsReceData, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSubAcctBalPostingAsync(ByVal dsSendData As System.Data.DataSet, ByVal dsReceData As System.Data.DataSet, ByVal strErr As String, ByVal userState As Object)
            If (Me.GetSubAcctBalPostingOperationCompleted Is Nothing) Then
                Me.GetSubAcctBalPostingOperationCompleted = AddressOf Me.OnGetSubAcctBalPostingOperationCompleted
            End If
            Me.InvokeAsync("GetSubAcctBalPosting", New Object() {dsSendData, dsReceData, strErr}, Me.GetSubAcctBalPostingOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSubAcctBalPostingOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSubAcctBalPostingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSubAcctBalPostingCompleted(Me, New GetSubAcctBalPostingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("MQSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPaymentHist", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPaymentHist(ByRef dsSendData As System.Data.DataSet, ByRef dsReceData As System.Data.DataSet, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("GetPaymentHist", New Object() {dsSendData, dsReceData, strErr})
            dsSendData = CType(results(1),System.Data.DataSet)
            dsReceData = CType(results(2),System.Data.DataSet)
            strErr = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPaymentHistAsync(ByVal dsSendData As System.Data.DataSet, ByVal dsReceData As System.Data.DataSet, ByVal strErr As String)
            Me.GetPaymentHistAsync(dsSendData, dsReceData, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPaymentHistAsync(ByVal dsSendData As System.Data.DataSet, ByVal dsReceData As System.Data.DataSet, ByVal strErr As String, ByVal userState As Object)
            If (Me.GetPaymentHistOperationCompleted Is Nothing) Then
                Me.GetPaymentHistOperationCompleted = AddressOf Me.OnGetPaymentHistOperationCompleted
            End If
            Me.InvokeAsync("GetPaymentHist", New Object() {dsSendData, dsReceData, strErr}, Me.GetPaymentHistOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPaymentHistOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPaymentHistCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPaymentHistCompleted(Me, New GetPaymentHistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("MQSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckPendingFSW", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckPendingFSW(ByRef dsSendData As System.Data.DataSet, ByRef dsReceData As System.Data.DataSet, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("CheckPendingFSW", New Object() {dsSendData, dsReceData, strErr})
            dsSendData = CType(results(1),System.Data.DataSet)
            dsReceData = CType(results(2),System.Data.DataSet)
            strErr = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckPendingFSWAsync(ByVal dsSendData As System.Data.DataSet, ByVal dsReceData As System.Data.DataSet, ByVal strErr As String)
            Me.CheckPendingFSWAsync(dsSendData, dsReceData, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckPendingFSWAsync(ByVal dsSendData As System.Data.DataSet, ByVal dsReceData As System.Data.DataSet, ByVal strErr As String, ByVal userState As Object)
            If (Me.CheckPendingFSWOperationCompleted Is Nothing) Then
                Me.CheckPendingFSWOperationCompleted = AddressOf Me.OnCheckPendingFSWOperationCompleted
            End If
            Me.InvokeAsync("CheckPendingFSW", New Object() {dsSendData, dsReceData, strErr}, Me.CheckPendingFSWOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckPendingFSWOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckPendingFSWCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckPendingFSWCompleted(Me, New CheckPendingFSWCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPolicyListMCUCIW", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPolicyListMCUCIW(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strCustID As String, ByVal strPolicy As String, ByVal strRel As String, ByVal strTable As String, ByVal strCri As String, ByRef lngErrNo As Long, ByRef strErrMsg As String, ByRef intCnt As Integer, ByVal blnCntOnly As Boolean) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetPolicyListMCUCIW", New Object() {strCompanyCode, strEnvCode, strCustID, strPolicy, strRel, strTable, strCri, lngErrNo, strErrMsg, intCnt, blnCntOnly})
            lngErrNo = CType(results(1),Long)
            strErrMsg = CType(results(2),String)
            intCnt = CType(results(3),Integer)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPolicyListMCUCIWAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strCustID As String, ByVal strPolicy As String, ByVal strRel As String, ByVal strTable As String, ByVal strCri As String, ByVal lngErrNo As Long, ByVal strErrMsg As String, ByVal intCnt As Integer, ByVal blnCntOnly As Boolean)
            Me.GetPolicyListMCUCIWAsync(strCompanyCode, strEnvCode, strCustID, strPolicy, strRel, strTable, strCri, lngErrNo, strErrMsg, intCnt, blnCntOnly, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPolicyListMCUCIWAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strCustID As String, ByVal strPolicy As String, ByVal strRel As String, ByVal strTable As String, ByVal strCri As String, ByVal lngErrNo As Long, ByVal strErrMsg As String, ByVal intCnt As Integer, ByVal blnCntOnly As Boolean, ByVal userState As Object)
            If (Me.GetPolicyListMCUCIWOperationCompleted Is Nothing) Then
                Me.GetPolicyListMCUCIWOperationCompleted = AddressOf Me.OnGetPolicyListMCUCIWOperationCompleted
            End If
            Me.InvokeAsync("GetPolicyListMCUCIW", New Object() {strCompanyCode, strEnvCode, strCustID, strPolicy, strRel, strTable, strCri, lngErrNo, strErrMsg, intCnt, blnCntOnly}, Me.GetPolicyListMCUCIWOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPolicyListMCUCIWOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPolicyListMCUCIWCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPolicyListMCUCIWCompleted(Me, New GetPolicyListMCUCIWCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerListMcu", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCustomerListMcu( _
                    ByVal strCompanyCode As String,  _
                    ByVal strEnvCode As String,  _
                    ByVal strLastName As String,  _
                    ByVal strFirstName As String,  _
                    ByVal strHKID As String,  _
                    ByVal strCustID As String,  _
                    ByVal strAgentNo As String,  _
                    ByVal strPlateNumber As String,  _
                    ByVal LastNameVal As String,  _
                    ByVal FirstNameVal As String,  _
                    ByVal HKIDVal As String,  _
                    ByVal CustVal As String,  _
                    ByVal AgentNoVal As String,  _
                    ByVal PlateNumberVal As String,  _
                    ByVal MobileVal As String,  _
                    ByVal EmailVal As String,  _
                    ByVal blnCntOnly As Boolean,  _
                    ByVal strMobile As String,  _
                    ByVal strEmail As String,  _
                    ByRef lngErrNo As Long,  _
                    ByRef strErrMsg As String,  _
                    ByRef intCnt As Integer,  _
                    ByRef dtCusLst As System.Data.DataTable) As Boolean
            Dim results() As Object = Me.Invoke("GetCustomerListMcu", New Object() {strCompanyCode, strEnvCode, strLastName, strFirstName, strHKID, strCustID, strAgentNo, strPlateNumber, LastNameVal, FirstNameVal, HKIDVal, CustVal, AgentNoVal, PlateNumberVal, MobileVal, EmailVal, blnCntOnly, strMobile, strEmail, lngErrNo, strErrMsg, intCnt, dtCusLst})
            lngErrNo = CType(results(1),Long)
            strErrMsg = CType(results(2),String)
            intCnt = CType(results(3),Integer)
            dtCusLst = CType(results(4),System.Data.DataTable)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCustomerListMcuAsync( _
                    ByVal strCompanyCode As String,  _
                    ByVal strEnvCode As String,  _
                    ByVal strLastName As String,  _
                    ByVal strFirstName As String,  _
                    ByVal strHKID As String,  _
                    ByVal strCustID As String,  _
                    ByVal strAgentNo As String,  _
                    ByVal strPlateNumber As String,  _
                    ByVal LastNameVal As String,  _
                    ByVal FirstNameVal As String,  _
                    ByVal HKIDVal As String,  _
                    ByVal CustVal As String,  _
                    ByVal AgentNoVal As String,  _
                    ByVal PlateNumberVal As String,  _
                    ByVal MobileVal As String,  _
                    ByVal EmailVal As String,  _
                    ByVal blnCntOnly As Boolean,  _
                    ByVal strMobile As String,  _
                    ByVal strEmail As String,  _
                    ByVal lngErrNo As Long,  _
                    ByVal strErrMsg As String,  _
                    ByVal intCnt As Integer,  _
                    ByVal dtCusLst As System.Data.DataTable)
            Me.GetCustomerListMcuAsync(strCompanyCode, strEnvCode, strLastName, strFirstName, strHKID, strCustID, strAgentNo, strPlateNumber, LastNameVal, FirstNameVal, HKIDVal, CustVal, AgentNoVal, PlateNumberVal, MobileVal, EmailVal, blnCntOnly, strMobile, strEmail, lngErrNo, strErrMsg, intCnt, dtCusLst, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCustomerListMcuAsync( _
                    ByVal strCompanyCode As String,  _
                    ByVal strEnvCode As String,  _
                    ByVal strLastName As String,  _
                    ByVal strFirstName As String,  _
                    ByVal strHKID As String,  _
                    ByVal strCustID As String,  _
                    ByVal strAgentNo As String,  _
                    ByVal strPlateNumber As String,  _
                    ByVal LastNameVal As String,  _
                    ByVal FirstNameVal As String,  _
                    ByVal HKIDVal As String,  _
                    ByVal CustVal As String,  _
                    ByVal AgentNoVal As String,  _
                    ByVal PlateNumberVal As String,  _
                    ByVal MobileVal As String,  _
                    ByVal EmailVal As String,  _
                    ByVal blnCntOnly As Boolean,  _
                    ByVal strMobile As String,  _
                    ByVal strEmail As String,  _
                    ByVal lngErrNo As Long,  _
                    ByVal strErrMsg As String,  _
                    ByVal intCnt As Integer,  _
                    ByVal dtCusLst As System.Data.DataTable,  _
                    ByVal userState As Object)
            If (Me.GetCustomerListMcuOperationCompleted Is Nothing) Then
                Me.GetCustomerListMcuOperationCompleted = AddressOf Me.OnGetCustomerListMcuOperationCompleted
            End If
            Me.InvokeAsync("GetCustomerListMcu", New Object() {strCompanyCode, strEnvCode, strLastName, strFirstName, strHKID, strCustID, strAgentNo, strPlateNumber, LastNameVal, FirstNameVal, HKIDVal, CustVal, AgentNoVal, PlateNumberVal, MobileVal, EmailVal, blnCntOnly, strMobile, strEmail, lngErrNo, strErrMsg, intCnt, dtCusLst}, Me.GetCustomerListMcuOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCustomerListMcuOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCustomerListMcuCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCustomerListMcuCompleted(Me, New GetCustomerListMcuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMcuAgentInfoList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMcuAgentInfoList(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal g_Comp As String, ByVal serName As String, ByVal strAgtList As String, ByVal camHKLAgtMap As String, ByVal camDB As String, ByVal ds As System.Data.DataSet, ByRef strErrMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("getMcuAgentInfoList", New Object() {strCompanyCode, strEnvCode, g_Comp, serName, strAgtList, camHKLAgtMap, camDB, ds, strErrMsg})
            strErrMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMcuAgentInfoListAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal g_Comp As String, ByVal serName As String, ByVal strAgtList As String, ByVal camHKLAgtMap As String, ByVal camDB As String, ByVal ds As System.Data.DataSet, ByVal strErrMsg As String)
            Me.getMcuAgentInfoListAsync(strCompanyCode, strEnvCode, g_Comp, serName, strAgtList, camHKLAgtMap, camDB, ds, strErrMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMcuAgentInfoListAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal g_Comp As String, ByVal serName As String, ByVal strAgtList As String, ByVal camHKLAgtMap As String, ByVal camDB As String, ByVal ds As System.Data.DataSet, ByVal strErrMsg As String, ByVal userState As Object)
            If (Me.getMcuAgentInfoListOperationCompleted Is Nothing) Then
                Me.getMcuAgentInfoListOperationCompleted = AddressOf Me.OngetMcuAgentInfoListOperationCompleted
            End If
            Me.InvokeAsync("getMcuAgentInfoList", New Object() {strCompanyCode, strEnvCode, g_Comp, serName, strAgtList, camHKLAgtMap, camDB, ds, strErrMsg}, Me.getMcuAgentInfoListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMcuAgentInfoListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMcuAgentInfoListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMcuAgentInfoListCompleted(Me, New getMcuAgentInfoListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkUserRight", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function checkUserRight(ByVal UserID As String, ByRef strErr As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("checkUserRight", New Object() {UserID, strErr})
            strErr = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub checkUserRightAsync(ByVal UserID As String, ByVal strErr As String)
            Me.checkUserRightAsync(UserID, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub checkUserRightAsync(ByVal UserID As String, ByVal strErr As String, ByVal userState As Object)
            If (Me.checkUserRightOperationCompleted Is Nothing) Then
                Me.checkUserRightOperationCompleted = AddressOf Me.OncheckUserRightOperationCompleted
            End If
            Me.InvokeAsync("checkUserRight", New Object() {UserID, strErr}, Me.checkUserRightOperationCompleted, userState)
        End Sub
        
        Private Sub OncheckUserRightOperationCompleted(ByVal arg As Object)
            If (Not (Me.checkUserRightCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent checkUserRightCompleted(Me, New checkUserRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUPSGroup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUPSGroup(ByVal strSystem As String, ByVal strUser As String, ByRef lngErrNo As Long, ByRef strErrMsg As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetUPSGroup", New Object() {strSystem, strUser, lngErrNo, strErrMsg})
            lngErrNo = CType(results(1),Long)
            strErrMsg = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUPSGroupAsync(ByVal strSystem As String, ByVal strUser As String, ByVal lngErrNo As Long, ByVal strErrMsg As String)
            Me.GetUPSGroupAsync(strSystem, strUser, lngErrNo, strErrMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUPSGroupAsync(ByVal strSystem As String, ByVal strUser As String, ByVal lngErrNo As Long, ByVal strErrMsg As String, ByVal userState As Object)
            If (Me.GetUPSGroupOperationCompleted Is Nothing) Then
                Me.GetUPSGroupOperationCompleted = AddressOf Me.OnGetUPSGroupOperationCompleted
            End If
            Me.InvokeAsync("GetUPSGroup", New Object() {strSystem, strUser, lngErrNo, strErrMsg}, Me.GetUPSGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUPSGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUPSGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUPSGroupCompleted(Me, New GetUPSGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAgentAccountList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAgentAccountList(ByVal g_Comp As String, ByVal serName As String, ByVal strAgtList As String, ByVal camHKLAgtMap As String, ByVal camDB As String, ByRef lngErrNo As Integer, ByRef strErrMsg As String, ByRef ds As System.Data.DataSet) As Boolean
            Dim results() As Object = Me.Invoke("getAgentAccountList", New Object() {g_Comp, serName, strAgtList, camHKLAgtMap, camDB, lngErrNo, strErrMsg, ds})
            lngErrNo = CType(results(1),Integer)
            strErrMsg = CType(results(2),String)
            ds = CType(results(3),System.Data.DataSet)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAgentAccountListAsync(ByVal g_Comp As String, ByVal serName As String, ByVal strAgtList As String, ByVal camHKLAgtMap As String, ByVal camDB As String, ByVal lngErrNo As Integer, ByVal strErrMsg As String, ByVal ds As System.Data.DataSet)
            Me.getAgentAccountListAsync(g_Comp, serName, strAgtList, camHKLAgtMap, camDB, lngErrNo, strErrMsg, ds, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAgentAccountListAsync(ByVal g_Comp As String, ByVal serName As String, ByVal strAgtList As String, ByVal camHKLAgtMap As String, ByVal camDB As String, ByVal lngErrNo As Integer, ByVal strErrMsg As String, ByVal ds As System.Data.DataSet, ByVal userState As Object)
            If (Me.getAgentAccountListOperationCompleted Is Nothing) Then
                Me.getAgentAccountListOperationCompleted = AddressOf Me.OngetAgentAccountListOperationCompleted
            End If
            Me.InvokeAsync("getAgentAccountList", New Object() {g_Comp, serName, strAgtList, camHKLAgtMap, camDB, lngErrNo, strErrMsg, ds}, Me.getAgentAccountListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAgentAccountListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAgentAccountListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAgentAccountListCompleted(Me, New getAgentAccountListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadComboBox", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadComboBox(ByRef dt As System.Data.DataTable, ByRef cbo As Object, ByVal strCode As String, ByVal strName As String, ByVal strSQL As String, ByVal blnAllowNull As Boolean) As Boolean
            Dim results() As Object = Me.Invoke("LoadComboBox", New Object() {dt, cbo, strCode, strName, strSQL, blnAllowNull})
            dt = CType(results(1),System.Data.DataTable)
            cbo = CType(results(2),Object)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadComboBoxAsync(ByVal dt As System.Data.DataTable, ByVal cbo As Object, ByVal strCode As String, ByVal strName As String, ByVal strSQL As String, ByVal blnAllowNull As Boolean)
            Me.LoadComboBoxAsync(dt, cbo, strCode, strName, strSQL, blnAllowNull, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadComboBoxAsync(ByVal dt As System.Data.DataTable, ByVal cbo As Object, ByVal strCode As String, ByVal strName As String, ByVal strSQL As String, ByVal blnAllowNull As Boolean, ByVal userState As Object)
            If (Me.LoadComboBoxOperationCompleted Is Nothing) Then
                Me.LoadComboBoxOperationCompleted = AddressOf Me.OnLoadComboBoxOperationCompleted
            End If
            Me.InvokeAsync("LoadComboBox", New Object() {dt, cbo, strCode, strName, strSQL, blnAllowNull}, Me.LoadComboBoxOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadComboBoxOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadComboBoxCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadComboBoxCompleted(Me, New LoadComboBoxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("MQSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPersonalInfoAddress4McuCustomer", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPersonalInfoAddress4McuCustomer(ByVal strCustID As String, ByVal strClientID As String, ByRef strErrMsg As String, ByRef blnCovSmoker As Boolean, ByRef dtPersonal As System.Data.DataTable, ByRef dtAddress As System.Data.DataTable, ByRef dtCIWPersonInfo As System.Data.DataTable, ByVal blnLoadPol As Boolean) As Boolean
            Dim results() As Object = Me.Invoke("GetPersonalInfoAddress4McuCustomer", New Object() {strCustID, strClientID, strErrMsg, blnCovSmoker, dtPersonal, dtAddress, dtCIWPersonInfo, blnLoadPol})
            strErrMsg = CType(results(1),String)
            blnCovSmoker = CType(results(2),Boolean)
            dtPersonal = CType(results(3),System.Data.DataTable)
            dtAddress = CType(results(4),System.Data.DataTable)
            dtCIWPersonInfo = CType(results(5),System.Data.DataTable)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPersonalInfoAddress4McuCustomerAsync(ByVal strCustID As String, ByVal strClientID As String, ByVal strErrMsg As String, ByVal blnCovSmoker As Boolean, ByVal dtPersonal As System.Data.DataTable, ByVal dtAddress As System.Data.DataTable, ByVal dtCIWPersonInfo As System.Data.DataTable, ByVal blnLoadPol As Boolean)
            Me.GetPersonalInfoAddress4McuCustomerAsync(strCustID, strClientID, strErrMsg, blnCovSmoker, dtPersonal, dtAddress, dtCIWPersonInfo, blnLoadPol, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPersonalInfoAddress4McuCustomerAsync(ByVal strCustID As String, ByVal strClientID As String, ByVal strErrMsg As String, ByVal blnCovSmoker As Boolean, ByVal dtPersonal As System.Data.DataTable, ByVal dtAddress As System.Data.DataTable, ByVal dtCIWPersonInfo As System.Data.DataTable, ByVal blnLoadPol As Boolean, ByVal userState As Object)
            If (Me.GetPersonalInfoAddress4McuCustomerOperationCompleted Is Nothing) Then
                Me.GetPersonalInfoAddress4McuCustomerOperationCompleted = AddressOf Me.OnGetPersonalInfoAddress4McuCustomerOperationCompleted
            End If
            Me.InvokeAsync("GetPersonalInfoAddress4McuCustomer", New Object() {strCustID, strClientID, strErrMsg, blnCovSmoker, dtPersonal, dtAddress, dtCIWPersonInfo, blnLoadPol}, Me.GetPersonalInfoAddress4McuCustomerOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPersonalInfoAddress4McuCustomerOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPersonalInfoAddress4McuCustomerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPersonalInfoAddress4McuCustomerCompleted(Me, New GetPersonalInfoAddress4McuCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGIPolicyMcuList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGIPolicyMcuList(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strCustID As String, ByVal strPolicy As String, ByVal strRel As String, ByVal strTable As String, ByRef lngErrNo As Long, ByRef strErrMsg As String, ByRef intCnt As Integer, ByVal blnCntOnly As Boolean) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetGIPolicyMcuList", New Object() {strCompanyCode, strEnvCode, strCustID, strPolicy, strRel, strTable, lngErrNo, strErrMsg, intCnt, blnCntOnly})
            lngErrNo = CType(results(1),Long)
            strErrMsg = CType(results(2),String)
            intCnt = CType(results(3),Integer)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGIPolicyMcuListAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strCustID As String, ByVal strPolicy As String, ByVal strRel As String, ByVal strTable As String, ByVal lngErrNo As Long, ByVal strErrMsg As String, ByVal intCnt As Integer, ByVal blnCntOnly As Boolean)
            Me.GetGIPolicyMcuListAsync(strCompanyCode, strEnvCode, strCustID, strPolicy, strRel, strTable, lngErrNo, strErrMsg, intCnt, blnCntOnly, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGIPolicyMcuListAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strCustID As String, ByVal strPolicy As String, ByVal strRel As String, ByVal strTable As String, ByVal lngErrNo As Long, ByVal strErrMsg As String, ByVal intCnt As Integer, ByVal blnCntOnly As Boolean, ByVal userState As Object)
            If (Me.GetGIPolicyMcuListOperationCompleted Is Nothing) Then
                Me.GetGIPolicyMcuListOperationCompleted = AddressOf Me.OnGetGIPolicyMcuListOperationCompleted
            End If
            Me.InvokeAsync("GetGIPolicyMcuList", New Object() {strCompanyCode, strEnvCode, strCustID, strPolicy, strRel, strTable, lngErrNo, strErrMsg, intCnt, blnCntOnly}, Me.GetGIPolicyMcuListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGIPolicyMcuListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGIPolicyMcuListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGIPolicyMcuListCompleted(Me, New GetGIPolicyMcuListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("MQSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFundTxHist", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFundTxHist(ByVal strPolicy As String, ByVal strTxType As String, ByVal strTxID As String, ByVal strLAFlag As String, ByRef dsReceData As System.Data.DataSet, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("GetFundTxHist", New Object() {strPolicy, strTxType, strTxID, strLAFlag, dsReceData, strErr})
            dsReceData = CType(results(1),System.Data.DataSet)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFundTxHistAsync(ByVal strPolicy As String, ByVal strTxType As String, ByVal strTxID As String, ByVal strLAFlag As String, ByVal dsReceData As System.Data.DataSet, ByVal strErr As String)
            Me.GetFundTxHistAsync(strPolicy, strTxType, strTxID, strLAFlag, dsReceData, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFundTxHistAsync(ByVal strPolicy As String, ByVal strTxType As String, ByVal strTxID As String, ByVal strLAFlag As String, ByVal dsReceData As System.Data.DataSet, ByVal strErr As String, ByVal userState As Object)
            If (Me.GetFundTxHistOperationCompleted Is Nothing) Then
                Me.GetFundTxHistOperationCompleted = AddressOf Me.OnGetFundTxHistOperationCompleted
            End If
            Me.InvokeAsync("GetFundTxHist", New Object() {strPolicy, strTxType, strTxID, strLAFlag, dsReceData, strErr}, Me.GetFundTxHistOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFundTxHistOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFundTxHistCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFundTxHistCompleted(Me, New GetFundTxHistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("MQSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDDRRejectReason", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDDRRejectReason(ByRef dsSendData As System.Data.DataSet, ByRef dsReceData As System.Data.DataSet, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("GetDDRRejectReason", New Object() {dsSendData, dsReceData, strErr})
            dsSendData = CType(results(1),System.Data.DataSet)
            dsReceData = CType(results(2),System.Data.DataSet)
            strErr = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDDRRejectReasonAsync(ByVal dsSendData As System.Data.DataSet, ByVal dsReceData As System.Data.DataSet, ByVal strErr As String)
            Me.GetDDRRejectReasonAsync(dsSendData, dsReceData, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDDRRejectReasonAsync(ByVal dsSendData As System.Data.DataSet, ByVal dsReceData As System.Data.DataSet, ByVal strErr As String, ByVal userState As Object)
            If (Me.GetDDRRejectReasonOperationCompleted Is Nothing) Then
                Me.GetDDRRejectReasonOperationCompleted = AddressOf Me.OnGetDDRRejectReasonOperationCompleted
            End If
            Me.InvokeAsync("GetDDRRejectReason", New Object() {dsSendData, dsReceData, strErr}, Me.GetDDRRejectReasonOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDDRRejectReasonOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDDRRejectReasonCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDDRRejectReasonCompleted(Me, New GetDDRRejectReasonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckUserPermission", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckUserPermission(ByVal UserID As String, ByRef dtFuncList As System.Data.DataTable, ByRef strErr As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CheckUserPermission", New Object() {UserID, dtFuncList, strErr})
            dtFuncList = CType(results(1),System.Data.DataTable)
            strErr = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckUserPermissionAsync(ByVal UserID As String, ByVal dtFuncList As System.Data.DataTable, ByVal strErr As String)
            Me.CheckUserPermissionAsync(UserID, dtFuncList, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckUserPermissionAsync(ByVal UserID As String, ByVal dtFuncList As System.Data.DataTable, ByVal strErr As String, ByVal userState As Object)
            If (Me.CheckUserPermissionOperationCompleted Is Nothing) Then
                Me.CheckUserPermissionOperationCompleted = AddressOf Me.OnCheckUserPermissionOperationCompleted
            End If
            Me.InvokeAsync("CheckUserPermission", New Object() {UserID, dtFuncList, strErr}, Me.CheckUserPermissionOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckUserPermissionOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckUserPermissionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckUserPermissionCompleted(Me, New CheckUserPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrivRS", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPrivRS(ByVal intGroupID As Integer, ByVal strCtrl As String, ByRef lngErrNo As Long, ByRef strErrMsg As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetPrivRS", New Object() {intGroupID, strCtrl, lngErrNo, strErrMsg})
            lngErrNo = CType(results(1),Long)
            strErrMsg = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPrivRSAsync(ByVal intGroupID As Integer, ByVal strCtrl As String, ByVal lngErrNo As Long, ByVal strErrMsg As String)
            Me.GetPrivRSAsync(intGroupID, strCtrl, lngErrNo, strErrMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPrivRSAsync(ByVal intGroupID As Integer, ByVal strCtrl As String, ByVal lngErrNo As Long, ByVal strErrMsg As String, ByVal userState As Object)
            If (Me.GetPrivRSOperationCompleted Is Nothing) Then
                Me.GetPrivRSOperationCompleted = AddressOf Me.OnGetPrivRSOperationCompleted
            End If
            Me.InvokeAsync("GetPrivRS", New Object() {intGroupID, strCtrl, lngErrNo, strErrMsg}, Me.GetPrivRSOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPrivRSOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPrivRSCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPrivRSCompleted(Me, New GetPrivRSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMClaimPolicyRec", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMClaimPolicyRec(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strDB As String, ByVal policyNo As String, ByVal policyCap As String, ByRef strErrMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("getMClaimPolicyRec", New Object() {strCompanyCode, strEnvCode, strDB, policyNo, policyCap, strErrMsg})
            strErrMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMClaimPolicyRecAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strDB As String, ByVal policyNo As String, ByVal policyCap As String, ByVal strErrMsg As String)
            Me.getMClaimPolicyRecAsync(strCompanyCode, strEnvCode, strDB, policyNo, policyCap, strErrMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMClaimPolicyRecAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strDB As String, ByVal policyNo As String, ByVal policyCap As String, ByVal strErrMsg As String, ByVal userState As Object)
            If (Me.getMClaimPolicyRecOperationCompleted Is Nothing) Then
                Me.getMClaimPolicyRecOperationCompleted = AddressOf Me.OngetMClaimPolicyRecOperationCompleted
            End If
            Me.InvokeAsync("getMClaimPolicyRec", New Object() {strCompanyCode, strEnvCode, strDB, policyNo, policyCap, strErrMsg}, Me.getMClaimPolicyRecOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMClaimPolicyRecOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMClaimPolicyRecCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMClaimPolicyRecCompleted(Me, New getMClaimPolicyRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMcuMClaimPendingRec", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMcuMClaimPendingRec(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strClaim As String, ByVal policyNo As String, ByVal policyCap As String, ByVal dsClaim As System.Data.DataSet, ByRef strErrMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("getMcuMClaimPendingRec", New Object() {strCompanyCode, strEnvCode, strClaim, policyNo, policyCap, dsClaim, strErrMsg})
            strErrMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMcuMClaimPendingRecAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strClaim As String, ByVal policyNo As String, ByVal policyCap As String, ByVal dsClaim As System.Data.DataSet, ByVal strErrMsg As String)
            Me.getMcuMClaimPendingRecAsync(strCompanyCode, strEnvCode, strClaim, policyNo, policyCap, dsClaim, strErrMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMcuMClaimPendingRecAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strClaim As String, ByVal policyNo As String, ByVal policyCap As String, ByVal dsClaim As System.Data.DataSet, ByVal strErrMsg As String, ByVal userState As Object)
            If (Me.getMcuMClaimPendingRecOperationCompleted Is Nothing) Then
                Me.getMcuMClaimPendingRecOperationCompleted = AddressOf Me.OngetMcuMClaimPendingRecOperationCompleted
            End If
            Me.InvokeAsync("getMcuMClaimPendingRec", New Object() {strCompanyCode, strEnvCode, strClaim, policyNo, policyCap, dsClaim, strErrMsg}, Me.getMcuMClaimPendingRecOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMcuMClaimPendingRecOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMcuMClaimPendingRecCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMcuMClaimPendingRecCompleted(Me, New getMcuMClaimPendingRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMcuMClaimBenefitRec", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMcuMClaimBenefitRec(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal policyCap As String, ByVal dsClaim As System.Data.DataSet, ByRef strErrMsg As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("getMcuMClaimBenefitRec", New Object() {strCompanyCode, strEnvCode, policyNo, policyCap, dsClaim, strErrMsg})
            strErrMsg = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMcuMClaimBenefitRecAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal policyCap As String, ByVal dsClaim As System.Data.DataSet, ByVal strErrMsg As String)
            Me.getMcuMClaimBenefitRecAsync(strCompanyCode, strEnvCode, policyNo, policyCap, dsClaim, strErrMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMcuMClaimBenefitRecAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal policyCap As String, ByVal dsClaim As System.Data.DataSet, ByVal strErrMsg As String, ByVal userState As Object)
            If (Me.getMcuMClaimBenefitRecOperationCompleted Is Nothing) Then
                Me.getMcuMClaimBenefitRecOperationCompleted = AddressOf Me.OngetMcuMClaimBenefitRecOperationCompleted
            End If
            Me.InvokeAsync("getMcuMClaimBenefitRec", New Object() {strCompanyCode, strEnvCode, policyNo, policyCap, dsClaim, strErrMsg}, Me.getMcuMClaimBenefitRecOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMcuMClaimBenefitRecOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMcuMClaimBenefitRecCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMcuMClaimBenefitRecCompleted(Me, New getMcuMClaimBenefitRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chkWebsConnetion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function chkWebsConnetion(ByRef UserID As String, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("chkWebsConnetion", New Object() {UserID, strErr})
            UserID = CType(results(1),String)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub chkWebsConnetionAsync(ByVal UserID As String, ByVal strErr As String)
            Me.chkWebsConnetionAsync(UserID, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub chkWebsConnetionAsync(ByVal UserID As String, ByVal strErr As String, ByVal userState As Object)
            If (Me.chkWebsConnetionOperationCompleted Is Nothing) Then
                Me.chkWebsConnetionOperationCompleted = AddressOf Me.OnchkWebsConnetionOperationCompleted
            End If
            Me.InvokeAsync("chkWebsConnetion", New Object() {UserID, strErr}, Me.chkWebsConnetionOperationCompleted, userState)
        End Sub
        
        Private Sub OnchkWebsConnetionOperationCompleted(ByVal arg As Object)
            If (Not (Me.chkWebsConnetionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent chkWebsConnetionCompleted(Me, New chkWebsConnetionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMacauDDACCDRStatusCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMacauDDACCDRStatusCode(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByRef strErr As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("getMacauDDACCDRStatusCode", New Object() {strCompanyCode, strEnvCode, strErr})
            strErr = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMacauDDACCDRStatusCodeAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strErr As String)
            Me.getMacauDDACCDRStatusCodeAsync(strCompanyCode, strEnvCode, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMacauDDACCDRStatusCodeAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strErr As String, ByVal userState As Object)
            If (Me.getMacauDDACCDRStatusCodeOperationCompleted Is Nothing) Then
                Me.getMacauDDACCDRStatusCodeOperationCompleted = AddressOf Me.OngetMacauDDACCDRStatusCodeOperationCompleted
            End If
            Me.InvokeAsync("getMacauDDACCDRStatusCode", New Object() {strCompanyCode, strEnvCode, strErr}, Me.getMacauDDACCDRStatusCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMacauDDACCDRStatusCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMacauDDACCDRStatusCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMacauDDACCDRStatusCodeCompleted(Me, New getMacauDDACCDRStatusCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAplHistMcuRec", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAplHistMcuRec(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByRef strErr As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("getAplHistMcuRec", New Object() {strCompanyCode, strEnvCode, strErr})
            strErr = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAplHistMcuRecAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strErr As String)
            Me.getAplHistMcuRecAsync(strCompanyCode, strEnvCode, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAplHistMcuRecAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strErr As String, ByVal userState As Object)
            If (Me.getAplHistMcuRecOperationCompleted Is Nothing) Then
                Me.getAplHistMcuRecOperationCompleted = AddressOf Me.OngetAplHistMcuRecOperationCompleted
            End If
            Me.InvokeAsync("getAplHistMcuRec", New Object() {strCompanyCode, strEnvCode, strErr}, Me.getAplHistMcuRecOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAplHistMcuRecOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAplHistMcuRecCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAplHistMcuRecCompleted(Me, New getAplHistMcuRecCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMcuSmsMsgDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMcuSmsMsgDetail(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal policyCap As String, ByRef strErr As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("getMcuSmsMsgDetail", New Object() {strCompanyCode, strEnvCode, policyNo, policyCap, strErr})
            strErr = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMcuSmsMsgDetailAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal policyCap As String, ByVal strErr As String)
            Me.getMcuSmsMsgDetailAsync(strCompanyCode, strEnvCode, policyNo, policyCap, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMcuSmsMsgDetailAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal policyCap As String, ByVal strErr As String, ByVal userState As Object)
            If (Me.getMcuSmsMsgDetailOperationCompleted Is Nothing) Then
                Me.getMcuSmsMsgDetailOperationCompleted = AddressOf Me.OngetMcuSmsMsgDetailOperationCompleted
            End If
            Me.InvokeAsync("getMcuSmsMsgDetail", New Object() {strCompanyCode, strEnvCode, policyNo, policyCap, strErr}, Me.getMcuSmsMsgDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMcuSmsMsgDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMcuSmsMsgDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMcuSmsMsgDetailCompleted(Me, New getMcuSmsMsgDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMcuSMSPolicyInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMcuSMSPolicyInfo(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal dsSMS As System.Data.DataSet, ByVal mcCamDB As String, ByVal mcNbr As String, ByRef strErr As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("getMcuSMSPolicyInfo", New Object() {strCompanyCode, strEnvCode, policyNo, dsSMS, mcCamDB, mcNbr, strErr})
            strErr = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMcuSMSPolicyInfoAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal dsSMS As System.Data.DataSet, ByVal mcCamDB As String, ByVal mcNbr As String, ByVal strErr As String)
            Me.getMcuSMSPolicyInfoAsync(strCompanyCode, strEnvCode, policyNo, dsSMS, mcCamDB, mcNbr, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMcuSMSPolicyInfoAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal dsSMS As System.Data.DataSet, ByVal mcCamDB As String, ByVal mcNbr As String, ByVal strErr As String, ByVal userState As Object)
            If (Me.getMcuSMSPolicyInfoOperationCompleted Is Nothing) Then
                Me.getMcuSMSPolicyInfoOperationCompleted = AddressOf Me.OngetMcuSMSPolicyInfoOperationCompleted
            End If
            Me.InvokeAsync("getMcuSMSPolicyInfo", New Object() {strCompanyCode, strEnvCode, policyNo, dsSMS, mcCamDB, mcNbr, strErr}, Me.getMcuSMSPolicyInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMcuSMSPolicyInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMcuSMSPolicyInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMcuSMSPolicyInfoCompleted(Me, New getMcuSMSPolicyInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMcuQDAPRefundExtraPaymentAlert", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMcuQDAPRefundExtraPaymentAlert(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal custID As String, ByVal dtBusDate As Date, ByRef strErr As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("getMcuQDAPRefundExtraPaymentAlert", New Object() {strCompanyCode, strEnvCode, policyNo, custID, dtBusDate, strErr})
            strErr = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMcuQDAPRefundExtraPaymentAlertAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal custID As String, ByVal dtBusDate As Date, ByVal strErr As String)
            Me.getMcuQDAPRefundExtraPaymentAlertAsync(strCompanyCode, strEnvCode, policyNo, custID, dtBusDate, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMcuQDAPRefundExtraPaymentAlertAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal custID As String, ByVal dtBusDate As Date, ByVal strErr As String, ByVal userState As Object)
            If (Me.getMcuQDAPRefundExtraPaymentAlertOperationCompleted Is Nothing) Then
                Me.getMcuQDAPRefundExtraPaymentAlertOperationCompleted = AddressOf Me.OngetMcuQDAPRefundExtraPaymentAlertOperationCompleted
            End If
            Me.InvokeAsync("getMcuQDAPRefundExtraPaymentAlert", New Object() {strCompanyCode, strEnvCode, policyNo, custID, dtBusDate, strErr}, Me.getMcuQDAPRefundExtraPaymentAlertOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMcuQDAPRefundExtraPaymentAlertOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMcuQDAPRefundExtraPaymentAlertCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMcuQDAPRefundExtraPaymentAlertCompleted(Me, New getMcuQDAPRefundExtraPaymentAlertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPendingAgtCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getPendingAgtCode(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByRef strErr As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("getPendingAgtCode", New Object() {strCompanyCode, strEnvCode, policyNo, strErr})
            strErr = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getPendingAgtCodeAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal strErr As String)
            Me.getPendingAgtCodeAsync(strCompanyCode, strEnvCode, policyNo, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPendingAgtCodeAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal strErr As String, ByVal userState As Object)
            If (Me.getPendingAgtCodeOperationCompleted Is Nothing) Then
                Me.getPendingAgtCodeOperationCompleted = AddressOf Me.OngetPendingAgtCodeOperationCompleted
            End If
            Me.InvokeAsync("getPendingAgtCode", New Object() {strCompanyCode, strEnvCode, policyNo, strErr}, Me.getPendingAgtCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPendingAgtCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPendingAgtCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPendingAgtCodeCompleted(Me, New getPendingAgtCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMcuPolicyUW", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMcuPolicyUW(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByRef ds As System.Data.DataSet, ByRef strErr As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("getMcuPolicyUW", New Object() {strCompanyCode, strEnvCode, policyNo, ds, strErr})
            ds = CType(results(1),System.Data.DataSet)
            strErr = CType(results(2),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMcuPolicyUWAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal ds As System.Data.DataSet, ByVal strErr As String)
            Me.getMcuPolicyUWAsync(strCompanyCode, strEnvCode, policyNo, ds, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMcuPolicyUWAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal ds As System.Data.DataSet, ByVal strErr As String, ByVal userState As Object)
            If (Me.getMcuPolicyUWOperationCompleted Is Nothing) Then
                Me.getMcuPolicyUWOperationCompleted = AddressOf Me.OngetMcuPolicyUWOperationCompleted
            End If
            Me.InvokeAsync("getMcuPolicyUW", New Object() {strCompanyCode, strEnvCode, policyNo, ds, strErr}, Me.getMcuPolicyUWOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMcuPolicyUWOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMcuPolicyUWCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMcuPolicyUWCompleted(Me, New getMcuPolicyUWCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMcuUWOutstandingReq", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getMcuUWOutstandingReq(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal gcNBR As String, ByVal ds As System.Data.DataSet, ByRef strErr As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("getMcuUWOutstandingReq", New Object() {strCompanyCode, strEnvCode, policyNo, gcNBR, ds, strErr})
            strErr = CType(results(1),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getMcuUWOutstandingReqAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal gcNBR As String, ByVal ds As System.Data.DataSet, ByVal strErr As String)
            Me.getMcuUWOutstandingReqAsync(strCompanyCode, strEnvCode, policyNo, gcNBR, ds, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getMcuUWOutstandingReqAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal gcNBR As String, ByVal ds As System.Data.DataSet, ByVal strErr As String, ByVal userState As Object)
            If (Me.getMcuUWOutstandingReqOperationCompleted Is Nothing) Then
                Me.getMcuUWOutstandingReqOperationCompleted = AddressOf Me.OngetMcuUWOutstandingReqOperationCompleted
            End If
            Me.InvokeAsync("getMcuUWOutstandingReq", New Object() {strCompanyCode, strEnvCode, policyNo, gcNBR, ds, strErr}, Me.getMcuUWOutstandingReqOperationCompleted, userState)
        End Sub
        
        Private Sub OngetMcuUWOutstandingReqOperationCompleted(ByVal arg As Object)
            If (Not (Me.getMcuUWOutstandingReqCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getMcuUWOutstandingReqCompleted(Me, New getMcuUWOutstandingReqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNBRPolicyMcu", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetNBRPolicyMcu(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("GetNBRPolicyMcu", New Object() {strCompanyCode, strEnvCode, policyNo, strErr})
            strErr = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetNBRPolicyMcuAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal strErr As String)
            Me.GetNBRPolicyMcuAsync(strCompanyCode, strEnvCode, policyNo, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetNBRPolicyMcuAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal strErr As String, ByVal userState As Object)
            If (Me.GetNBRPolicyMcuOperationCompleted Is Nothing) Then
                Me.GetNBRPolicyMcuOperationCompleted = AddressOf Me.OnGetNBRPolicyMcuOperationCompleted
            End If
            Me.InvokeAsync("GetNBRPolicyMcu", New Object() {strCompanyCode, strEnvCode, policyNo, strErr}, Me.GetNBRPolicyMcuOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetNBRPolicyMcuOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNBRPolicyMcuCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNBRPolicyMcuCompleted(Me, New GetNBRPolicyMcuCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNCB", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetNCB(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByRef strErr As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetNCB", New Object() {strCompanyCode, strEnvCode, policyNo, strErr})
            strErr = CType(results(1),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetNCBAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal strErr As String)
            Me.GetNCBAsync(strCompanyCode, strEnvCode, policyNo, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetNCBAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal policyNo As String, ByVal strErr As String, ByVal userState As Object)
            If (Me.GetNCBOperationCompleted Is Nothing) Then
                Me.GetNCBOperationCompleted = AddressOf Me.OnGetNCBOperationCompleted
            End If
            Me.InvokeAsync("GetNCB", New Object() {strCompanyCode, strEnvCode, policyNo, strErr}, Me.GetNCBOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetNCBOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNCBCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNCBCompleted(Me, New GetNCBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrievePostSalesCallQuestions", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrievePostSalesCallQuestions(ByRef dt As System.Data.DataTable, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("RetrievePostSalesCallQuestions", New Object() {dt, strErr})
            dt = CType(results(1),System.Data.DataTable)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrievePostSalesCallQuestionsAsync(ByVal dt As System.Data.DataTable, ByVal strErr As String)
            Me.RetrievePostSalesCallQuestionsAsync(dt, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrievePostSalesCallQuestionsAsync(ByVal dt As System.Data.DataTable, ByVal strErr As String, ByVal userState As Object)
            If (Me.RetrievePostSalesCallQuestionsOperationCompleted Is Nothing) Then
                Me.RetrievePostSalesCallQuestionsOperationCompleted = AddressOf Me.OnRetrievePostSalesCallQuestionsOperationCompleted
            End If
            Me.InvokeAsync("RetrievePostSalesCallQuestions", New Object() {dt, strErr}, Me.RetrievePostSalesCallQuestionsOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrievePostSalesCallQuestionsOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrievePostSalesCallQuestionsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrievePostSalesCallQuestionsCompleted(Me, New RetrievePostSalesCallQuestionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePostSalesCallQuestion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SavePostSalesCallQuestion(ByVal intMode As Integer, ByRef dtQuestion As System.Data.DataTable, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("SavePostSalesCallQuestion", New Object() {intMode, dtQuestion, strErr})
            dtQuestion = CType(results(1),System.Data.DataTable)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SavePostSalesCallQuestionAsync(ByVal intMode As Integer, ByVal dtQuestion As System.Data.DataTable, ByVal strErr As String)
            Me.SavePostSalesCallQuestionAsync(intMode, dtQuestion, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SavePostSalesCallQuestionAsync(ByVal intMode As Integer, ByVal dtQuestion As System.Data.DataTable, ByVal strErr As String, ByVal userState As Object)
            If (Me.SavePostSalesCallQuestionOperationCompleted Is Nothing) Then
                Me.SavePostSalesCallQuestionOperationCompleted = AddressOf Me.OnSavePostSalesCallQuestionOperationCompleted
            End If
            Me.InvokeAsync("SavePostSalesCallQuestion", New Object() {intMode, dtQuestion, strErr}, Me.SavePostSalesCallQuestionOperationCompleted, userState)
        End Sub
        
        Private Sub OnSavePostSalesCallQuestionOperationCompleted(ByVal arg As Object)
            If (Not (Me.SavePostSalesCallQuestionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SavePostSalesCallQuestionCompleted(Me, New SavePostSalesCallQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsPostSalesCallQuestionInUse", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsPostSalesCallQuestionInUse(ByVal intQuestionId As Integer, ByRef isUsed As Boolean, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("IsPostSalesCallQuestionInUse", New Object() {intQuestionId, isUsed, strErr})
            isUsed = CType(results(1),Boolean)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsPostSalesCallQuestionInUseAsync(ByVal intQuestionId As Integer, ByVal isUsed As Boolean, ByVal strErr As String)
            Me.IsPostSalesCallQuestionInUseAsync(intQuestionId, isUsed, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsPostSalesCallQuestionInUseAsync(ByVal intQuestionId As Integer, ByVal isUsed As Boolean, ByVal strErr As String, ByVal userState As Object)
            If (Me.IsPostSalesCallQuestionInUseOperationCompleted Is Nothing) Then
                Me.IsPostSalesCallQuestionInUseOperationCompleted = AddressOf Me.OnIsPostSalesCallQuestionInUseOperationCompleted
            End If
            Me.InvokeAsync("IsPostSalesCallQuestionInUse", New Object() {intQuestionId, isUsed, strErr}, Me.IsPostSalesCallQuestionInUseOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsPostSalesCallQuestionInUseOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsPostSalesCallQuestionInUseCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsPostSalesCallQuestionInUseCompleted(Me, New IsPostSalesCallQuestionInUseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePostSalesCallQuestion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeletePostSalesCallQuestion(ByVal intQuestionId As Integer, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("DeletePostSalesCallQuestion", New Object() {intQuestionId, strErr})
            strErr = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeletePostSalesCallQuestionAsync(ByVal intQuestionId As Integer, ByVal strErr As String)
            Me.DeletePostSalesCallQuestionAsync(intQuestionId, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeletePostSalesCallQuestionAsync(ByVal intQuestionId As Integer, ByVal strErr As String, ByVal userState As Object)
            If (Me.DeletePostSalesCallQuestionOperationCompleted Is Nothing) Then
                Me.DeletePostSalesCallQuestionOperationCompleted = AddressOf Me.OnDeletePostSalesCallQuestionOperationCompleted
            End If
            Me.InvokeAsync("DeletePostSalesCallQuestion", New Object() {intQuestionId, strErr}, Me.DeletePostSalesCallQuestionOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeletePostSalesCallQuestionOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeletePostSalesCallQuestionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeletePostSalesCallQuestionCompleted(Me, New DeletePostSalesCallQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrievePostSalesCallProductSettings", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrievePostSalesCallProductSettings(ByRef dsSettings As System.Data.DataSet, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("RetrievePostSalesCallProductSettings", New Object() {dsSettings, strErr})
            dsSettings = CType(results(1),System.Data.DataSet)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrievePostSalesCallProductSettingsAsync(ByVal dsSettings As System.Data.DataSet, ByVal strErr As String)
            Me.RetrievePostSalesCallProductSettingsAsync(dsSettings, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrievePostSalesCallProductSettingsAsync(ByVal dsSettings As System.Data.DataSet, ByVal strErr As String, ByVal userState As Object)
            If (Me.RetrievePostSalesCallProductSettingsOperationCompleted Is Nothing) Then
                Me.RetrievePostSalesCallProductSettingsOperationCompleted = AddressOf Me.OnRetrievePostSalesCallProductSettingsOperationCompleted
            End If
            Me.InvokeAsync("RetrievePostSalesCallProductSettings", New Object() {dsSettings, strErr}, Me.RetrievePostSalesCallProductSettingsOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrievePostSalesCallProductSettingsOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrievePostSalesCallProductSettingsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrievePostSalesCallProductSettingsCompleted(Me, New RetrievePostSalesCallProductSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrievePostSalesCallProductCategory", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrievePostSalesCallProductCategory(ByRef dtCategory As System.Data.DataTable, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("RetrievePostSalesCallProductCategory", New Object() {dtCategory, strErr})
            dtCategory = CType(results(1),System.Data.DataTable)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrievePostSalesCallProductCategoryAsync(ByVal dtCategory As System.Data.DataTable, ByVal strErr As String)
            Me.RetrievePostSalesCallProductCategoryAsync(dtCategory, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrievePostSalesCallProductCategoryAsync(ByVal dtCategory As System.Data.DataTable, ByVal strErr As String, ByVal userState As Object)
            If (Me.RetrievePostSalesCallProductCategoryOperationCompleted Is Nothing) Then
                Me.RetrievePostSalesCallProductCategoryOperationCompleted = AddressOf Me.OnRetrievePostSalesCallProductCategoryOperationCompleted
            End If
            Me.InvokeAsync("RetrievePostSalesCallProductCategory", New Object() {dtCategory, strErr}, Me.RetrievePostSalesCallProductCategoryOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrievePostSalesCallProductCategoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrievePostSalesCallProductCategoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrievePostSalesCallProductCategoryCompleted(Me, New RetrievePostSalesCallProductCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePostSalesCallProductSetting", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdatePostSalesCallProductSetting(ByVal dtSetting As System.Data.DataTable, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdatePostSalesCallProductSetting", New Object() {dtSetting, strErr})
            strErr = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdatePostSalesCallProductSettingAsync(ByVal dtSetting As System.Data.DataTable, ByVal strErr As String)
            Me.UpdatePostSalesCallProductSettingAsync(dtSetting, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdatePostSalesCallProductSettingAsync(ByVal dtSetting As System.Data.DataTable, ByVal strErr As String, ByVal userState As Object)
            If (Me.UpdatePostSalesCallProductSettingOperationCompleted Is Nothing) Then
                Me.UpdatePostSalesCallProductSettingOperationCompleted = AddressOf Me.OnUpdatePostSalesCallProductSettingOperationCompleted
            End If
            Me.InvokeAsync("UpdatePostSalesCallProductSetting", New Object() {dtSetting, strErr}, Me.UpdatePostSalesCallProductSettingOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdatePostSalesCallProductSettingOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdatePostSalesCallProductSettingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdatePostSalesCallProductSettingCompleted(Me, New UpdatePostSalesCallProductSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPostSalesCallProductSetting", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddPostSalesCallProductSetting(ByVal dtSetting As System.Data.DataTable, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("AddPostSalesCallProductSetting", New Object() {dtSetting, strErr})
            strErr = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddPostSalesCallProductSettingAsync(ByVal dtSetting As System.Data.DataTable, ByVal strErr As String)
            Me.AddPostSalesCallProductSettingAsync(dtSetting, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddPostSalesCallProductSettingAsync(ByVal dtSetting As System.Data.DataTable, ByVal strErr As String, ByVal userState As Object)
            If (Me.AddPostSalesCallProductSettingOperationCompleted Is Nothing) Then
                Me.AddPostSalesCallProductSettingOperationCompleted = AddressOf Me.OnAddPostSalesCallProductSettingOperationCompleted
            End If
            Me.InvokeAsync("AddPostSalesCallProductSetting", New Object() {dtSetting, strErr}, Me.AddPostSalesCallProductSettingOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddPostSalesCallProductSettingOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddPostSalesCallProductSettingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddPostSalesCallProductSettingCompleted(Me, New AddPostSalesCallProductSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePostSalesCallProductSetting", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeletePostSalesCallProductSetting(ByVal strProductId As String, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("DeletePostSalesCallProductSetting", New Object() {strProductId, strErr})
            strErr = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeletePostSalesCallProductSettingAsync(ByVal strProductId As String, ByVal strErr As String)
            Me.DeletePostSalesCallProductSettingAsync(strProductId, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeletePostSalesCallProductSettingAsync(ByVal strProductId As String, ByVal strErr As String, ByVal userState As Object)
            If (Me.DeletePostSalesCallProductSettingOperationCompleted Is Nothing) Then
                Me.DeletePostSalesCallProductSettingOperationCompleted = AddressOf Me.OnDeletePostSalesCallProductSettingOperationCompleted
            End If
            Me.InvokeAsync("DeletePostSalesCallProductSetting", New Object() {strProductId, strErr}, Me.DeletePostSalesCallProductSettingOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeletePostSalesCallProductSettingOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeletePostSalesCallProductSettingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeletePostSalesCallProductSettingCompleted(Me, New DeletePostSalesCallProductSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrievePostSalesCallProducts", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrievePostSalesCallProducts(ByVal strProductID As String, ByVal strPlanName As String, ByRef dtProduct As System.Data.DataTable, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("RetrievePostSalesCallProducts", New Object() {strProductID, strPlanName, dtProduct, strErr})
            dtProduct = CType(results(1),System.Data.DataTable)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrievePostSalesCallProductsAsync(ByVal strProductID As String, ByVal strPlanName As String, ByVal dtProduct As System.Data.DataTable, ByVal strErr As String)
            Me.RetrievePostSalesCallProductsAsync(strProductID, strPlanName, dtProduct, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrievePostSalesCallProductsAsync(ByVal strProductID As String, ByVal strPlanName As String, ByVal dtProduct As System.Data.DataTable, ByVal strErr As String, ByVal userState As Object)
            If (Me.RetrievePostSalesCallProductsOperationCompleted Is Nothing) Then
                Me.RetrievePostSalesCallProductsOperationCompleted = AddressOf Me.OnRetrievePostSalesCallProductsOperationCompleted
            End If
            Me.InvokeAsync("RetrievePostSalesCallProducts", New Object() {strProductID, strPlanName, dtProduct, strErr}, Me.RetrievePostSalesCallProductsOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrievePostSalesCallProductsOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrievePostSalesCallProductsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrievePostSalesCallProductsCompleted(Me, New RetrievePostSalesCallProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CopySalesCallProductSetting", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CopySalesCallProductSetting(ByVal strFromProductID As String, ByVal strToProductID As String, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("CopySalesCallProductSetting", New Object() {strFromProductID, strToProductID, strErr})
            strErr = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CopySalesCallProductSettingAsync(ByVal strFromProductID As String, ByVal strToProductID As String, ByVal strErr As String)
            Me.CopySalesCallProductSettingAsync(strFromProductID, strToProductID, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CopySalesCallProductSettingAsync(ByVal strFromProductID As String, ByVal strToProductID As String, ByVal strErr As String, ByVal userState As Object)
            If (Me.CopySalesCallProductSettingOperationCompleted Is Nothing) Then
                Me.CopySalesCallProductSettingOperationCompleted = AddressOf Me.OnCopySalesCallProductSettingOperationCompleted
            End If
            Me.InvokeAsync("CopySalesCallProductSetting", New Object() {strFromProductID, strToProductID, strErr}, Me.CopySalesCallProductSettingOperationCompleted, userState)
        End Sub
        
        Private Sub OnCopySalesCallProductSettingOperationCompleted(ByVal arg As Object)
            If (Not (Me.CopySalesCallProductSettingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CopySalesCallProductSettingCompleted(Me, New CopySalesCallProductSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddPostSalesCallProductQuestion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddPostSalesCallProductQuestion(ByVal dtQuestion As System.Data.DataTable, ByRef isExists As Boolean, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("AddPostSalesCallProductQuestion", New Object() {dtQuestion, isExists, strErr})
            isExists = CType(results(1),Boolean)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddPostSalesCallProductQuestionAsync(ByVal dtQuestion As System.Data.DataTable, ByVal isExists As Boolean, ByVal strErr As String)
            Me.AddPostSalesCallProductQuestionAsync(dtQuestion, isExists, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddPostSalesCallProductQuestionAsync(ByVal dtQuestion As System.Data.DataTable, ByVal isExists As Boolean, ByVal strErr As String, ByVal userState As Object)
            If (Me.AddPostSalesCallProductQuestionOperationCompleted Is Nothing) Then
                Me.AddPostSalesCallProductQuestionOperationCompleted = AddressOf Me.OnAddPostSalesCallProductQuestionOperationCompleted
            End If
            Me.InvokeAsync("AddPostSalesCallProductQuestion", New Object() {dtQuestion, isExists, strErr}, Me.AddPostSalesCallProductQuestionOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddPostSalesCallProductQuestionOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddPostSalesCallProductQuestionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddPostSalesCallProductQuestionCompleted(Me, New AddPostSalesCallProductQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemovePostSalesCallProductQuestion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RemovePostSalesCallProductQuestion(ByVal strProductId As String, ByVal intQuestionId As Integer, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("RemovePostSalesCallProductQuestion", New Object() {strProductId, intQuestionId, strErr})
            strErr = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RemovePostSalesCallProductQuestionAsync(ByVal strProductId As String, ByVal intQuestionId As Integer, ByVal strErr As String)
            Me.RemovePostSalesCallProductQuestionAsync(strProductId, intQuestionId, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RemovePostSalesCallProductQuestionAsync(ByVal strProductId As String, ByVal intQuestionId As Integer, ByVal strErr As String, ByVal userState As Object)
            If (Me.RemovePostSalesCallProductQuestionOperationCompleted Is Nothing) Then
                Me.RemovePostSalesCallProductQuestionOperationCompleted = AddressOf Me.OnRemovePostSalesCallProductQuestionOperationCompleted
            End If
            Me.InvokeAsync("RemovePostSalesCallProductQuestion", New Object() {strProductId, intQuestionId, strErr}, Me.RemovePostSalesCallProductQuestionOperationCompleted, userState)
        End Sub
        
        Private Sub OnRemovePostSalesCallProductQuestionOperationCompleted(ByVal arg As Object)
            If (Not (Me.RemovePostSalesCallProductQuestionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RemovePostSalesCallProductQuestionCompleted(Me, New RemovePostSalesCallProductQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetPostSalesCallProductQuestionOrder", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SetPostSalesCallProductQuestionOrder(ByVal strProductId As String, ByVal intQuestionId As Integer, ByVal intNewOrder As Integer, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("SetPostSalesCallProductQuestionOrder", New Object() {strProductId, intQuestionId, intNewOrder, strErr})
            strErr = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SetPostSalesCallProductQuestionOrderAsync(ByVal strProductId As String, ByVal intQuestionId As Integer, ByVal intNewOrder As Integer, ByVal strErr As String)
            Me.SetPostSalesCallProductQuestionOrderAsync(strProductId, intQuestionId, intNewOrder, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SetPostSalesCallProductQuestionOrderAsync(ByVal strProductId As String, ByVal intQuestionId As Integer, ByVal intNewOrder As Integer, ByVal strErr As String, ByVal userState As Object)
            If (Me.SetPostSalesCallProductQuestionOrderOperationCompleted Is Nothing) Then
                Me.SetPostSalesCallProductQuestionOrderOperationCompleted = AddressOf Me.OnSetPostSalesCallProductQuestionOrderOperationCompleted
            End If
            Me.InvokeAsync("SetPostSalesCallProductQuestionOrder", New Object() {strProductId, intQuestionId, intNewOrder, strErr}, Me.SetPostSalesCallProductQuestionOrderOperationCompleted, userState)
        End Sub
        
        Private Sub OnSetPostSalesCallProductQuestionOrderOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetPostSalesCallProductQuestionOrderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetPostSalesCallProductQuestionOrderCompleted(Me, New SetPostSalesCallProductQuestionOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsPostSalesCallProductSettingExists", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsPostSalesCallProductSettingExists(ByVal strProductId As String, ByRef isExists As Boolean, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("IsPostSalesCallProductSettingExists", New Object() {strProductId, isExists, strErr})
            isExists = CType(results(1),Boolean)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsPostSalesCallProductSettingExistsAsync(ByVal strProductId As String, ByVal isExists As Boolean, ByVal strErr As String)
            Me.IsPostSalesCallProductSettingExistsAsync(strProductId, isExists, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsPostSalesCallProductSettingExistsAsync(ByVal strProductId As String, ByVal isExists As Boolean, ByVal strErr As String, ByVal userState As Object)
            If (Me.IsPostSalesCallProductSettingExistsOperationCompleted Is Nothing) Then
                Me.IsPostSalesCallProductSettingExistsOperationCompleted = AddressOf Me.OnIsPostSalesCallProductSettingExistsOperationCompleted
            End If
            Me.InvokeAsync("IsPostSalesCallProductSettingExists", New Object() {strProductId, isExists, strErr}, Me.IsPostSalesCallProductSettingExistsOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsPostSalesCallProductSettingExistsOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsPostSalesCallProductSettingExistsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsPostSalesCallProductSettingExistsCompleted(Me, New IsPostSalesCallProductSettingExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCoverage", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCoverage(ByVal strPolicyNo As String, ByRef dtCov As System.Data.DataTable, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("GetCoverage", New Object() {strPolicyNo, dtCov, strErr})
            dtCov = CType(results(1),System.Data.DataTable)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCoverageAsync(ByVal strPolicyNo As String, ByVal dtCov As System.Data.DataTable, ByVal strErr As String)
            Me.GetCoverageAsync(strPolicyNo, dtCov, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCoverageAsync(ByVal strPolicyNo As String, ByVal dtCov As System.Data.DataTable, ByVal strErr As String, ByVal userState As Object)
            If (Me.GetCoverageOperationCompleted Is Nothing) Then
                Me.GetCoverageOperationCompleted = AddressOf Me.OnGetCoverageOperationCompleted
            End If
            Me.InvokeAsync("GetCoverage", New Object() {strPolicyNo, dtCov, strErr}, Me.GetCoverageOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCoverageOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCoverageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCoverageCompleted(Me, New GetCoverageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrievePostSalesCallPolicyQuestion", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrievePostSalesCallPolicyQuestion(ByVal strPolicyNo As String, ByRef dtQuestions As System.Data.DataTable, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("RetrievePostSalesCallPolicyQuestion", New Object() {strPolicyNo, dtQuestions, strErr})
            dtQuestions = CType(results(1),System.Data.DataTable)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrievePostSalesCallPolicyQuestionAsync(ByVal strPolicyNo As String, ByVal dtQuestions As System.Data.DataTable, ByVal strErr As String)
            Me.RetrievePostSalesCallPolicyQuestionAsync(strPolicyNo, dtQuestions, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrievePostSalesCallPolicyQuestionAsync(ByVal strPolicyNo As String, ByVal dtQuestions As System.Data.DataTable, ByVal strErr As String, ByVal userState As Object)
            If (Me.RetrievePostSalesCallPolicyQuestionOperationCompleted Is Nothing) Then
                Me.RetrievePostSalesCallPolicyQuestionOperationCompleted = AddressOf Me.OnRetrievePostSalesCallPolicyQuestionOperationCompleted
            End If
            Me.InvokeAsync("RetrievePostSalesCallPolicyQuestion", New Object() {strPolicyNo, dtQuestions, strErr}, Me.RetrievePostSalesCallPolicyQuestionOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrievePostSalesCallPolicyQuestionOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrievePostSalesCallPolicyQuestionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrievePostSalesCallPolicyQuestionCompleted(Me, New RetrievePostSalesCallPolicyQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SavePostSalesCallPolicyAnswer", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SavePostSalesCallPolicyAnswer(ByVal dtQuestion As System.Data.DataTable, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("SavePostSalesCallPolicyAnswer", New Object() {dtQuestion, strErr})
            strErr = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SavePostSalesCallPolicyAnswerAsync(ByVal dtQuestion As System.Data.DataTable, ByVal strErr As String)
            Me.SavePostSalesCallPolicyAnswerAsync(dtQuestion, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SavePostSalesCallPolicyAnswerAsync(ByVal dtQuestion As System.Data.DataTable, ByVal strErr As String, ByVal userState As Object)
            If (Me.SavePostSalesCallPolicyAnswerOperationCompleted Is Nothing) Then
                Me.SavePostSalesCallPolicyAnswerOperationCompleted = AddressOf Me.OnSavePostSalesCallPolicyAnswerOperationCompleted
            End If
            Me.InvokeAsync("SavePostSalesCallPolicyAnswer", New Object() {dtQuestion, strErr}, Me.SavePostSalesCallPolicyAnswerOperationCompleted, userState)
        End Sub
        
        Private Sub OnSavePostSalesCallPolicyAnswerOperationCompleted(ByVal arg As Object)
            If (Not (Me.SavePostSalesCallPolicyAnswerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SavePostSalesCallPolicyAnswerCompleted(Me, New SavePostSalesCallPolicyAnswerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsPostSalesCallCompleted", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function IsPostSalesCallCompleted(ByVal strPolicyNo As String, ByRef blnCompleted As Boolean, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("IsPostSalesCallCompleted", New Object() {strPolicyNo, blnCompleted, strErr})
            blnCompleted = CType(results(1),Boolean)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub IsPostSalesCallCompletedAsync(ByVal strPolicyNo As String, ByVal blnCompleted As Boolean, ByVal strErr As String)
            Me.IsPostSalesCallCompletedAsync(strPolicyNo, blnCompleted, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub IsPostSalesCallCompletedAsync(ByVal strPolicyNo As String, ByVal blnCompleted As Boolean, ByVal strErr As String, ByVal userState As Object)
            If (Me.IsPostSalesCallCompletedOperationCompleted Is Nothing) Then
                Me.IsPostSalesCallCompletedOperationCompleted = AddressOf Me.OnIsPostSalesCallCompletedOperationCompleted
            End If
            Me.InvokeAsync("IsPostSalesCallCompleted", New Object() {strPolicyNo, blnCompleted, strErr}, Me.IsPostSalesCallCompletedOperationCompleted, userState)
        End Sub
        
        Private Sub OnIsPostSalesCallCompletedOperationCompleted(ByVal arg As Object)
            If (Not (Me.IsPostSalesCallCompletedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent IsPostSalesCallCompletedCompleted(Me, New IsPostSalesCallCompletedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrieveInvestmentFund", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrieveInvestmentFund(ByRef dtFund As System.Data.DataTable, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("RetrieveInvestmentFund", New Object() {dtFund, strErr})
            dtFund = CType(results(1),System.Data.DataTable)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrieveInvestmentFundAsync(ByVal dtFund As System.Data.DataTable, ByVal strErr As String)
            Me.RetrieveInvestmentFundAsync(dtFund, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrieveInvestmentFundAsync(ByVal dtFund As System.Data.DataTable, ByVal strErr As String, ByVal userState As Object)
            If (Me.RetrieveInvestmentFundOperationCompleted Is Nothing) Then
                Me.RetrieveInvestmentFundOperationCompleted = AddressOf Me.OnRetrieveInvestmentFundOperationCompleted
            End If
            Me.InvokeAsync("RetrieveInvestmentFund", New Object() {dtFund, strErr}, Me.RetrieveInvestmentFundOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrieveInvestmentFundOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrieveInvestmentFundCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrieveInvestmentFundCompleted(Me, New RetrieveInvestmentFundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFundRiskLevel", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateFundRiskLevel(ByVal dtFund As System.Data.DataTable, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateFundRiskLevel", New Object() {dtFund, strErr})
            strErr = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateFundRiskLevelAsync(ByVal dtFund As System.Data.DataTable, ByVal strErr As String)
            Me.UpdateFundRiskLevelAsync(dtFund, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateFundRiskLevelAsync(ByVal dtFund As System.Data.DataTable, ByVal strErr As String, ByVal userState As Object)
            If (Me.UpdateFundRiskLevelOperationCompleted Is Nothing) Then
                Me.UpdateFundRiskLevelOperationCompleted = AddressOf Me.OnUpdateFundRiskLevelOperationCompleted
            End If
            Me.InvokeAsync("UpdateFundRiskLevel", New Object() {dtFund, strErr}, Me.UpdateFundRiskLevelOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateFundRiskLevelOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateFundRiskLevelCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateFundRiskLevelCompleted(Me, New UpdateFundRiskLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPolicyPostSalesCallType", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPolicyPostSalesCallType(ByVal strPolicyNo As String, ByRef callType As PostSalesCallType, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("GetPolicyPostSalesCallType", New Object() {strPolicyNo, callType, strErr})
            callType = CType(results(1),PostSalesCallType)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPolicyPostSalesCallTypeAsync(ByVal strPolicyNo As String, ByVal callType As PostSalesCallType, ByVal strErr As String)
            Me.GetPolicyPostSalesCallTypeAsync(strPolicyNo, callType, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPolicyPostSalesCallTypeAsync(ByVal strPolicyNo As String, ByVal callType As PostSalesCallType, ByVal strErr As String, ByVal userState As Object)
            If (Me.GetPolicyPostSalesCallTypeOperationCompleted Is Nothing) Then
                Me.GetPolicyPostSalesCallTypeOperationCompleted = AddressOf Me.OnGetPolicyPostSalesCallTypeOperationCompleted
            End If
            Me.InvokeAsync("GetPolicyPostSalesCallType", New Object() {strPolicyNo, callType, strErr}, Me.GetPolicyPostSalesCallTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPolicyPostSalesCallTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPolicyPostSalesCallTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPolicyPostSalesCallTypeCompleted(Me, New GetPolicyPostSalesCallTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("DBSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RetrievePolicyHighRiskFund", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function RetrievePolicyHighRiskFund(ByVal strPolicyNo As String, ByRef dtFund As System.Data.DataTable, ByRef strErr As String) As Boolean
            Dim results() As Object = Me.Invoke("RetrievePolicyHighRiskFund", New Object() {strPolicyNo, dtFund, strErr})
            dtFund = CType(results(1),System.Data.DataTable)
            strErr = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RetrievePolicyHighRiskFundAsync(ByVal strPolicyNo As String, ByVal dtFund As System.Data.DataTable, ByVal strErr As String)
            Me.RetrievePolicyHighRiskFundAsync(strPolicyNo, dtFund, strErr, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RetrievePolicyHighRiskFundAsync(ByVal strPolicyNo As String, ByVal dtFund As System.Data.DataTable, ByVal strErr As String, ByVal userState As Object)
            If (Me.RetrievePolicyHighRiskFundOperationCompleted Is Nothing) Then
                Me.RetrievePolicyHighRiskFundOperationCompleted = AddressOf Me.OnRetrievePolicyHighRiskFundOperationCompleted
            End If
            Me.InvokeAsync("RetrievePolicyHighRiskFund", New Object() {strPolicyNo, dtFund, strErr}, Me.RetrievePolicyHighRiskFundOperationCompleted, userState)
        End Sub
        
        Private Sub OnRetrievePolicyHighRiskFundOperationCompleted(ByVal arg As Object)
            If (Not (Me.RetrievePolicyHighRiskFundCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RetrievePolicyHighRiskFundCompleted(Me, New RetrievePolicyHighRiskFundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSerLogbyCriteria", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSerLogbyCriteria(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal StartDate As Date, ByVal EndDate As Date, ByVal strMediumCode As String, ByVal strEvtCatCode As String, ByVal strcustId As String, ByVal includeNonCust As Boolean, ByRef strErr As String, ByVal strType As String) As String
            Dim results() As Object = Me.Invoke("GetSerLogbyCriteria", New Object() {strCompanyCode, strEnvCode, StartDate, EndDate, strMediumCode, strEvtCatCode, strcustId, includeNonCust, strErr, strType})
            strErr = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSerLogbyCriteriaAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal StartDate As Date, ByVal EndDate As Date, ByVal strMediumCode As String, ByVal strEvtCatCode As String, ByVal strcustId As String, ByVal includeNonCust As Boolean, ByVal strErr As String, ByVal strType As String)
            Me.GetSerLogbyCriteriaAsync(strCompanyCode, strEnvCode, StartDate, EndDate, strMediumCode, strEvtCatCode, strcustId, includeNonCust, strErr, strType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSerLogbyCriteriaAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal StartDate As Date, ByVal EndDate As Date, ByVal strMediumCode As String, ByVal strEvtCatCode As String, ByVal strcustId As String, ByVal includeNonCust As Boolean, ByVal strErr As String, ByVal strType As String, ByVal userState As Object)
            If (Me.GetSerLogbyCriteriaOperationCompleted Is Nothing) Then
                Me.GetSerLogbyCriteriaOperationCompleted = AddressOf Me.OnGetSerLogbyCriteriaOperationCompleted
            End If
            Me.InvokeAsync("GetSerLogbyCriteria", New Object() {strCompanyCode, strEnvCode, StartDate, EndDate, strMediumCode, strEvtCatCode, strcustId, includeNonCust, strErr, strType}, Me.GetSerLogbyCriteriaOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSerLogbyCriteriaOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSerLogbyCriteriaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSerLogbyCriteriaCompleted(Me, New GetSerLogbyCriteriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSerLogbyCusIdOrCriteria", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSerLogbyCusIdOrCriteria(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal StartDate As Date, ByVal EndDate As Date, ByVal strMediumCode As String, ByVal strEvtCatCode As String, ByVal strcustId As String, ByVal includeNonCust As Boolean, ByVal isDescOrder As Boolean, ByRef strErr As String, ByVal strType As String) As String
            Dim results() As Object = Me.Invoke("GetSerLogbyCusIdOrCriteria", New Object() {strCompanyCode, strEnvCode, StartDate, EndDate, strMediumCode, strEvtCatCode, strcustId, includeNonCust, isDescOrder, strErr, strType})
            strErr = CType(results(1),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSerLogbyCusIdOrCriteriaAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal StartDate As Date, ByVal EndDate As Date, ByVal strMediumCode As String, ByVal strEvtCatCode As String, ByVal strcustId As String, ByVal includeNonCust As Boolean, ByVal isDescOrder As Boolean, ByVal strErr As String, ByVal strType As String)
            Me.GetSerLogbyCusIdOrCriteriaAsync(strCompanyCode, strEnvCode, StartDate, EndDate, strMediumCode, strEvtCatCode, strcustId, includeNonCust, isDescOrder, strErr, strType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSerLogbyCusIdOrCriteriaAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal StartDate As Date, ByVal EndDate As Date, ByVal strMediumCode As String, ByVal strEvtCatCode As String, ByVal strcustId As String, ByVal includeNonCust As Boolean, ByVal isDescOrder As Boolean, ByVal strErr As String, ByVal strType As String, ByVal userState As Object)
            If (Me.GetSerLogbyCusIdOrCriteriaOperationCompleted Is Nothing) Then
                Me.GetSerLogbyCusIdOrCriteriaOperationCompleted = AddressOf Me.OnGetSerLogbyCusIdOrCriteriaOperationCompleted
            End If
            Me.InvokeAsync("GetSerLogbyCusIdOrCriteria", New Object() {strCompanyCode, strEnvCode, StartDate, EndDate, strMediumCode, strEvtCatCode, strcustId, includeNonCust, isDescOrder, strErr, strType}, Me.GetSerLogbyCusIdOrCriteriaOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSerLogbyCusIdOrCriteriaOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSerLogbyCusIdOrCriteriaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSerLogbyCusIdOrCriteriaCompleted(Me, New GetSerLogbyCusIdOrCriteriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMarkin", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMarkin(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String, ByRef dtMarkin As System.Data.DataTable, ByRef strErrMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("GetMarkin", New Object() {strCompanyCode, strEnvCode, strPolicy, dtMarkin, strErrMsg})
            dtMarkin = CType(results(1),System.Data.DataTable)
            strErrMsg = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMarkinAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String, ByVal dtMarkin As System.Data.DataTable, ByVal strErrMsg As String)
            Me.GetMarkinAsync(strCompanyCode, strEnvCode, strPolicy, dtMarkin, strErrMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMarkinAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String, ByVal dtMarkin As System.Data.DataTable, ByVal strErrMsg As String, ByVal userState As Object)
            If (Me.GetMarkinOperationCompleted Is Nothing) Then
                Me.GetMarkinOperationCompleted = AddressOf Me.OnGetMarkinOperationCompleted
            End If
            Me.InvokeAsync("GetMarkin", New Object() {strCompanyCode, strEnvCode, strPolicy, dtMarkin, strErrMsg}, Me.GetMarkinOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMarkinOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMarkinCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMarkinCompleted(Me, New GetMarkinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMarkinHist", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMarkinHist(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String, ByRef dtMarkinHist As System.Data.DataTable, ByRef strErrMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("GetMarkinHist", New Object() {strCompanyCode, strEnvCode, strPolicy, dtMarkinHist, strErrMsg})
            dtMarkinHist = CType(results(1),System.Data.DataTable)
            strErrMsg = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMarkinHistAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String, ByVal dtMarkinHist As System.Data.DataTable, ByVal strErrMsg As String)
            Me.GetMarkinHistAsync(strCompanyCode, strEnvCode, strPolicy, dtMarkinHist, strErrMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMarkinHistAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String, ByVal dtMarkinHist As System.Data.DataTable, ByVal strErrMsg As String, ByVal userState As Object)
            If (Me.GetMarkinHistOperationCompleted Is Nothing) Then
                Me.GetMarkinHistOperationCompleted = AddressOf Me.OnGetMarkinHistOperationCompleted
            End If
            Me.InvokeAsync("GetMarkinHist", New Object() {strCompanyCode, strEnvCode, strPolicy, dtMarkinHist, strErrMsg}, Me.GetMarkinHistOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMarkinHistOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMarkinHistCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMarkinHistCompleted(Me, New GetMarkinHistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPendingMarkin", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPendingMarkin(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String, ByRef dtPendingMarkin As System.Data.DataTable, ByRef strErrMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("GetPendingMarkin", New Object() {strCompanyCode, strEnvCode, strPolicy, dtPendingMarkin, strErrMsg})
            dtPendingMarkin = CType(results(1),System.Data.DataTable)
            strErrMsg = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPendingMarkinAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String, ByVal dtPendingMarkin As System.Data.DataTable, ByVal strErrMsg As String)
            Me.GetPendingMarkinAsync(strCompanyCode, strEnvCode, strPolicy, dtPendingMarkin, strErrMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPendingMarkinAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String, ByVal dtPendingMarkin As System.Data.DataTable, ByVal strErrMsg As String, ByVal userState As Object)
            If (Me.GetPendingMarkinOperationCompleted Is Nothing) Then
                Me.GetPendingMarkinOperationCompleted = AddressOf Me.OnGetPendingMarkinOperationCompleted
            End If
            Me.InvokeAsync("GetPendingMarkin", New Object() {strCompanyCode, strEnvCode, strPolicy, dtPendingMarkin, strErrMsg}, Me.GetPendingMarkinOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPendingMarkinOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPendingMarkinCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPendingMarkinCompleted(Me, New GetPendingMarkinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPendingMarkinHist", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPendingMarkinHist(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String, ByRef dtPendingMarkinHist As System.Data.DataTable, ByRef strErrMsg As String) As Boolean
            Dim results() As Object = Me.Invoke("GetPendingMarkinHist", New Object() {strCompanyCode, strEnvCode, strPolicy, dtPendingMarkinHist, strErrMsg})
            dtPendingMarkinHist = CType(results(1),System.Data.DataTable)
            strErrMsg = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPendingMarkinHistAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String, ByVal dtPendingMarkinHist As System.Data.DataTable, ByVal strErrMsg As String)
            Me.GetPendingMarkinHistAsync(strCompanyCode, strEnvCode, strPolicy, dtPendingMarkinHist, strErrMsg, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPendingMarkinHistAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String, ByVal dtPendingMarkinHist As System.Data.DataTable, ByVal strErrMsg As String, ByVal userState As Object)
            If (Me.GetPendingMarkinHistOperationCompleted Is Nothing) Then
                Me.GetPendingMarkinHistOperationCompleted = AddressOf Me.OnGetPendingMarkinHistOperationCompleted
            End If
            Me.InvokeAsync("GetPendingMarkinHist", New Object() {strCompanyCode, strEnvCode, strPolicy, dtPendingMarkinHist, strErrMsg}, Me.GetPendingMarkinHistOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPendingMarkinHistOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPendingMarkinHistCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPendingMarkinHistCompleted(Me, New GetPendingMarkinHistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetReportList(ByVal strCompanyCode As String, ByVal strEnvCode As String) As WSResponseOfListOfMCUReportList
            Dim results() As Object = Me.Invoke("GetReportList", New Object() {strCompanyCode, strEnvCode})
            Return CType(results(0),WSResponseOfListOfMCUReportList)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetReportListAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String)
            Me.GetReportListAsync(strCompanyCode, strEnvCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetReportListAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal userState As Object)
            If (Me.GetReportListOperationCompleted Is Nothing) Then
                Me.GetReportListOperationCompleted = AddressOf Me.OnGetReportListOperationCompleted
            End If
            Me.InvokeAsync("GetReportList", New Object() {strCompanyCode, strEnvCode}, Me.GetReportListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetReportListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetReportListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetReportListCompleted(Me, New GetReportListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoadFundPopup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function LoadFundPopup(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String) As WSResponseOfListOfRptILASFundDesc
            Dim results() As Object = Me.Invoke("LoadFundPopup", New Object() {strCompanyCode, strEnvCode, strPolicy})
            Return CType(results(0),WSResponseOfListOfRptILASFundDesc)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoadFundPopupAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String)
            Me.LoadFundPopupAsync(strCompanyCode, strEnvCode, strPolicy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoadFundPopupAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String, ByVal userState As Object)
            If (Me.LoadFundPopupOperationCompleted Is Nothing) Then
                Me.LoadFundPopupOperationCompleted = AddressOf Me.OnLoadFundPopupOperationCompleted
            End If
            Me.InvokeAsync("LoadFundPopup", New Object() {strCompanyCode, strEnvCode, strPolicy}, Me.LoadFundPopupOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoadFundPopupOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoadFundPopupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoadFundPopupCompleted(Me, New LoadFundPopupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRptILASNotificationLetterInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRptILASNotificationLetterInfo(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String, ByVal strCAMDatabase As String) As WSResponseOfRptILASNotificationLetterInfo
            Dim results() As Object = Me.Invoke("GetRptILASNotificationLetterInfo", New Object() {strCompanyCode, strEnvCode, strPolicy, strCAMDatabase})
            Return CType(results(0),WSResponseOfRptILASNotificationLetterInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRptILASNotificationLetterInfoAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String, ByVal strCAMDatabase As String)
            Me.GetRptILASNotificationLetterInfoAsync(strCompanyCode, strEnvCode, strPolicy, strCAMDatabase, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRptILASNotificationLetterInfoAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String, ByVal strCAMDatabase As String, ByVal userState As Object)
            If (Me.GetRptILASNotificationLetterInfoOperationCompleted Is Nothing) Then
                Me.GetRptILASNotificationLetterInfoOperationCompleted = AddressOf Me.OnGetRptILASNotificationLetterInfoOperationCompleted
            End If
            Me.InvokeAsync("GetRptILASNotificationLetterInfo", New Object() {strCompanyCode, strEnvCode, strPolicy, strCAMDatabase}, Me.GetRptILASNotificationLetterInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRptILASNotificationLetterInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRptILASNotificationLetterInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRptILASNotificationLetterInfoCompleted(Me, New GetRptILASNotificationLetterInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPremCallRpt", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPremCallRpt(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strDateFrom As String, ByVal strDateTo As String, ByVal channelCheckFlag As Boolean, ByVal strChannel As String) As WSResponseOfListOfPremCallRpt
            Dim results() As Object = Me.Invoke("GetPremCallRpt", New Object() {strCompanyCode, strEnvCode, strDateFrom, strDateTo, channelCheckFlag, strChannel})
            Return CType(results(0),WSResponseOfListOfPremCallRpt)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPremCallRptAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strDateFrom As String, ByVal strDateTo As String, ByVal channelCheckFlag As Boolean, ByVal strChannel As String)
            Me.GetPremCallRptAsync(strCompanyCode, strEnvCode, strDateFrom, strDateTo, channelCheckFlag, strChannel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPremCallRptAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strDateFrom As String, ByVal strDateTo As String, ByVal channelCheckFlag As Boolean, ByVal strChannel As String, ByVal userState As Object)
            If (Me.GetPremCallRptOperationCompleted Is Nothing) Then
                Me.GetPremCallRptOperationCompleted = AddressOf Me.OnGetPremCallRptOperationCompleted
            End If
            Me.InvokeAsync("GetPremCallRpt", New Object() {strCompanyCode, strEnvCode, strDateFrom, strDateTo, channelCheckFlag, strChannel}, Me.GetPremCallRptOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPremCallRptOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPremCallRptCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPremCallRptCompleted(Me, New GetPremCallRptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHKFIReport", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetHKFIReport(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strDateFrom As String, ByVal strDateTo As String, ByVal strType As String, ByVal strOrderType As String) As WSResponseOfListOfHKFIRpt
            Dim results() As Object = Me.Invoke("GetHKFIReport", New Object() {strCompanyCode, strEnvCode, strDateFrom, strDateTo, strType, strOrderType})
            Return CType(results(0),WSResponseOfListOfHKFIRpt)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetHKFIReportAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strDateFrom As String, ByVal strDateTo As String, ByVal strType As String, ByVal strOrderType As String)
            Me.GetHKFIReportAsync(strCompanyCode, strEnvCode, strDateFrom, strDateTo, strType, strOrderType, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetHKFIReportAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strDateFrom As String, ByVal strDateTo As String, ByVal strType As String, ByVal strOrderType As String, ByVal userState As Object)
            If (Me.GetHKFIReportOperationCompleted Is Nothing) Then
                Me.GetHKFIReportOperationCompleted = AddressOf Me.OnGetHKFIReportOperationCompleted
            End If
            Me.InvokeAsync("GetHKFIReport", New Object() {strCompanyCode, strEnvCode, strDateFrom, strDateTo, strType, strOrderType}, Me.GetHKFIReportOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetHKFIReportOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetHKFIReportCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetHKFIReportCompleted(Me, New GetHKFIReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPolicyInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPolicyInfo(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String) As WSResponseOfPolicyInfo
            Dim results() As Object = Me.Invoke("GetPolicyInfo", New Object() {strCompanyCode, strEnvCode, strPolicy})
            Return CType(results(0),WSResponseOfPolicyInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPolicyInfoAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String)
            Me.GetPolicyInfoAsync(strCompanyCode, strEnvCode, strPolicy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPolicyInfoAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String, ByVal userState As Object)
            If (Me.GetPolicyInfoOperationCompleted Is Nothing) Then
                Me.GetPolicyInfoOperationCompleted = AddressOf Me.OnGetPolicyInfoOperationCompleted
            End If
            Me.InvokeAsync("GetPolicyInfo", New Object() {strCompanyCode, strEnvCode, strPolicy}, Me.GetPolicyInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPolicyInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPolicyInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPolicyInfoCompleted(Me, New GetPolicyInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPIPHCustomerID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPIPHCustomerID(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String) As WSResponseOfCustomerID
            Dim results() As Object = Me.Invoke("GetPIPHCustomerID", New Object() {strCompanyCode, strEnvCode, strPolicy})
            Return CType(results(0),WSResponseOfCustomerID)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPIPHCustomerIDAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String)
            Me.GetPIPHCustomerIDAsync(strCompanyCode, strEnvCode, strPolicy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPIPHCustomerIDAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String, ByVal userState As Object)
            If (Me.GetPIPHCustomerIDOperationCompleted Is Nothing) Then
                Me.GetPIPHCustomerIDOperationCompleted = AddressOf Me.OnGetPIPHCustomerIDOperationCompleted
            End If
            Me.InvokeAsync("GetPIPHCustomerID", New Object() {strCompanyCode, strEnvCode, strPolicy}, Me.GetPIPHCustomerIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPIPHCustomerIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPIPHCustomerIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPIPHCustomerIDCompleted(Me, New GetPIPHCustomerIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerAndAgentInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCustomerAndAgentInfo(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String) As WSResponseOfListOfCustomerInfo
            Dim results() As Object = Me.Invoke("GetCustomerAndAgentInfo", New Object() {strCompanyCode, strEnvCode, strPolicy})
            Return CType(results(0),WSResponseOfListOfCustomerInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCustomerAndAgentInfoAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String)
            Me.GetCustomerAndAgentInfoAsync(strCompanyCode, strEnvCode, strPolicy, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCustomerAndAgentInfoAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String, ByVal userState As Object)
            If (Me.GetCustomerAndAgentInfoOperationCompleted Is Nothing) Then
                Me.GetCustomerAndAgentInfoOperationCompleted = AddressOf Me.OnGetCustomerAndAgentInfoOperationCompleted
            End If
            Me.InvokeAsync("GetCustomerAndAgentInfo", New Object() {strCompanyCode, strEnvCode, strPolicy}, Me.GetCustomerAndAgentInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCustomerAndAgentInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCustomerAndAgentInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCustomerAndAgentInfoCompleted(Me, New GetCustomerAndAgentInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPaymentInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPaymentInfo(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String, ByVal strAG As String) As WSResponseOfPaymentInfo
            Dim results() As Object = Me.Invoke("GetPaymentInfo", New Object() {strCompanyCode, strEnvCode, strPolicy, strAG})
            Return CType(results(0),WSResponseOfPaymentInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPaymentInfoAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String, ByVal strAG As String)
            Me.GetPaymentInfoAsync(strCompanyCode, strEnvCode, strPolicy, strAG, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPaymentInfoAsync(ByVal strCompanyCode As String, ByVal strEnvCode As String, ByVal strPolicy As String, ByVal strAG As String, ByVal userState As Object)
            If (Me.GetPaymentInfoOperationCompleted Is Nothing) Then
                Me.GetPaymentInfoOperationCompleted = AddressOf Me.OnGetPaymentInfoOperationCompleted
            End If
            Me.InvokeAsync("GetPaymentInfo", New Object() {strCompanyCode, strEnvCode, strPolicy, strAG}, Me.GetPaymentInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPaymentInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPaymentInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPaymentInfoCompleted(Me, New GetPaymentInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ClaimsAudit", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ClaimsAudit(ByVal CompanyID As String, ByVal Env As String, ByVal ClaimNo As String, ByVal PolicyNo As String, ByVal InsuredName As String, ByVal OccurNo As String, ByVal EventName As String) As WSResponseOfObject
            Dim results() As Object = Me.Invoke("ClaimsAudit", New Object() {CompanyID, Env, ClaimNo, PolicyNo, InsuredName, OccurNo, EventName})
            Return CType(results(0),WSResponseOfObject)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ClaimsAuditAsync(ByVal CompanyID As String, ByVal Env As String, ByVal ClaimNo As String, ByVal PolicyNo As String, ByVal InsuredName As String, ByVal OccurNo As String, ByVal EventName As String)
            Me.ClaimsAuditAsync(CompanyID, Env, ClaimNo, PolicyNo, InsuredName, OccurNo, EventName, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ClaimsAuditAsync(ByVal CompanyID As String, ByVal Env As String, ByVal ClaimNo As String, ByVal PolicyNo As String, ByVal InsuredName As String, ByVal OccurNo As String, ByVal EventName As String, ByVal userState As Object)
            If (Me.ClaimsAuditOperationCompleted Is Nothing) Then
                Me.ClaimsAuditOperationCompleted = AddressOf Me.OnClaimsAuditOperationCompleted
            End If
            Me.InvokeAsync("ClaimsAudit", New Object() {CompanyID, Env, ClaimNo, PolicyNo, InsuredName, OccurNo, EventName}, Me.ClaimsAuditOperationCompleted, userState)
        End Sub
        
        Private Sub OnClaimsAuditOperationCompleted(ByVal arg As Object)
            If (Not (Me.ClaimsAuditCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ClaimsAuditCompleted(Me, New ClaimsAuditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://tempuri.org/", IsNullable:=false)>  _
    Partial Public Class MQSOAPHeader
        Inherits System.Web.Services.Protocols.SoapHeader
        
        Private queueManagerField As String
        
        Private remoteQueueField As String
        
        Private replyToQueueField As String
        
        Private localQueueField As String
        
        Private timeoutField As Integer
        
        Private projectAliasField As String
        
        Private connectionAliasField As String
        
        Private userTypeField As String
        
        Private environmentUseField As String
        
        Private companyIDField As String
        
        Private userIDField As String
        
        Private machineIDField As String
        
        Private versionNoField As String
        
        Private libraryNameField As String
        
        Private anyAttrField() As System.Xml.XmlAttribute
        
        '''<remarks/>
        Public Property QueueManager() As String
            Get
                Return Me.queueManagerField
            End Get
            Set
                Me.queueManagerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RemoteQueue() As String
            Get
                Return Me.remoteQueueField
            End Get
            Set
                Me.remoteQueueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReplyToQueue() As String
            Get
                Return Me.replyToQueueField
            End Get
            Set
                Me.replyToQueueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LocalQueue() As String
            Get
                Return Me.localQueueField
            End Get
            Set
                Me.localQueueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Timeout() As Integer
            Get
                Return Me.timeoutField
            End Get
            Set
                Me.timeoutField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectAlias() As String
            Get
                Return Me.projectAliasField
            End Get
            Set
                Me.projectAliasField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ConnectionAlias() As String
            Get
                Return Me.connectionAliasField
            End Get
            Set
                Me.connectionAliasField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserType() As String
            Get
                Return Me.userTypeField
            End Get
            Set
                Me.userTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EnvironmentUse() As String
            Get
                Return Me.environmentUseField
            End Get
            Set
                Me.environmentUseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompanyID() As String
            Get
                Return Me.companyIDField
            End Get
            Set
                Me.companyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserID() As String
            Get
                Return Me.userIDField
            End Get
            Set
                Me.userIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MachineID() As String
            Get
                Return Me.machineIDField
            End Get
            Set
                Me.machineIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VersionNo() As String
            Get
                Return Me.versionNoField
            End Get
            Set
                Me.versionNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LibraryName() As String
            Get
                Return Me.libraryNameField
            End Get
            Set
                Me.libraryNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAnyAttributeAttribute()>  _
        Public Property AnyAttr() As System.Xml.XmlAttribute()
            Get
                Return Me.anyAttrField
            End Get
            Set
                Me.anyAttrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WSResponseOfObject
        
        Private successField As Boolean
        
        Private messageField As String
        
        Private errorMsgField As String
        
        Private dataField As Object
        
        '''<remarks/>
        Public Property Success() As Boolean
            Get
                Return Me.successField
            End Get
            Set
                Me.successField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorMsg() As String
            Get
                Return Me.errorMsgField
            End Get
            Set
                Me.errorMsgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Data() As Object
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Logo
        
        Private policyField As String
        
        Private iNG_LogoField() As Byte
        
        Private addressField() As Byte
        
        Private iServiceField() As Byte
        
        Private iCaringField() As Byte
        
        '''<remarks/>
        Public Property Policy() As String
            Get
                Return Me.policyField
            End Get
            Set
                Me.policyField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property ING_Logo() As Byte()
            Get
                Return Me.iNG_LogoField
            End Get
            Set
                Me.iNG_LogoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property Address() As Byte()
            Get
                Return Me.addressField
            End Get
            Set
                Me.addressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property IService() As Byte()
            Get
                Return Me.iServiceField
            End Get
            Set
                Me.iServiceField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property ICaring() As Byte()
            Get
                Return Me.iCaringField
            End Get
            Set
                Me.iCaringField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class csw_payh_remark_code
        
        Private cswprc_codeField As String
        
        Private cswprc_descField As String
        
        '''<remarks/>
        Public Property cswprc_code() As String
            Get
                Return Me.cswprc_codeField
            End Get
            Set
                Me.cswprc_codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswprc_desc() As String
            Get
                Return Me.cswprc_descField
            End Get
            Set
                Me.cswprc_descField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class CCDRRejectReasonCodes
        
        Private cCDRRejectReasonCodeField As String
        
        Private cCDRRejectReasonDescField As String
        
        Private timestampField() As Byte
        
        '''<remarks/>
        Public Property CCDRRejectReasonCode() As String
            Get
                Return Me.cCDRRejectReasonCodeField
            End Get
            Set
                Me.cCDRRejectReasonCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CCDRRejectReasonDesc() As String
            Get
                Return Me.cCDRRejectReasonDescField
            End Get
            Set
                Me.cCDRRejectReasonDescField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property timestamp() As Byte()
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class DDARejectReasonCodes
        
        Private dDARejectReasonCodeField As String
        
        Private dDARejectReasonDescField As String
        
        Private timestampField() As Byte
        
        '''<remarks/>
        Public Property DDARejectReasonCode() As String
            Get
                Return Me.dDARejectReasonCodeField
            End Get
            Set
                Me.dDARejectReasonCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDARejectReasonDesc() As String
            Get
                Return Me.dDARejectReasonDescField
            End Get
            Set
                Me.dDARejectReasonDescField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property timestamp() As Byte()
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class cswvw_cam_Agent_info
        
        Private cswagi_agent_codeField As String
        
        Private cswagi_unit_codeField As String
        
        Private cswagi_loc_codeField As String
        
        Private cswagi_contract_dateField As Date
        
        Private cswagi_date_leftField As Date
        
        Private cswagi_gradeField As Integer
        
        Private cswagi_descField As String
        
        Private cswagi_mgr_nameField As String
        
        Private cswagi_res_phoneField As String
        
        Private cswagi_mob_phoneField As String
        
        Private cswagi_bus_phoneField As String
        
        Private cswagi_faxField As String
        
        Private cswagi_emailField As String
        
        Private cswagi_idnoField As String
        
        '''<remarks/>
        Public Property cswagi_agent_code() As String
            Get
                Return Me.cswagi_agent_codeField
            End Get
            Set
                Me.cswagi_agent_codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswagi_unit_code() As String
            Get
                Return Me.cswagi_unit_codeField
            End Get
            Set
                Me.cswagi_unit_codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswagi_loc_code() As String
            Get
                Return Me.cswagi_loc_codeField
            End Get
            Set
                Me.cswagi_loc_codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswagi_contract_date() As Date
            Get
                Return Me.cswagi_contract_dateField
            End Get
            Set
                Me.cswagi_contract_dateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswagi_date_left() As Date
            Get
                Return Me.cswagi_date_leftField
            End Get
            Set
                Me.cswagi_date_leftField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswagi_grade() As Integer
            Get
                Return Me.cswagi_gradeField
            End Get
            Set
                Me.cswagi_gradeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswagi_desc() As String
            Get
                Return Me.cswagi_descField
            End Get
            Set
                Me.cswagi_descField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswagi_mgr_name() As String
            Get
                Return Me.cswagi_mgr_nameField
            End Get
            Set
                Me.cswagi_mgr_nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswagi_res_phone() As String
            Get
                Return Me.cswagi_res_phoneField
            End Get
            Set
                Me.cswagi_res_phoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswagi_mob_phone() As String
            Get
                Return Me.cswagi_mob_phoneField
            End Get
            Set
                Me.cswagi_mob_phoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswagi_bus_phone() As String
            Get
                Return Me.cswagi_bus_phoneField
            End Get
            Set
                Me.cswagi_bus_phoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswagi_fax() As String
            Get
                Return Me.cswagi_faxField
            End Get
            Set
                Me.cswagi_faxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswagi_email() As String
            Get
                Return Me.cswagi_emailField
            End Get
            Set
                Me.cswagi_emailField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswagi_idno() As String
            Get
                Return Me.cswagi_idnoField
            End Get
            Set
                Me.cswagi_idnoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class PaymentTypeCodes
        
        Private paymentTypeCodeField As String
        
        Private paymentTypeDescField As String
        
        Private timestampField() As Byte
        
        Private payTypeChDescField As String
        
        '''<remarks/>
        Public Property PaymentTypeCode() As String
            Get
                Return Me.paymentTypeCodeField
            End Get
            Set
                Me.paymentTypeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PaymentTypeDesc() As String
            Get
                Return Me.paymentTypeDescField
            End Get
            Set
                Me.paymentTypeDescField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property timestamp() As Byte()
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PayTypeChDesc() As String
            Get
                Return Me.payTypeChDescField
            End Get
            Set
                Me.payTypeChDescField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class PaymentInfo
        
        Private paymentTypeCodesField() As PaymentTypeCodes
        
        Private cswvw_cam_Agent_infoField() As cswvw_cam_Agent_info
        
        Private dDARejectReasonCodesField() As DDARejectReasonCodes
        
        Private cCDRRejectReasonCodesField() As CCDRRejectReasonCodes
        
        Private csw_payh_remark_codeField() As csw_payh_remark_code
        
        Private agentcodesField() As agentcodes
        
        Private logoField() As Logo
        
        '''<remarks/>
        Public Property PaymentTypeCodes() As PaymentTypeCodes()
            Get
                Return Me.paymentTypeCodesField
            End Get
            Set
                Me.paymentTypeCodesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswvw_cam_Agent_info() As cswvw_cam_Agent_info()
            Get
                Return Me.cswvw_cam_Agent_infoField
            End Get
            Set
                Me.cswvw_cam_Agent_infoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDARejectReasonCodes() As DDARejectReasonCodes()
            Get
                Return Me.dDARejectReasonCodesField
            End Get
            Set
                Me.dDARejectReasonCodesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CCDRRejectReasonCodes() As CCDRRejectReasonCodes()
            Get
                Return Me.cCDRRejectReasonCodesField
            End Get
            Set
                Me.cCDRRejectReasonCodesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property csw_payh_remark_code() As csw_payh_remark_code()
            Get
                Return Me.csw_payh_remark_codeField
            End Get
            Set
                Me.csw_payh_remark_codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property agentcodes() As agentcodes()
            Get
                Return Me.agentcodesField
            End Get
            Set
                Me.agentcodesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Logo() As Logo()
            Get
                Return Me.logoField
            End Get
            Set
                Me.logoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class agentcodes
        
        Private phoneNumberField As String
        
        Private agNameField As String
        
        '''<remarks/>
        Public Property PhoneNumber() As String
            Get
                Return Me.phoneNumberField
            End Get
            Set
                Me.phoneNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AgName() As String
            Get
                Return Me.agNameField
            End Get
            Set
                Me.agNameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WSResponseOfPaymentInfo
        
        Private successField As Boolean
        
        Private messageField As String
        
        Private errorMsgField As String
        
        Private dataField As PaymentInfo
        
        '''<remarks/>
        Public Property Success() As Boolean
            Get
                Return Me.successField
            End Get
            Set
                Me.successField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorMsg() As String
            Get
                Return Me.errorMsgField
            End Get
            Set
                Me.errorMsgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Data() As PaymentInfo
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class CustomerInfo
        
        Private clientIDField As String
        
        Private namePrefixField As String
        
        Private nameSuffixField As String
        
        Private firstNameField As String
        
        Private genderField As String
        
        Private usechiIndField As String
        
        Private chiNameField As String
        
        Private addressLine1Field As String
        
        Private addressLine2Field As String
        
        Private addressLine3Field As String
        
        Private addressCityField As String
        
        Private caddressLine1Field As String
        
        Private caddressLine2Field As String
        
        Private caddressLine3Field As String
        
        Private caddressCityField As String
        
        '''<remarks/>
        Public Property ClientID() As String
            Get
                Return Me.clientIDField
            End Get
            Set
                Me.clientIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NamePrefix() As String
            Get
                Return Me.namePrefixField
            End Get
            Set
                Me.namePrefixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NameSuffix() As String
            Get
                Return Me.nameSuffixField
            End Get
            Set
                Me.nameSuffixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property gender() As String
            Get
                Return Me.genderField
            End Get
            Set
                Me.genderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property usechiInd() As String
            Get
                Return Me.usechiIndField
            End Get
            Set
                Me.usechiIndField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ChiName() As String
            Get
                Return Me.chiNameField
            End Get
            Set
                Me.chiNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property addressLine1() As String
            Get
                Return Me.addressLine1Field
            End Get
            Set
                Me.addressLine1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property addressLine2() As String
            Get
                Return Me.addressLine2Field
            End Get
            Set
                Me.addressLine2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property addressLine3() As String
            Get
                Return Me.addressLine3Field
            End Get
            Set
                Me.addressLine3Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property addressCity() As String
            Get
                Return Me.addressCityField
            End Get
            Set
                Me.addressCityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CaddressLine1() As String
            Get
                Return Me.caddressLine1Field
            End Get
            Set
                Me.caddressLine1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CaddressLine2() As String
            Get
                Return Me.caddressLine2Field
            End Get
            Set
                Me.caddressLine2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CaddressLine3() As String
            Get
                Return Me.caddressLine3Field
            End Get
            Set
                Me.caddressLine3Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CaddressCity() As String
            Get
                Return Me.caddressCityField
            End Get
            Set
                Me.caddressCityField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WSResponseOfListOfCustomerInfo
        
        Private successField As Boolean
        
        Private messageField As String
        
        Private errorMsgField As String
        
        Private dataField() As CustomerInfo
        
        '''<remarks/>
        Public Property Success() As Boolean
            Get
                Return Me.successField
            End Get
            Set
                Me.successField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorMsg() As String
            Get
                Return Me.errorMsgField
            End Get
            Set
                Me.errorMsgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Data() As CustomerInfo()
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class CustomerID
        
        Private customerID1Field As String
        
        Private phField As String
        
        Private piField As String
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("CustomerID")>  _
        Public Property CustomerID1() As String
            Get
                Return Me.customerID1Field
            End Get
            Set
                Me.customerID1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PH() As String
            Get
                Return Me.phField
            End Get
            Set
                Me.phField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PI() As String
            Get
                Return Me.piField
            End Get
            Set
                Me.piField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WSResponseOfCustomerID
        
        Private successField As Boolean
        
        Private messageField As String
        
        Private errorMsgField As String
        
        Private dataField As CustomerID
        
        '''<remarks/>
        Public Property Success() As Boolean
            Get
                Return Me.successField
            End Get
            Set
                Me.successField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorMsg() As String
            Get
                Return Me.errorMsgField
            End Get
            Set
                Me.errorMsgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Data() As CustomerID
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class cswsp_corider2
        
        Private productidField As String
        
        Private descriptionField As String
        
        Private trailerField As Integer
        
        Private coverageStatusField As String
        
        Private accountStatusField As String
        
        Private issueDateField As Date
        
        Private expiryDateField As Date
        
        Private modalPremiumField As Decimal
        
        Private customeridField As Integer
        
        Private nameField As String
        
        Private sumInsuredField As Integer
        
        Private cNameField As String
        
        Private cDescriptionField As String
        
        Private policyAccountIdField As String
        
        '''<remarks/>
        Public Property Productid() As String
            Get
                Return Me.productidField
            End Get
            Set
                Me.productidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Trailer() As Integer
            Get
                Return Me.trailerField
            End Get
            Set
                Me.trailerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CoverageStatus() As String
            Get
                Return Me.coverageStatusField
            End Get
            Set
                Me.coverageStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccountStatus() As String
            Get
                Return Me.accountStatusField
            End Get
            Set
                Me.accountStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IssueDate() As Date
            Get
                Return Me.issueDateField
            End Get
            Set
                Me.issueDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExpiryDate() As Date
            Get
                Return Me.expiryDateField
            End Get
            Set
                Me.expiryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ModalPremium() As Decimal
            Get
                Return Me.modalPremiumField
            End Get
            Set
                Me.modalPremiumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property customerid() As Integer
            Get
                Return Me.customeridField
            End Get
            Set
                Me.customeridField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SumInsured() As Integer
            Get
                Return Me.sumInsuredField
            End Get
            Set
                Me.sumInsuredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CName() As String
            Get
                Return Me.cNameField
            End Get
            Set
                Me.cNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CDescription() As String
            Get
                Return Me.cDescriptionField
            End Get
            Set
                Me.cDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PolicyAccountId() As String
            Get
                Return Me.policyAccountIdField
            End Get
            Set
                Me.policyAccountIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class cswsp_PolicyInfo
        
        Private policyAccountIDField As String
        
        Private productTypeField As String
        
        Private productIDField As String
        
        Private trailerField As Decimal
        
        Private coverageStatusField As String
        
        Private issueDateField As Date
        
        Private sumInsuredField As Decimal
        
        Private expiryDateField As Date
        
        Private modalPremiumField As Decimal
        
        Private tBL1Field As String
        
        Private tBL2Field As String
        
        Private accountStatusField As String
        
        Private descriptionField As String
        
        Private chineseDescriptionField As String
        
        Private firstNameField As String
        
        Private nameSuffixField As String
        
        Private chiFstNmField As String
        
        Private chiLstNmField As String
        
        '''<remarks/>
        Public Property PolicyAccountID() As String
            Get
                Return Me.policyAccountIDField
            End Get
            Set
                Me.policyAccountIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductType() As String
            Get
                Return Me.productTypeField
            End Get
            Set
                Me.productTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductID() As String
            Get
                Return Me.productIDField
            End Get
            Set
                Me.productIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Trailer() As Decimal
            Get
                Return Me.trailerField
            End Get
            Set
                Me.trailerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CoverageStatus() As String
            Get
                Return Me.coverageStatusField
            End Get
            Set
                Me.coverageStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IssueDate() As Date
            Get
                Return Me.issueDateField
            End Get
            Set
                Me.issueDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SumInsured() As Decimal
            Get
                Return Me.sumInsuredField
            End Get
            Set
                Me.sumInsuredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ExpiryDate() As Date
            Get
                Return Me.expiryDateField
            End Get
            Set
                Me.expiryDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ModalPremium() As Decimal
            Get
                Return Me.modalPremiumField
            End Get
            Set
                Me.modalPremiumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TBL1() As String
            Get
                Return Me.tBL1Field
            End Get
            Set
                Me.tBL1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TBL2() As String
            Get
                Return Me.tBL2Field
            End Get
            Set
                Me.tBL2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccountStatus() As String
            Get
                Return Me.accountStatusField
            End Get
            Set
                Me.accountStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ChineseDescription() As String
            Get
                Return Me.chineseDescriptionField
            End Get
            Set
                Me.chineseDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NameSuffix() As String
            Get
                Return Me.nameSuffixField
            End Get
            Set
                Me.nameSuffixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ChiFstNm() As String
            Get
                Return Me.chiFstNmField
            End Get
            Set
                Me.chiFstNmField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ChiLstNm() As String
            Get
                Return Me.chiLstNmField
            End Get
            Set
                Me.chiLstNmField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class cswsp_clientinfo
        
        Private firstNameField As String
        
        Private nameSuffixField As String
        
        Private chiFstNmField As String
        
        Private dateOfBirthField As Date
        
        Private genderField As String
        
        Private phoneMobileField As String
        
        Private phonePagerField As String
        
        Private smokerFlagField As String
        
        Private chiLstNmField As String
        
        Private emailAddrField As String
        
        Private agentCodeField As String
        
        Private unitCodeField As String
        
        Private agentPhoneField As String
        
        Private customerIDField As Decimal
        
        Private policyAccountIDField As String
        
        Private policyRelateCodeField As String
        
        Private cswpad_add1Field As String
        
        Private cswpad_add2Field As String
        
        Private cswpad_add3Field As String
        
        Private cswpad_cityField As String
        
        Private cswpad_tel1Field As String
        
        Private cswpad_tel2Field As String
        
        Private cswpad_fax1Field As String
        
        Private cswpad_fax2Field As String
        
        Private trailerField As Decimal
        
        Private insuredCustIDField As Decimal
        
        Private optoutflagField As String
        
        Private optoutotherflagField As String
        
        '''<remarks/>
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NameSuffix() As String
            Get
                Return Me.nameSuffixField
            End Get
            Set
                Me.nameSuffixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ChiFstNm() As String
            Get
                Return Me.chiFstNmField
            End Get
            Set
                Me.chiFstNmField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DateOfBirth() As Date
            Get
                Return Me.dateOfBirthField
            End Get
            Set
                Me.dateOfBirthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Gender() As String
            Get
                Return Me.genderField
            End Get
            Set
                Me.genderField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PhoneMobile() As String
            Get
                Return Me.phoneMobileField
            End Get
            Set
                Me.phoneMobileField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PhonePager() As String
            Get
                Return Me.phonePagerField
            End Get
            Set
                Me.phonePagerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SmokerFlag() As String
            Get
                Return Me.smokerFlagField
            End Get
            Set
                Me.smokerFlagField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ChiLstNm() As String
            Get
                Return Me.chiLstNmField
            End Get
            Set
                Me.chiLstNmField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmailAddr() As String
            Get
                Return Me.emailAddrField
            End Get
            Set
                Me.emailAddrField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AgentCode() As String
            Get
                Return Me.agentCodeField
            End Get
            Set
                Me.agentCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UnitCode() As String
            Get
                Return Me.unitCodeField
            End Get
            Set
                Me.unitCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AgentPhone() As String
            Get
                Return Me.agentPhoneField
            End Get
            Set
                Me.agentPhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CustomerID() As Decimal
            Get
                Return Me.customerIDField
            End Get
            Set
                Me.customerIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PolicyAccountID() As String
            Get
                Return Me.policyAccountIDField
            End Get
            Set
                Me.policyAccountIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PolicyRelateCode() As String
            Get
                Return Me.policyRelateCodeField
            End Get
            Set
                Me.policyRelateCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswpad_add1() As String
            Get
                Return Me.cswpad_add1Field
            End Get
            Set
                Me.cswpad_add1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswpad_add2() As String
            Get
                Return Me.cswpad_add2Field
            End Get
            Set
                Me.cswpad_add2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswpad_add3() As String
            Get
                Return Me.cswpad_add3Field
            End Get
            Set
                Me.cswpad_add3Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswpad_city() As String
            Get
                Return Me.cswpad_cityField
            End Get
            Set
                Me.cswpad_cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswpad_tel1() As String
            Get
                Return Me.cswpad_tel1Field
            End Get
            Set
                Me.cswpad_tel1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswpad_tel2() As String
            Get
                Return Me.cswpad_tel2Field
            End Get
            Set
                Me.cswpad_tel2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswpad_fax1() As String
            Get
                Return Me.cswpad_fax1Field
            End Get
            Set
                Me.cswpad_fax1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswpad_fax2() As String
            Get
                Return Me.cswpad_fax2Field
            End Get
            Set
                Me.cswpad_fax2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Trailer() As Decimal
            Get
                Return Me.trailerField
            End Get
            Set
                Me.trailerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InsuredCustID() As Decimal
            Get
                Return Me.insuredCustIDField
            End Get
            Set
                Me.insuredCustIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property optoutflag() As String
            Get
                Return Me.optoutflagField
            End Get
            Set
                Me.optoutflagField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property optoutotherflag() As String
            Get
                Return Me.optoutotherflagField
            End Get
            Set
                Me.optoutotherflagField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class Product_Chi
        
        Private productidField As String
        
        Private chineseDescriptionField As String
        
        '''<remarks/>
        Public Property productid() As String
            Get
                Return Me.productidField
            End Get
            Set
                Me.productidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ChineseDescription() As String
            Get
                Return Me.chineseDescriptionField
            End Get
            Set
                Me.chineseDescriptionField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class dividendoptioncodes
        
        Private dividendOptionCodeField As String
        
        Private dividendOptionDescField As String
        
        Private timestampField() As Byte
        
        '''<remarks/>
        Public Property DividendOptionCode() As String
            Get
                Return Me.dividendOptionCodeField
            End Get
            Set
                Me.dividendOptionCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DividendOptionDesc() As String
            Get
                Return Me.dividendOptionDescField
            End Get
            Set
                Me.dividendOptionDescField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property timestamp() As Byte()
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class couponoptioncodes
        
        Private couponOptionCodeField As String
        
        Private couponOptionDescField As String
        
        Private timestampField() As Byte
        
        '''<remarks/>
        Public Property CouponOptionCode() As String
            Get
                Return Me.couponOptionCodeField
            End Get
            Set
                Me.couponOptionCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CouponOptionDesc() As String
            Get
                Return Me.couponOptionDescField
            End Get
            Set
                Me.couponOptionDescField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property timestamp() As Byte()
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class product_type
        
        Private companyidField As String
        
        Private productidField As String
        
        Private productTypeField As String
        
        Private productPolValueFuncField As String
        
        Private printValueReportField As String
        
        '''<remarks/>
        Public Property companyid() As String
            Get
                Return Me.companyidField
            End Get
            Set
                Me.companyidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property productid() As String
            Get
                Return Me.productidField
            End Get
            Set
                Me.productidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductType() As String
            Get
                Return Me.productTypeField
            End Get
            Set
                Me.productTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductPolValueFunc() As String
            Get
                Return Me.productPolValueFuncField
            End Get
            Set
                Me.productPolValueFuncField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrintValueReport() As String
            Get
                Return Me.printValueReportField
            End Get
            Set
                Me.printValueReportField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class csw_ing_logo_table
        
        Private iNG_LogoField() As Byte
        
        Private addressField() As Byte
        
        Private iServiceField() As Byte
        
        Private iCaringField() As Byte
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property ING_Logo() As Byte()
            Get
                Return Me.iNG_LogoField
            End Get
            Set
                Me.iNG_LogoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property Address() As Byte()
            Get
                Return Me.addressField
            End Get
            Set
                Me.addressField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property IService() As Byte()
            Get
                Return Me.iServiceField
            End Get
            Set
                Me.iServiceField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property ICaring() As Byte()
            Get
                Return Me.iCaringField
            End Get
            Set
                Me.iCaringField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class csw_policy_value
        
        Private cswval_idField As Integer
        
        Private cswval_TFLOIDField As String
        
        Private cswval_TPOLIDField As String
        
        Private cswval_TASADTField As String
        
        Private cswval_TPADDTField As String
        
        Private cswval_TCSHVLField As Decimal
        
        Private cswval_TBSCSVField As Decimal
        
        Private cswval_TVLPUAField As Decimal
        
        Private cswval_TDIVDPField As Decimal
        
        Private cswval_TDEPINField As Decimal
        
        Private cswval_TPDFField As Decimal
        
        Private cswval_TPDFINField As Decimal
        
        Private cswval_TPRMRDField As Decimal
        
        Private cswval_TLONATField As Decimal
        
        Private cswval_TLONITField As Decimal
        
        Private cswval_TAPLATField As Decimal
        
        Private cswval_TAPLITField As Decimal
        
        Private cswval_TMAXLNField As Decimal
        
        Private cswval_TDSCLNField As Decimal
        
        Private cswval_TBSELNField As Decimal
        
        Private cswval_TDSCFRField As Decimal
        
        Private cswval_TINRRBField As Decimal
        
        Private cswval_TRDCHVField As Decimal
        
        Private cswval_TCOUDPField As Decimal
        
        Private cswval_TCOUITField As Decimal
        
        Private cswval_TERRFGField As String
        
        Private cswval_TOSPRMField As Decimal
        
        Private cswval_TREAMTField As Decimal
        
        Private cswval_DivYearField As String
        
        Private cswval_CouYearField As String
        
        Private cswval_DivDeclareField As Decimal
        
        Private cswval_PremSuspField As Decimal
        
        Private cswval_PremRefundField As Decimal
        
        Private cswval_PUASITotalField As Decimal
        
        Private cswval_PUASICurrentField As Decimal
        
        Private cswval_CouOptField As String
        
        Private cswval_DivDepositIntField As Decimal
        
        Private cswval_DivOptField As String
        
        Private cswval_MiscSuspField As Decimal
        
        Private cswval_CouDelcareField As Decimal
        
        '''<remarks/>
        Public Property cswval_id() As Integer
            Get
                Return Me.cswval_idField
            End Get
            Set
                Me.cswval_idField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TFLOID() As String
            Get
                Return Me.cswval_TFLOIDField
            End Get
            Set
                Me.cswval_TFLOIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TPOLID() As String
            Get
                Return Me.cswval_TPOLIDField
            End Get
            Set
                Me.cswval_TPOLIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TASADT() As String
            Get
                Return Me.cswval_TASADTField
            End Get
            Set
                Me.cswval_TASADTField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TPADDT() As String
            Get
                Return Me.cswval_TPADDTField
            End Get
            Set
                Me.cswval_TPADDTField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TCSHVL() As Decimal
            Get
                Return Me.cswval_TCSHVLField
            End Get
            Set
                Me.cswval_TCSHVLField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TBSCSV() As Decimal
            Get
                Return Me.cswval_TBSCSVField
            End Get
            Set
                Me.cswval_TBSCSVField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TVLPUA() As Decimal
            Get
                Return Me.cswval_TVLPUAField
            End Get
            Set
                Me.cswval_TVLPUAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TDIVDP() As Decimal
            Get
                Return Me.cswval_TDIVDPField
            End Get
            Set
                Me.cswval_TDIVDPField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TDEPIN() As Decimal
            Get
                Return Me.cswval_TDEPINField
            End Get
            Set
                Me.cswval_TDEPINField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TPDF() As Decimal
            Get
                Return Me.cswval_TPDFField
            End Get
            Set
                Me.cswval_TPDFField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TPDFIN() As Decimal
            Get
                Return Me.cswval_TPDFINField
            End Get
            Set
                Me.cswval_TPDFINField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TPRMRD() As Decimal
            Get
                Return Me.cswval_TPRMRDField
            End Get
            Set
                Me.cswval_TPRMRDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TLONAT() As Decimal
            Get
                Return Me.cswval_TLONATField
            End Get
            Set
                Me.cswval_TLONATField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TLONIT() As Decimal
            Get
                Return Me.cswval_TLONITField
            End Get
            Set
                Me.cswval_TLONITField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TAPLAT() As Decimal
            Get
                Return Me.cswval_TAPLATField
            End Get
            Set
                Me.cswval_TAPLATField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TAPLIT() As Decimal
            Get
                Return Me.cswval_TAPLITField
            End Get
            Set
                Me.cswval_TAPLITField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TMAXLN() As Decimal
            Get
                Return Me.cswval_TMAXLNField
            End Get
            Set
                Me.cswval_TMAXLNField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TDSCLN() As Decimal
            Get
                Return Me.cswval_TDSCLNField
            End Get
            Set
                Me.cswval_TDSCLNField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TBSELN() As Decimal
            Get
                Return Me.cswval_TBSELNField
            End Get
            Set
                Me.cswval_TBSELNField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TDSCFR() As Decimal
            Get
                Return Me.cswval_TDSCFRField
            End Get
            Set
                Me.cswval_TDSCFRField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TINRRB() As Decimal
            Get
                Return Me.cswval_TINRRBField
            End Get
            Set
                Me.cswval_TINRRBField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TRDCHV() As Decimal
            Get
                Return Me.cswval_TRDCHVField
            End Get
            Set
                Me.cswval_TRDCHVField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TCOUDP() As Decimal
            Get
                Return Me.cswval_TCOUDPField
            End Get
            Set
                Me.cswval_TCOUDPField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TCOUIT() As Decimal
            Get
                Return Me.cswval_TCOUITField
            End Get
            Set
                Me.cswval_TCOUITField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TERRFG() As String
            Get
                Return Me.cswval_TERRFGField
            End Get
            Set
                Me.cswval_TERRFGField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TOSPRM() As Decimal
            Get
                Return Me.cswval_TOSPRMField
            End Get
            Set
                Me.cswval_TOSPRMField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_TREAMT() As Decimal
            Get
                Return Me.cswval_TREAMTField
            End Get
            Set
                Me.cswval_TREAMTField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_DivYear() As String
            Get
                Return Me.cswval_DivYearField
            End Get
            Set
                Me.cswval_DivYearField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_CouYear() As String
            Get
                Return Me.cswval_CouYearField
            End Get
            Set
                Me.cswval_CouYearField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_DivDeclare() As Decimal
            Get
                Return Me.cswval_DivDeclareField
            End Get
            Set
                Me.cswval_DivDeclareField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_PremSusp() As Decimal
            Get
                Return Me.cswval_PremSuspField
            End Get
            Set
                Me.cswval_PremSuspField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_PremRefund() As Decimal
            Get
                Return Me.cswval_PremRefundField
            End Get
            Set
                Me.cswval_PremRefundField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_PUASITotal() As Decimal
            Get
                Return Me.cswval_PUASITotalField
            End Get
            Set
                Me.cswval_PUASITotalField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_PUASICurrent() As Decimal
            Get
                Return Me.cswval_PUASICurrentField
            End Get
            Set
                Me.cswval_PUASICurrentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_CouOpt() As String
            Get
                Return Me.cswval_CouOptField
            End Get
            Set
                Me.cswval_CouOptField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_DivDepositInt() As Decimal
            Get
                Return Me.cswval_DivDepositIntField
            End Get
            Set
                Me.cswval_DivDepositIntField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_DivOpt() As String
            Get
                Return Me.cswval_DivOptField
            End Get
            Set
                Me.cswval_DivOptField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_MiscSusp() As Decimal
            Get
                Return Me.cswval_MiscSuspField
            End Get
            Set
                Me.cswval_MiscSuspField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswval_CouDelcare() As Decimal
            Get
                Return Me.cswval_CouDelcareField
            End Get
            Set
                Me.cswval_CouDelcareField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class PolicyAccount
        
        Private policyAccountIDField As String
        
        Private companyIDField As String
        
        Private productIDField As String
        
        Private policyEffDateField As Date
        
        Private policyEndDateField As Date
        
        Private termReasonCodeField As String
        
        Private policyCurrencyField As String
        
        Private commencementDateField As Date
        
        Private accountStatusCodeField As String
        
        Private sumInsuredField As Decimal
        
        Private premiumDueDateField As Date
        
        Private takeoverField As String
        
        Private upgradeField As String
        
        Private surrenderValueField As Decimal
        
        Private basicCVField As Decimal
        
        Private divsOnDepField As Decimal
        
        Private couponOnDepField As Decimal
        
        Private pDFAmountField As Decimal
        
        Private loanAmountField As Decimal
        
        Private aPLAmountField As Decimal
        
        Private premiumRefundField As Decimal
        
        Private miscSuspenseField As Decimal
        
        Private dividendOptionField As String
        
        Private additionDeathCvrField As Decimal
        
        Private cVofPUARBField As Decimal
        
        Private dividendInterestField As Decimal
        
        Private couponInterestField As Decimal
        
        Private pDFInterestField As Decimal
        
        Private loanInterestField As Decimal
        
        Private aPLInterestField As Decimal
        
        Private oSPremiumField As Decimal
        
        Private premiumSuspenseField As Decimal
        
        Private couponOptionField As String
        
        Private reinstatAmtField As Decimal
        
        Private billingTypeField As String
        
        Private modeField As String
        
        Private modalPremiumField As Decimal
        
        Private lastModalPremiumField As Decimal
        
        Private rCDField As Date
        
        Private paidToDateField As Date
        
        Private billToDateField As Date
        
        Private noticeRecordField As String
        
        Private dueAmountField As Decimal
        
        Private notYetDueAmountField As Decimal
        
        Private policyTermDateField As Date
        
        Private totalDeclareValueField As Decimal
        
        Private currDeclValField As Decimal
        
        Private maxmiumLoanField As Decimal
        
        Private policyPremiumField As Decimal
        
        Private policyValueEffDateField As Date
        
        Private timestampField() As Byte
        
        Private pOSAmtField As Decimal
        
        Private disbursementField As Decimal
        
        Private aPLStartDateField As Date
        
        Private aPLIndicatorField As String
        
        Private billNoField As String
        
        Private policyOldStsField As String
        
        Private stsChgDateField As Date
        
        Private curmodefactorField As Decimal
        
        Private pREMIUMSTATUSField As String
        
        '''<remarks/>
        Public Property PolicyAccountID() As String
            Get
                Return Me.policyAccountIDField
            End Get
            Set
                Me.policyAccountIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompanyID() As String
            Get
                Return Me.companyIDField
            End Get
            Set
                Me.companyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductID() As String
            Get
                Return Me.productIDField
            End Get
            Set
                Me.productIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PolicyEffDate() As Date
            Get
                Return Me.policyEffDateField
            End Get
            Set
                Me.policyEffDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PolicyEndDate() As Date
            Get
                Return Me.policyEndDateField
            End Get
            Set
                Me.policyEndDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TermReasonCode() As String
            Get
                Return Me.termReasonCodeField
            End Get
            Set
                Me.termReasonCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PolicyCurrency() As String
            Get
                Return Me.policyCurrencyField
            End Get
            Set
                Me.policyCurrencyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CommencementDate() As Date
            Get
                Return Me.commencementDateField
            End Get
            Set
                Me.commencementDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccountStatusCode() As String
            Get
                Return Me.accountStatusCodeField
            End Get
            Set
                Me.accountStatusCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SumInsured() As Decimal
            Get
                Return Me.sumInsuredField
            End Get
            Set
                Me.sumInsuredField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PremiumDueDate() As Date
            Get
                Return Me.premiumDueDateField
            End Get
            Set
                Me.premiumDueDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Takeover() As String
            Get
                Return Me.takeoverField
            End Get
            Set
                Me.takeoverField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Upgrade() As String
            Get
                Return Me.upgradeField
            End Get
            Set
                Me.upgradeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SurrenderValue() As Decimal
            Get
                Return Me.surrenderValueField
            End Get
            Set
                Me.surrenderValueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BasicCV() As Decimal
            Get
                Return Me.basicCVField
            End Get
            Set
                Me.basicCVField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DivsOnDep() As Decimal
            Get
                Return Me.divsOnDepField
            End Get
            Set
                Me.divsOnDepField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CouponOnDep() As Decimal
            Get
                Return Me.couponOnDepField
            End Get
            Set
                Me.couponOnDepField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PDFAmount() As Decimal
            Get
                Return Me.pDFAmountField
            End Get
            Set
                Me.pDFAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LoanAmount() As Decimal
            Get
                Return Me.loanAmountField
            End Get
            Set
                Me.loanAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property APLAmount() As Decimal
            Get
                Return Me.aPLAmountField
            End Get
            Set
                Me.aPLAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PremiumRefund() As Decimal
            Get
                Return Me.premiumRefundField
            End Get
            Set
                Me.premiumRefundField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MiscSuspense() As Decimal
            Get
                Return Me.miscSuspenseField
            End Get
            Set
                Me.miscSuspenseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DividendOption() As String
            Get
                Return Me.dividendOptionField
            End Get
            Set
                Me.dividendOptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AdditionDeathCvr() As Decimal
            Get
                Return Me.additionDeathCvrField
            End Get
            Set
                Me.additionDeathCvrField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CVofPUARB() As Decimal
            Get
                Return Me.cVofPUARBField
            End Get
            Set
                Me.cVofPUARBField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DividendInterest() As Decimal
            Get
                Return Me.dividendInterestField
            End Get
            Set
                Me.dividendInterestField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CouponInterest() As Decimal
            Get
                Return Me.couponInterestField
            End Get
            Set
                Me.couponInterestField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PDFInterest() As Decimal
            Get
                Return Me.pDFInterestField
            End Get
            Set
                Me.pDFInterestField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LoanInterest() As Decimal
            Get
                Return Me.loanInterestField
            End Get
            Set
                Me.loanInterestField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property APLInterest() As Decimal
            Get
                Return Me.aPLInterestField
            End Get
            Set
                Me.aPLInterestField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OSPremium() As Decimal
            Get
                Return Me.oSPremiumField
            End Get
            Set
                Me.oSPremiumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PremiumSuspense() As Decimal
            Get
                Return Me.premiumSuspenseField
            End Get
            Set
                Me.premiumSuspenseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CouponOption() As String
            Get
                Return Me.couponOptionField
            End Get
            Set
                Me.couponOptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReinstatAmt() As Decimal
            Get
                Return Me.reinstatAmtField
            End Get
            Set
                Me.reinstatAmtField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BillingType() As String
            Get
                Return Me.billingTypeField
            End Get
            Set
                Me.billingTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mode() As String
            Get
                Return Me.modeField
            End Get
            Set
                Me.modeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ModalPremium() As Decimal
            Get
                Return Me.modalPremiumField
            End Get
            Set
                Me.modalPremiumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastModalPremium() As Decimal
            Get
                Return Me.lastModalPremiumField
            End Get
            Set
                Me.lastModalPremiumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RCD() As Date
            Get
                Return Me.rCDField
            End Get
            Set
                Me.rCDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PaidToDate() As Date
            Get
                Return Me.paidToDateField
            End Get
            Set
                Me.paidToDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BillToDate() As Date
            Get
                Return Me.billToDateField
            End Get
            Set
                Me.billToDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NoticeRecord() As String
            Get
                Return Me.noticeRecordField
            End Get
            Set
                Me.noticeRecordField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DueAmount() As Decimal
            Get
                Return Me.dueAmountField
            End Get
            Set
                Me.dueAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NotYetDueAmount() As Decimal
            Get
                Return Me.notYetDueAmountField
            End Get
            Set
                Me.notYetDueAmountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PolicyTermDate() As Date
            Get
                Return Me.policyTermDateField
            End Get
            Set
                Me.policyTermDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TotalDeclareValue() As Decimal
            Get
                Return Me.totalDeclareValueField
            End Get
            Set
                Me.totalDeclareValueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CurrDeclVal() As Decimal
            Get
                Return Me.currDeclValField
            End Get
            Set
                Me.currDeclValField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MaxmiumLoan() As Decimal
            Get
                Return Me.maxmiumLoanField
            End Get
            Set
                Me.maxmiumLoanField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PolicyPremium() As Decimal
            Get
                Return Me.policyPremiumField
            End Get
            Set
                Me.policyPremiumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PolicyValueEffDate() As Date
            Get
                Return Me.policyValueEffDateField
            End Get
            Set
                Me.policyValueEffDateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property timestamp() As Byte()
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property POSAmt() As Decimal
            Get
                Return Me.pOSAmtField
            End Get
            Set
                Me.pOSAmtField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Disbursement() As Decimal
            Get
                Return Me.disbursementField
            End Get
            Set
                Me.disbursementField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property APLStartDate() As Date
            Get
                Return Me.aPLStartDateField
            End Get
            Set
                Me.aPLStartDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property APLIndicator() As String
            Get
                Return Me.aPLIndicatorField
            End Get
            Set
                Me.aPLIndicatorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BillNo() As String
            Get
                Return Me.billNoField
            End Get
            Set
                Me.billNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PolicyOldSts() As String
            Get
                Return Me.policyOldStsField
            End Get
            Set
                Me.policyOldStsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StsChgDate() As Date
            Get
                Return Me.stsChgDateField
            End Get
            Set
                Me.stsChgDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property curmodefactor() As Decimal
            Get
                Return Me.curmodefactorField
            End Get
            Set
                Me.curmodefactorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PREMIUMSTATUS() As String
            Get
                Return Me.pREMIUMSTATUSField
            End Get
            Set
                Me.pREMIUMSTATUSField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class CCDRStatusCodes
        
        Private cCDRStatusCodeField As String
        
        Private cCDRStatusDescField As String
        
        Private timestampField() As Byte
        
        '''<remarks/>
        Public Property CCDRStatusCode() As String
            Get
                Return Me.cCDRStatusCodeField
            End Get
            Set
                Me.cCDRStatusCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CCDRStatusDesc() As String
            Get
                Return Me.cCDRStatusDescField
            End Get
            Set
                Me.cCDRStatusDescField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property timestamp() As Byte()
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class DDAStatusCodes
        
        Private dDAStatusCodeField As String
        
        Private dDAStatusDescField As String
        
        Private timestampField() As Byte
        
        '''<remarks/>
        Public Property DDAStatusCode() As String
            Get
                Return Me.dDAStatusCodeField
            End Get
            Set
                Me.dDAStatusCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDAStatusDesc() As String
            Get
                Return Me.dDAStatusDescField
            End Get
            Set
                Me.dDAStatusDescField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property timestamp() As Byte()
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class ModeCodes
        
        Private modeCodeField As String
        
        Private modeDescField As String
        
        Private timestampField() As Byte
        
        '''<remarks/>
        Public Property ModeCode() As String
            Get
                Return Me.modeCodeField
            End Get
            Set
                Me.modeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ModeDesc() As String
            Get
                Return Me.modeDescField
            End Get
            Set
                Me.modeDescField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property timestamp() As Byte()
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class AccountStatusCodes
        
        Private accountStatusCodeField As String
        
        Private accountStatusField As String
        
        Private timestampField() As Byte
        
        '''<remarks/>
        Public Property AccountStatusCode() As String
            Get
                Return Me.accountStatusCodeField
            End Get
            Set
                Me.accountStatusCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccountStatus() As String
            Get
                Return Me.accountStatusField
            End Get
            Set
                Me.accountStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property timestamp() As Byte()
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class BillingTypeCodes
        
        Private billingTypeCodeField As String
        
        Private billingTypeDescField As String
        
        Private timestampField() As Byte
        
        '''<remarks/>
        Public Property BillingTypeCode() As String
            Get
                Return Me.billingTypeCodeField
            End Get
            Set
                Me.billingTypeCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BillingTypeDesc() As String
            Get
                Return Me.billingTypeDescField
            End Get
            Set
                Me.billingTypeDescField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property timestamp() As Byte()
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class CCDR
        
        Private policyAccountIDField As String
        
        Private cCDRSeqNoField As Decimal
        
        Private cCDRStatusField As String
        
        Private cCDRLastStatusField As String
        
        Private cCDRDrawDateField As String
        
        Private cCDRSubmitDateField As Date
        
        Private cCDRStsChgDateField As Date
        
        Private cCDREffectiveDateField As Date
        
        Private cCDREndDateField As Date
        
        Private cCDRLastMaintDateField As Date
        
        Private cCDRCommentsField As String
        
        Private cCDROperatorField As String
        
        Private cCDRFollowUpDateField As Date
        
        Private cCDRFollowUpOprField As String
        
        Private cCDRRemarksField As String
        
        Private cCDRCardHolderNameField As String
        
        Private cCDRCardNumberField As String
        
        Private timestampField() As Byte
        
        '''<remarks/>
        Public Property PolicyAccountID() As String
            Get
                Return Me.policyAccountIDField
            End Get
            Set
                Me.policyAccountIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CCDRSeqNo() As Decimal
            Get
                Return Me.cCDRSeqNoField
            End Get
            Set
                Me.cCDRSeqNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CCDRStatus() As String
            Get
                Return Me.cCDRStatusField
            End Get
            Set
                Me.cCDRStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CCDRLastStatus() As String
            Get
                Return Me.cCDRLastStatusField
            End Get
            Set
                Me.cCDRLastStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CCDRDrawDate() As String
            Get
                Return Me.cCDRDrawDateField
            End Get
            Set
                Me.cCDRDrawDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CCDRSubmitDate() As Date
            Get
                Return Me.cCDRSubmitDateField
            End Get
            Set
                Me.cCDRSubmitDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CCDRStsChgDate() As Date
            Get
                Return Me.cCDRStsChgDateField
            End Get
            Set
                Me.cCDRStsChgDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CCDREffectiveDate() As Date
            Get
                Return Me.cCDREffectiveDateField
            End Get
            Set
                Me.cCDREffectiveDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CCDREndDate() As Date
            Get
                Return Me.cCDREndDateField
            End Get
            Set
                Me.cCDREndDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CCDRLastMaintDate() As Date
            Get
                Return Me.cCDRLastMaintDateField
            End Get
            Set
                Me.cCDRLastMaintDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CCDRComments() As String
            Get
                Return Me.cCDRCommentsField
            End Get
            Set
                Me.cCDRCommentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CCDROperator() As String
            Get
                Return Me.cCDROperatorField
            End Get
            Set
                Me.cCDROperatorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CCDRFollowUpDate() As Date
            Get
                Return Me.cCDRFollowUpDateField
            End Get
            Set
                Me.cCDRFollowUpDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CCDRFollowUpOpr() As String
            Get
                Return Me.cCDRFollowUpOprField
            End Get
            Set
                Me.cCDRFollowUpOprField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CCDRRemarks() As String
            Get
                Return Me.cCDRRemarksField
            End Get
            Set
                Me.cCDRRemarksField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CCDRCardHolderName() As String
            Get
                Return Me.cCDRCardHolderNameField
            End Get
            Set
                Me.cCDRCardHolderNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CCDRCardNumber() As String
            Get
                Return Me.cCDRCardNumberField
            End Get
            Set
                Me.cCDRCardNumberField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property timestamp() As Byte()
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class DDA
        
        Private policyAccountIDField As String
        
        Private dDASeqNoField As Decimal
        
        Private dDAStatusField As String
        
        Private dDALastStatusField As String
        
        Private dDADrawDateField As String
        
        Private dDASubmitDateField As Date
        
        Private dDAStsChgDateField As Date
        
        Private dDAEffectiveDateField As Date
        
        Private dDAEndDateField As Date
        
        Private dDALastMaintDateField As Date
        
        Private dDACommentsField As String
        
        Private dDAOperatorField As String
        
        Private dDAFollowUpDateField As Date
        
        Private dDAFollowUpOprField As String
        
        Private dDARemarksField As String
        
        Private dDAPayorInfoField As String
        
        Private dDABankAccountNoField As String
        
        Private dDABankerNameField As String
        
        Private dDABankCodeField As String
        
        Private dDABranchCodeField As String
        
        Private timestampField() As Byte
        
        Private dDASIMPINDField As String
        
        Private dDAPAYERIDField As String
        
        Private dDAPAYERIDTYPEField As String
        
        Private dDADEBITLIMITField As Decimal
        
        Private dCCLPTField As String
        
        Private dCBKCDField As String
        
        Private dCACNOField As String
        
        Private dCBNKField As String
        
        Private dCPRVField As String
        
        Private dCCTYField As String
        
        Private dCRBNKField As String
        
        Private dCPYRField As String
        
        '''<remarks/>
        Public Property PolicyAccountID() As String
            Get
                Return Me.policyAccountIDField
            End Get
            Set
                Me.policyAccountIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDASeqNo() As Decimal
            Get
                Return Me.dDASeqNoField
            End Get
            Set
                Me.dDASeqNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDAStatus() As String
            Get
                Return Me.dDAStatusField
            End Get
            Set
                Me.dDAStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDALastStatus() As String
            Get
                Return Me.dDALastStatusField
            End Get
            Set
                Me.dDALastStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDADrawDate() As String
            Get
                Return Me.dDADrawDateField
            End Get
            Set
                Me.dDADrawDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDASubmitDate() As Date
            Get
                Return Me.dDASubmitDateField
            End Get
            Set
                Me.dDASubmitDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDAStsChgDate() As Date
            Get
                Return Me.dDAStsChgDateField
            End Get
            Set
                Me.dDAStsChgDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDAEffectiveDate() As Date
            Get
                Return Me.dDAEffectiveDateField
            End Get
            Set
                Me.dDAEffectiveDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDAEndDate() As Date
            Get
                Return Me.dDAEndDateField
            End Get
            Set
                Me.dDAEndDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDALastMaintDate() As Date
            Get
                Return Me.dDALastMaintDateField
            End Get
            Set
                Me.dDALastMaintDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDAComments() As String
            Get
                Return Me.dDACommentsField
            End Get
            Set
                Me.dDACommentsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDAOperator() As String
            Get
                Return Me.dDAOperatorField
            End Get
            Set
                Me.dDAOperatorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDAFollowUpDate() As Date
            Get
                Return Me.dDAFollowUpDateField
            End Get
            Set
                Me.dDAFollowUpDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDAFollowUpOpr() As String
            Get
                Return Me.dDAFollowUpOprField
            End Get
            Set
                Me.dDAFollowUpOprField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDARemarks() As String
            Get
                Return Me.dDARemarksField
            End Get
            Set
                Me.dDARemarksField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDAPayorInfo() As String
            Get
                Return Me.dDAPayorInfoField
            End Get
            Set
                Me.dDAPayorInfoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDABankAccountNo() As String
            Get
                Return Me.dDABankAccountNoField
            End Get
            Set
                Me.dDABankAccountNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDABankerName() As String
            Get
                Return Me.dDABankerNameField
            End Get
            Set
                Me.dDABankerNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDABankCode() As String
            Get
                Return Me.dDABankCodeField
            End Get
            Set
                Me.dDABankCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDABranchCode() As String
            Get
                Return Me.dDABranchCodeField
            End Get
            Set
                Me.dDABranchCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property timestamp() As Byte()
            Get
                Return Me.timestampField
            End Get
            Set
                Me.timestampField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDASIMPIND() As String
            Get
                Return Me.dDASIMPINDField
            End Get
            Set
                Me.dDASIMPINDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDAPAYERID() As String
            Get
                Return Me.dDAPAYERIDField
            End Get
            Set
                Me.dDAPAYERIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDAPAYERIDTYPE() As String
            Get
                Return Me.dDAPAYERIDTYPEField
            End Get
            Set
                Me.dDAPAYERIDTYPEField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDADEBITLIMIT() As Decimal
            Get
                Return Me.dDADEBITLIMITField
            End Get
            Set
                Me.dDADEBITLIMITField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DCCLPT() As String
            Get
                Return Me.dCCLPTField
            End Get
            Set
                Me.dCCLPTField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DCBKCD() As String
            Get
                Return Me.dCBKCDField
            End Get
            Set
                Me.dCBKCDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DCACNO() As String
            Get
                Return Me.dCACNOField
            End Get
            Set
                Me.dCACNOField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DCBNK() As String
            Get
                Return Me.dCBNKField
            End Get
            Set
                Me.dCBNKField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DCPRV() As String
            Get
                Return Me.dCPRVField
            End Get
            Set
                Me.dCPRVField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DCCTY() As String
            Get
                Return Me.dCCTYField
            End Get
            Set
                Me.dCCTYField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DCRBNK() As String
            Get
                Return Me.dCRBNKField
            End Get
            Set
                Me.dCRBNKField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DCPYR() As String
            Get
                Return Me.dCPYRField
            End Get
            Set
                Me.dCPYRField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class PolicyInfo
        
        Private dDAField() As DDA
        
        Private cCDRField() As CCDR
        
        Private billingTypeCodesField() As BillingTypeCodes
        
        Private accountStatusCodesField() As AccountStatusCodes
        
        Private modeCodesField() As ModeCodes
        
        Private dDAStatusCodesField() As DDAStatusCodes
        
        Private cCDRStatusCodesField() As CCDRStatusCodes
        
        Private policyAccountField() As PolicyAccount
        
        Private csw_policy_valueField() As csw_policy_value
        
        Private agentcodesField() As agentcodes
        
        Private csw_ing_logo_tableField() As csw_ing_logo_table
        
        Private product_typeField() As product_type
        
        Private couponoptioncodesField() As couponoptioncodes
        
        Private dividendoptioncodesField() As dividendoptioncodes
        
        Private product_ChiField() As Product_Chi
        
        Private cswsp_clientinfoField() As cswsp_clientinfo
        
        Private cswsp_PolicyInfoField() As cswsp_PolicyInfo
        
        Private cswsp_corider2Field() As cswsp_corider2
        
        '''<remarks/>
        Public Property DDA() As DDA()
            Get
                Return Me.dDAField
            End Get
            Set
                Me.dDAField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CCDR() As CCDR()
            Get
                Return Me.cCDRField
            End Get
            Set
                Me.cCDRField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property BillingTypeCodes() As BillingTypeCodes()
            Get
                Return Me.billingTypeCodesField
            End Get
            Set
                Me.billingTypeCodesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AccountStatusCodes() As AccountStatusCodes()
            Get
                Return Me.accountStatusCodesField
            End Get
            Set
                Me.accountStatusCodesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ModeCodes() As ModeCodes()
            Get
                Return Me.modeCodesField
            End Get
            Set
                Me.modeCodesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDAStatusCodes() As DDAStatusCodes()
            Get
                Return Me.dDAStatusCodesField
            End Get
            Set
                Me.dDAStatusCodesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CCDRStatusCodes() As CCDRStatusCodes()
            Get
                Return Me.cCDRStatusCodesField
            End Get
            Set
                Me.cCDRStatusCodesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PolicyAccount() As PolicyAccount()
            Get
                Return Me.policyAccountField
            End Get
            Set
                Me.policyAccountField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property csw_policy_value() As csw_policy_value()
            Get
                Return Me.csw_policy_valueField
            End Get
            Set
                Me.csw_policy_valueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property agentcodes() As agentcodes()
            Get
                Return Me.agentcodesField
            End Get
            Set
                Me.agentcodesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property csw_ing_logo_table() As csw_ing_logo_table()
            Get
                Return Me.csw_ing_logo_tableField
            End Get
            Set
                Me.csw_ing_logo_tableField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property product_type() As product_type()
            Get
                Return Me.product_typeField
            End Get
            Set
                Me.product_typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property couponoptioncodes() As couponoptioncodes()
            Get
                Return Me.couponoptioncodesField
            End Get
            Set
                Me.couponoptioncodesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property dividendoptioncodes() As dividendoptioncodes()
            Get
                Return Me.dividendoptioncodesField
            End Get
            Set
                Me.dividendoptioncodesField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Product_Chi() As Product_Chi()
            Get
                Return Me.product_ChiField
            End Get
            Set
                Me.product_ChiField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswsp_clientinfo() As cswsp_clientinfo()
            Get
                Return Me.cswsp_clientinfoField
            End Get
            Set
                Me.cswsp_clientinfoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswsp_PolicyInfo() As cswsp_PolicyInfo()
            Get
                Return Me.cswsp_PolicyInfoField
            End Get
            Set
                Me.cswsp_PolicyInfoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswsp_corider2() As cswsp_corider2()
            Get
                Return Me.cswsp_corider2Field
            End Get
            Set
                Me.cswsp_corider2Field = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WSResponseOfPolicyInfo
        
        Private successField As Boolean
        
        Private messageField As String
        
        Private errorMsgField As String
        
        Private dataField As PolicyInfo
        
        '''<remarks/>
        Public Property Success() As Boolean
            Get
                Return Me.successField
            End Get
            Set
                Me.successField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorMsg() As String
            Get
                Return Me.errorMsgField
            End Get
            Set
                Me.errorMsgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Data() As PolicyInfo
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class HKFIRpt
        
        Private rptTypeField As String
        
        Private policy_NoField As String
        
        Private plan_NameField As String
        
        Private risk_LevelField As String
        
        Private inforce_DateField As Date
        
        Private vulnerabilityField As String
        
        Private cooling_Off_DateField As System.Nullable(Of Date)
        
        Private delivery_DateField As System.Nullable(Of Date)
        
        Private modeField As String
        
        Private modalpremiumField As Decimal
        
        Private customeridField As Decimal
        
        Private courtesy_Call_MadeField As Integer
        
        Private pH_NameprefixField As String
        
        Private pH_NamesuffixField As String
        
        Private pH_FirstnameField As String
        
        Private tel1Field As String
        
        Private tel2Field As String
        
        Private address1Field As String
        
        Private address2Field As String
        
        Private address3Field As String
        
        Private address4Field As String
        
        Private sA_NameprefixField As String
        
        Private sA_NamesuffixField As String
        
        Private sA_FirstnameField As String
        
        Private locationField As String
        
        '''<remarks/>
        Public Property RptType() As String
            Get
                Return Me.rptTypeField
            End Get
            Set
                Me.rptTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Policy_No() As String
            Get
                Return Me.policy_NoField
            End Get
            Set
                Me.policy_NoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Plan_Name() As String
            Get
                Return Me.plan_NameField
            End Get
            Set
                Me.plan_NameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Risk_Level() As String
            Get
                Return Me.risk_LevelField
            End Get
            Set
                Me.risk_LevelField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Inforce_Date() As Date
            Get
                Return Me.inforce_DateField
            End Get
            Set
                Me.inforce_DateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Vulnerability() As String
            Get
                Return Me.vulnerabilityField
            End Get
            Set
                Me.vulnerabilityField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Cooling_Off_Date() As System.Nullable(Of Date)
            Get
                Return Me.cooling_Off_DateField
            End Get
            Set
                Me.cooling_Off_DateField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(IsNullable:=true)>  _
        Public Property Delivery_Date() As System.Nullable(Of Date)
            Get
                Return Me.delivery_DateField
            End Get
            Set
                Me.delivery_DateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property mode() As String
            Get
                Return Me.modeField
            End Get
            Set
                Me.modeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property modalpremium() As Decimal
            Get
                Return Me.modalpremiumField
            End Get
            Set
                Me.modalpremiumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property customerid() As Decimal
            Get
                Return Me.customeridField
            End Get
            Set
                Me.customeridField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Courtesy_Call_Made() As Integer
            Get
                Return Me.courtesy_Call_MadeField
            End Get
            Set
                Me.courtesy_Call_MadeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PH_Nameprefix() As String
            Get
                Return Me.pH_NameprefixField
            End Get
            Set
                Me.pH_NameprefixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PH_Namesuffix() As String
            Get
                Return Me.pH_NamesuffixField
            End Get
            Set
                Me.pH_NamesuffixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PH_Firstname() As String
            Get
                Return Me.pH_FirstnameField
            End Get
            Set
                Me.pH_FirstnameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Tel1() As String
            Get
                Return Me.tel1Field
            End Get
            Set
                Me.tel1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Tel2() As String
            Get
                Return Me.tel2Field
            End Get
            Set
                Me.tel2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Address1() As String
            Get
                Return Me.address1Field
            End Get
            Set
                Me.address1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Address2() As String
            Get
                Return Me.address2Field
            End Get
            Set
                Me.address2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Address3() As String
            Get
                Return Me.address3Field
            End Get
            Set
                Me.address3Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Address4() As String
            Get
                Return Me.address4Field
            End Get
            Set
                Me.address4Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SA_Nameprefix() As String
            Get
                Return Me.sA_NameprefixField
            End Get
            Set
                Me.sA_NameprefixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SA_Namesuffix() As String
            Get
                Return Me.sA_NamesuffixField
            End Get
            Set
                Me.sA_NamesuffixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SA_Firstname() As String
            Get
                Return Me.sA_FirstnameField
            End Get
            Set
                Me.sA_FirstnameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Location() As String
            Get
                Return Me.locationField
            End Get
            Set
                Me.locationField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WSResponseOfListOfHKFIRpt
        
        Private successField As Boolean
        
        Private messageField As String
        
        Private errorMsgField As String
        
        Private dataField() As HKFIRpt
        
        '''<remarks/>
        Public Property Success() As Boolean
            Get
                Return Me.successField
            End Get
            Set
                Me.successField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorMsg() As String
            Get
                Return Me.errorMsgField
            End Get
            Set
                Me.errorMsgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Data() As HKFIRpt()
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class PremCallRpt
        
        Private policyaccountidField As String
        
        Private productidField As String
        
        Private descriptionField As String
        
        Private paidtodateField As Date
        
        Private modeField As String
        
        Private aplindicatorField As String
        
        Private modalpremiumField As Decimal
        
        Private posamtField As Decimal
        
        Private billingtypeField As String
        
        Private nameprefixField As String
        
        Private namesuffixField As String
        
        Private firstnameField As String
        
        Private phonemobileField As String
        
        Private phonepagerField As String
        
        Private cswpad_tel1Field As String
        
        Private cswpad_tel2Field As String
        
        Private cswpad_add1Field As String
        
        Private cswpad_add2Field As String
        
        Private cswpad_add3Field As String
        
        Private cswpad_cityField As String
        
        Private unitcodeField As String
        
        Private agentcodeField As String
        
        Private locationcodeField As String
        
        Private nameprefix1Field As String
        
        Private namesuffix1Field As String
        
        Private firstname1Field As String
        
        Private isPremHolidayField As String
        
        '''<remarks/>
        Public Property policyaccountid() As String
            Get
                Return Me.policyaccountidField
            End Get
            Set
                Me.policyaccountidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property productid() As String
            Get
                Return Me.productidField
            End Get
            Set
                Me.productidField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property description() As String
            Get
                Return Me.descriptionField
            End Get
            Set
                Me.descriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property paidtodate() As Date
            Get
                Return Me.paidtodateField
            End Get
            Set
                Me.paidtodateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property mode() As String
            Get
                Return Me.modeField
            End Get
            Set
                Me.modeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property aplindicator() As String
            Get
                Return Me.aplindicatorField
            End Get
            Set
                Me.aplindicatorField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property modalpremium() As Decimal
            Get
                Return Me.modalpremiumField
            End Get
            Set
                Me.modalpremiumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property posamt() As Decimal
            Get
                Return Me.posamtField
            End Get
            Set
                Me.posamtField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property billingtype() As String
            Get
                Return Me.billingtypeField
            End Get
            Set
                Me.billingtypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameprefix() As String
            Get
                Return Me.nameprefixField
            End Get
            Set
                Me.nameprefixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property namesuffix() As String
            Get
                Return Me.namesuffixField
            End Get
            Set
                Me.namesuffixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property firstname() As String
            Get
                Return Me.firstnameField
            End Get
            Set
                Me.firstnameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property phonemobile() As String
            Get
                Return Me.phonemobileField
            End Get
            Set
                Me.phonemobileField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property phonepager() As String
            Get
                Return Me.phonepagerField
            End Get
            Set
                Me.phonepagerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswpad_tel1() As String
            Get
                Return Me.cswpad_tel1Field
            End Get
            Set
                Me.cswpad_tel1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswpad_tel2() As String
            Get
                Return Me.cswpad_tel2Field
            End Get
            Set
                Me.cswpad_tel2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswpad_add1() As String
            Get
                Return Me.cswpad_add1Field
            End Get
            Set
                Me.cswpad_add1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswpad_add2() As String
            Get
                Return Me.cswpad_add2Field
            End Get
            Set
                Me.cswpad_add2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswpad_add3() As String
            Get
                Return Me.cswpad_add3Field
            End Get
            Set
                Me.cswpad_add3Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswpad_city() As String
            Get
                Return Me.cswpad_cityField
            End Get
            Set
                Me.cswpad_cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property unitcode() As String
            Get
                Return Me.unitcodeField
            End Get
            Set
                Me.unitcodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property agentcode() As String
            Get
                Return Me.agentcodeField
            End Get
            Set
                Me.agentcodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property locationcode() As String
            Get
                Return Me.locationcodeField
            End Get
            Set
                Me.locationcodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property nameprefix1() As String
            Get
                Return Me.nameprefix1Field
            End Get
            Set
                Me.nameprefix1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property namesuffix1() As String
            Get
                Return Me.namesuffix1Field
            End Get
            Set
                Me.namesuffix1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property firstname1() As String
            Get
                Return Me.firstname1Field
            End Get
            Set
                Me.firstname1Field = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute("Is Prem. Holiday")>  _
        Public Property IsPremHoliday() As String
            Get
                Return Me.isPremHolidayField
            End Get
            Set
                Me.isPremHolidayField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WSResponseOfListOfPremCallRpt
        
        Private successField As Boolean
        
        Private messageField As String
        
        Private errorMsgField As String
        
        Private dataField() As PremCallRpt
        
        '''<remarks/>
        Public Property Success() As Boolean
            Get
                Return Me.successField
            End Get
            Set
                Me.successField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorMsg() As String
            Get
                Return Me.errorMsgField
            End Get
            Set
                Me.errorMsgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Data() As PremCallRpt()
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class RptCompanyLogo
        
        Private iNG_LogoField() As Byte
        
        Private iNG_CompanyAddrField() As Byte
        
        Private iNG_PhoneField() As Byte
        
        Private careCompanyField() As Byte
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property ING_Logo() As Byte()
            Get
                Return Me.iNG_LogoField
            End Get
            Set
                Me.iNG_LogoField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property ING_CompanyAddr() As Byte()
            Get
                Return Me.iNG_CompanyAddrField
            End Get
            Set
                Me.iNG_CompanyAddrField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property ING_Phone() As Byte()
            Get
                Return Me.iNG_PhoneField
            End Get
            Set
                Me.iNG_PhoneField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property CareCompany() As Byte()
            Get
                Return Me.careCompanyField
            End Get
            Set
                Me.careCompanyField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class RptILASNotificationLetter
        
        Private policyAccountIDField As String
        
        Private productIDField As String
        
        Private productDescriptionField As String
        
        Private chineseDescriptionField As String
        
        Private policyCurrencyField As String
        
        Private address1Field As String
        
        Private address2Field As String
        
        Private address3Field As String
        
        Private cityField As String
        
        Private telePhone1Field As String
        
        Private telePhone2Field As String
        
        Private firstNameField As String
        
        Private lastNameField As String
        
        Private chiFstNmField As String
        
        Private chiLstNmField As String
        
        Private phoneMobileField As String
        
        Private locationCodeField As String
        
        Private agentLastNameField As String
        
        Private agentFirstNameField As String
        
        Private agentChiNameField As String
        
        Private modeField As String
        
        Private modeDescField As String
        
        Private cooloffDateField As String
        
        Private modalPremiumField As Decimal
        
        Private oneOffModalPremiumField As Decimal
        
        Private periodField As Integer
        
        '''<remarks/>
        Public Property PolicyAccountID() As String
            Get
                Return Me.policyAccountIDField
            End Get
            Set
                Me.policyAccountIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductID() As String
            Get
                Return Me.productIDField
            End Get
            Set
                Me.productIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProductDescription() As String
            Get
                Return Me.productDescriptionField
            End Get
            Set
                Me.productDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ChineseDescription() As String
            Get
                Return Me.chineseDescriptionField
            End Get
            Set
                Me.chineseDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PolicyCurrency() As String
            Get
                Return Me.policyCurrencyField
            End Get
            Set
                Me.policyCurrencyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Address1() As String
            Get
                Return Me.address1Field
            End Get
            Set
                Me.address1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Address2() As String
            Get
                Return Me.address2Field
            End Get
            Set
                Me.address2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Address3() As String
            Get
                Return Me.address3Field
            End Get
            Set
                Me.address3Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property City() As String
            Get
                Return Me.cityField
            End Get
            Set
                Me.cityField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TelePhone1() As String
            Get
                Return Me.telePhone1Field
            End Get
            Set
                Me.telePhone1Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TelePhone2() As String
            Get
                Return Me.telePhone2Field
            End Get
            Set
                Me.telePhone2Field = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FirstName() As String
            Get
                Return Me.firstNameField
            End Get
            Set
                Me.firstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LastName() As String
            Get
                Return Me.lastNameField
            End Get
            Set
                Me.lastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ChiFstNm() As String
            Get
                Return Me.chiFstNmField
            End Get
            Set
                Me.chiFstNmField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ChiLstNm() As String
            Get
                Return Me.chiLstNmField
            End Get
            Set
                Me.chiLstNmField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PhoneMobile() As String
            Get
                Return Me.phoneMobileField
            End Get
            Set
                Me.phoneMobileField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LocationCode() As String
            Get
                Return Me.locationCodeField
            End Get
            Set
                Me.locationCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AgentLastName() As String
            Get
                Return Me.agentLastNameField
            End Get
            Set
                Me.agentLastNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AgentFirstName() As String
            Get
                Return Me.agentFirstNameField
            End Get
            Set
                Me.agentFirstNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AgentChiName() As String
            Get
                Return Me.agentChiNameField
            End Get
            Set
                Me.agentChiNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Mode() As String
            Get
                Return Me.modeField
            End Get
            Set
                Me.modeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ModeDesc() As String
            Get
                Return Me.modeDescField
            End Get
            Set
                Me.modeDescField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CooloffDate() As String
            Get
                Return Me.cooloffDateField
            End Get
            Set
                Me.cooloffDateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ModalPremium() As Decimal
            Get
                Return Me.modalPremiumField
            End Get
            Set
                Me.modalPremiumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OneOffModalPremium() As Decimal
            Get
                Return Me.oneOffModalPremiumField
            End Get
            Set
                Me.oneOffModalPremiumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Period() As Integer
            Get
                Return Me.periodField
            End Get
            Set
                Me.periodField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class RptILASNotificationLetterInfo
        
        Private rptILASNotificationLetterListField() As RptILASNotificationLetter
        
        Private iMasterPlanField() As String
        
        Private iKnowUSinglePremiumPlanField() As String
        
        Private iKnowURegularPlanField() As String
        
        Private horizonPlanField() As String
        
        Private iKnowSPUpfrontChargeField As String
        
        Private horizonUpfrontChargeField As String
        
        Private suitabilityOptionField As String
        
        Private companyLogoField As RptCompanyLogo
        
        '''<remarks/>
        Public Property RptILASNotificationLetterList() As RptILASNotificationLetter()
            Get
                Return Me.rptILASNotificationLetterListField
            End Get
            Set
                Me.rptILASNotificationLetterListField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property iMasterPlan() As String()
            Get
                Return Me.iMasterPlanField
            End Get
            Set
                Me.iMasterPlanField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property iKnowUSinglePremiumPlan() As String()
            Get
                Return Me.iKnowUSinglePremiumPlanField
            End Get
            Set
                Me.iKnowUSinglePremiumPlanField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property iKnowURegularPlan() As String()
            Get
                Return Me.iKnowURegularPlanField
            End Get
            Set
                Me.iKnowURegularPlanField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HorizonPlan() As String()
            Get
                Return Me.horizonPlanField
            End Get
            Set
                Me.horizonPlanField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property iKnowSPUpfrontCharge() As String
            Get
                Return Me.iKnowSPUpfrontChargeField
            End Get
            Set
                Me.iKnowSPUpfrontChargeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HorizonUpfrontCharge() As String
            Get
                Return Me.horizonUpfrontChargeField
            End Get
            Set
                Me.horizonUpfrontChargeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property SuitabilityOption() As String
            Get
                Return Me.suitabilityOptionField
            End Get
            Set
                Me.suitabilityOptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompanyLogo() As RptCompanyLogo
            Get
                Return Me.companyLogoField
            End Get
            Set
                Me.companyLogoField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WSResponseOfRptILASNotificationLetterInfo
        
        Private successField As Boolean
        
        Private messageField As String
        
        Private errorMsgField As String
        
        Private dataField As RptILASNotificationLetterInfo
        
        '''<remarks/>
        Public Property Success() As Boolean
            Get
                Return Me.successField
            End Get
            Set
                Me.successField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorMsg() As String
            Get
                Return Me.errorMsgField
            End Get
            Set
                Me.errorMsgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Data() As RptILASNotificationLetterInfo
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class RptILASFundDesc
        
        Private fundCodeField As String
        
        Private fundDescriptionField As String
        
        Private fundChiDescField As String
        
        '''<remarks/>
        Public Property FundCode() As String
            Get
                Return Me.fundCodeField
            End Get
            Set
                Me.fundCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FundDescription() As String
            Get
                Return Me.fundDescriptionField
            End Get
            Set
                Me.fundDescriptionField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FundChiDesc() As String
            Get
                Return Me.fundChiDescField
            End Get
            Set
                Me.fundChiDescField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WSResponseOfListOfRptILASFundDesc
        
        Private successField As Boolean
        
        Private messageField As String
        
        Private errorMsgField As String
        
        Private dataField() As RptILASFundDesc
        
        '''<remarks/>
        Public Property Success() As Boolean
            Get
                Return Me.successField
            End Get
            Set
                Me.successField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorMsg() As String
            Get
                Return Me.errorMsgField
            End Get
            Set
                Me.errorMsgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Data() As RptILASFundDesc()
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class MCUReportList
        
        Private cswrel_rpt_noField As Decimal
        
        Private cswrel_disp_nameField As String
        
        Private cswrel_file_nameField As String
        
        Private cswrel_file_typeField As String
        
        Private cswrel_file_pathField As String
        
        '''<remarks/>
        Public Property cswrel_rpt_no() As Decimal
            Get
                Return Me.cswrel_rpt_noField
            End Get
            Set
                Me.cswrel_rpt_noField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswrel_disp_name() As String
            Get
                Return Me.cswrel_disp_nameField
            End Get
            Set
                Me.cswrel_disp_nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswrel_file_name() As String
            Get
                Return Me.cswrel_file_nameField
            End Get
            Set
                Me.cswrel_file_nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswrel_file_type() As String
            Get
                Return Me.cswrel_file_typeField
            End Get
            Set
                Me.cswrel_file_typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property cswrel_file_path() As String
            Get
                Return Me.cswrel_file_pathField
            End Get
            Set
                Me.cswrel_file_pathField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WSResponseOfListOfMCUReportList
        
        Private successField As Boolean
        
        Private messageField As String
        
        Private errorMsgField As String
        
        Private dataField() As MCUReportList
        
        '''<remarks/>
        Public Property Success() As Boolean
            Get
                Return Me.successField
            End Get
            Set
                Me.successField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorMsg() As String
            Get
                Return Me.errorMsgField
            End Get
            Set
                Me.errorMsgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Data() As MCUReportList()
            Get
                Return Me.dataField
            End Get
            Set
                Me.dataField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://tempuri.org/", IsNullable:=false)>  _
    Partial Public Class DBSOAPHeader
        Inherits System.Web.Services.Protocols.SoapHeader
        
        Private projectField As String
        
        Private connectionAliasField As String
        
        Private userField As String
        
        Private userTypeField As String
        
        Private envField As String
        
        Private compField As String
        
        Private cIWProjectField As String
        
        Private cIWConnectionAliasField As String
        
        Private cIWUserField As String
        
        Private cIWEnvField As String
        
        Private cIWCompField As String
        
        Private anyAttrField() As System.Xml.XmlAttribute
        
        '''<remarks/>
        Public Property Project() As String
            Get
                Return Me.projectField
            End Get
            Set
                Me.projectField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ConnectionAlias() As String
            Get
                Return Me.connectionAliasField
            End Get
            Set
                Me.connectionAliasField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property User() As String
            Get
                Return Me.userField
            End Get
            Set
                Me.userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserType() As String
            Get
                Return Me.userTypeField
            End Get
            Set
                Me.userTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Env() As String
            Get
                Return Me.envField
            End Get
            Set
                Me.envField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Comp() As String
            Get
                Return Me.compField
            End Get
            Set
                Me.compField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CIWProject() As String
            Get
                Return Me.cIWProjectField
            End Get
            Set
                Me.cIWProjectField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CIWConnectionAlias() As String
            Get
                Return Me.cIWConnectionAliasField
            End Get
            Set
                Me.cIWConnectionAliasField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CIWUser() As String
            Get
                Return Me.cIWUserField
            End Get
            Set
                Me.cIWUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CIWEnv() As String
            Get
                Return Me.cIWEnvField
            End Get
            Set
                Me.cIWEnvField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CIWComp() As String
            Get
                Return Me.cIWCompField
            End Get
            Set
                Me.cIWCompField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAnyAttributeAttribute()>  _
        Public Property AnyAttr() As System.Xml.XmlAttribute()
            Get
                Return Me.anyAttrField
            End Get
            Set
                Me.anyAttrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.FlagsAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum PostSalesCallType
        
        '''<remarks/>
        Welcome = 1
        
        '''<remarks/>
        iLAS = 2
        
        '''<remarks/>
        VulnerableCustomer = 4
        
        '''<remarks/>
        SuitabilityMismatch = 8
        
        '''<remarks/>
        NoFNA = 16
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetMandateListCompletedEventHandler(ByVal sender As Object, ByVal e As GetMandateListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMandateListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsSendData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsReceData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetDirDebitEnqCompletedEventHandler(ByVal sender As Object, ByVal e As GetDirDebitEnqCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDirDebitEnqCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsSendData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsReceData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetTranHistCompletedEventHandler(ByVal sender As Object, ByVal e As GetTranHistCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTranHistCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsSendData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsReceData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetTranPostingCompletedEventHandler(ByVal sender As Object, ByVal e As GetTranPostingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTranPostingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsSendData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsReceData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetSubAcctBalEnqCompletedEventHandler(ByVal sender As Object, ByVal e As GetSubAcctBalEnqCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSubAcctBalEnqCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsSendData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsReceData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetSubAcctBalPostingCompletedEventHandler(ByVal sender As Object, ByVal e As GetSubAcctBalPostingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSubAcctBalPostingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsSendData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsReceData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetPaymentHistCompletedEventHandler(ByVal sender As Object, ByVal e As GetPaymentHistCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPaymentHistCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsSendData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsReceData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CheckPendingFSWCompletedEventHandler(ByVal sender As Object, ByVal e As CheckPendingFSWCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckPendingFSWCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsSendData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsReceData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetPolicyListMCUCIWCompletedEventHandler(ByVal sender As Object, ByVal e As GetPolicyListMCUCIWCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPolicyListMCUCIWCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lngErrNo() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErrMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property intCnt() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCustomerListMcuCompletedEventHandler(ByVal sender As Object, ByVal e As GetCustomerListMcuCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCustomerListMcuCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lngErrNo() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErrMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property intCnt() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtCusLst() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getMcuAgentInfoListCompletedEventHandler(ByVal sender As Object, ByVal e As getMcuAgentInfoListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMcuAgentInfoListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErrMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub checkUserRightCompletedEventHandler(ByVal sender As Object, ByVal e As checkUserRightCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class checkUserRightCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetUPSGroupCompletedEventHandler(ByVal sender As Object, ByVal e As GetUPSGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUPSGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lngErrNo() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErrMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getAgentAccountListCompletedEventHandler(ByVal sender As Object, ByVal e As getAgentAccountListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAgentAccountListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lngErrNo() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErrMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ds() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub LoadComboBoxCompletedEventHandler(ByVal sender As Object, ByVal e As LoadComboBoxCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadComboBoxCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dt() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property cbo() As Object
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Object)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetPersonalInfoAddress4McuCustomerCompletedEventHandler(ByVal sender As Object, ByVal e As GetPersonalInfoAddress4McuCustomerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPersonalInfoAddress4McuCustomerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErrMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property blnCovSmoker() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtPersonal() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtAddress() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtCIWPersonInfo() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(5),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetGIPolicyMcuListCompletedEventHandler(ByVal sender As Object, ByVal e As GetGIPolicyMcuListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGIPolicyMcuListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lngErrNo() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErrMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property intCnt() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetFundTxHistCompletedEventHandler(ByVal sender As Object, ByVal e As GetFundTxHistCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFundTxHistCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsReceData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetDDRRejectReasonCompletedEventHandler(ByVal sender As Object, ByVal e As GetDDRRejectReasonCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDDRRejectReasonCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsSendData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsReceData() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CheckUserPermissionCompletedEventHandler(ByVal sender As Object, ByVal e As CheckUserPermissionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckUserPermissionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtFuncList() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetPrivRSCompletedEventHandler(ByVal sender As Object, ByVal e As GetPrivRSCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPrivRSCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property lngErrNo() As Long
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Long)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErrMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getMClaimPolicyRecCompletedEventHandler(ByVal sender As Object, ByVal e As getMClaimPolicyRecCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMClaimPolicyRecCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErrMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getMcuMClaimPendingRecCompletedEventHandler(ByVal sender As Object, ByVal e As getMcuMClaimPendingRecCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMcuMClaimPendingRecCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErrMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getMcuMClaimBenefitRecCompletedEventHandler(ByVal sender As Object, ByVal e As getMcuMClaimBenefitRecCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMcuMClaimBenefitRecCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErrMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub chkWebsConnetionCompletedEventHandler(ByVal sender As Object, ByVal e As chkWebsConnetionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class chkWebsConnetionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property UserID() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getMacauDDACCDRStatusCodeCompletedEventHandler(ByVal sender As Object, ByVal e As getMacauDDACCDRStatusCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMacauDDACCDRStatusCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getAplHistMcuRecCompletedEventHandler(ByVal sender As Object, ByVal e As getAplHistMcuRecCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAplHistMcuRecCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getMcuSmsMsgDetailCompletedEventHandler(ByVal sender As Object, ByVal e As getMcuSmsMsgDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMcuSmsMsgDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getMcuSMSPolicyInfoCompletedEventHandler(ByVal sender As Object, ByVal e As getMcuSMSPolicyInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMcuSMSPolicyInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getMcuQDAPRefundExtraPaymentAlertCompletedEventHandler(ByVal sender As Object, ByVal e As getMcuQDAPRefundExtraPaymentAlertCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMcuQDAPRefundExtraPaymentAlertCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getPendingAgtCodeCompletedEventHandler(ByVal sender As Object, ByVal e As getPendingAgtCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getPendingAgtCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getMcuPolicyUWCompletedEventHandler(ByVal sender As Object, ByVal e As getMcuPolicyUWCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMcuPolicyUWCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ds() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getMcuUWOutstandingReqCompletedEventHandler(ByVal sender As Object, ByVal e As getMcuUWOutstandingReqCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getMcuUWOutstandingReqCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetNBRPolicyMcuCompletedEventHandler(ByVal sender As Object, ByVal e As GetNBRPolicyMcuCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetNBRPolicyMcuCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetNCBCompletedEventHandler(ByVal sender As Object, ByVal e As GetNCBCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetNCBCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub RetrievePostSalesCallQuestionsCompletedEventHandler(ByVal sender As Object, ByVal e As RetrievePostSalesCallQuestionsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrievePostSalesCallQuestionsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dt() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SavePostSalesCallQuestionCompletedEventHandler(ByVal sender As Object, ByVal e As SavePostSalesCallQuestionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SavePostSalesCallQuestionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtQuestion() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub IsPostSalesCallQuestionInUseCompletedEventHandler(ByVal sender As Object, ByVal e As IsPostSalesCallQuestionInUseCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsPostSalesCallQuestionInUseCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property isUsed() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DeletePostSalesCallQuestionCompletedEventHandler(ByVal sender As Object, ByVal e As DeletePostSalesCallQuestionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeletePostSalesCallQuestionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub RetrievePostSalesCallProductSettingsCompletedEventHandler(ByVal sender As Object, ByVal e As RetrievePostSalesCallProductSettingsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrievePostSalesCallProductSettingsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsSettings() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub RetrievePostSalesCallProductCategoryCompletedEventHandler(ByVal sender As Object, ByVal e As RetrievePostSalesCallProductCategoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrievePostSalesCallProductCategoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtCategory() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdatePostSalesCallProductSettingCompletedEventHandler(ByVal sender As Object, ByVal e As UpdatePostSalesCallProductSettingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdatePostSalesCallProductSettingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AddPostSalesCallProductSettingCompletedEventHandler(ByVal sender As Object, ByVal e As AddPostSalesCallProductSettingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddPostSalesCallProductSettingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DeletePostSalesCallProductSettingCompletedEventHandler(ByVal sender As Object, ByVal e As DeletePostSalesCallProductSettingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeletePostSalesCallProductSettingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub RetrievePostSalesCallProductsCompletedEventHandler(ByVal sender As Object, ByVal e As RetrievePostSalesCallProductsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrievePostSalesCallProductsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtProduct() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CopySalesCallProductSettingCompletedEventHandler(ByVal sender As Object, ByVal e As CopySalesCallProductSettingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CopySalesCallProductSettingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AddPostSalesCallProductQuestionCompletedEventHandler(ByVal sender As Object, ByVal e As AddPostSalesCallProductQuestionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddPostSalesCallProductQuestionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property isExists() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub RemovePostSalesCallProductQuestionCompletedEventHandler(ByVal sender As Object, ByVal e As RemovePostSalesCallProductQuestionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RemovePostSalesCallProductQuestionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SetPostSalesCallProductQuestionOrderCompletedEventHandler(ByVal sender As Object, ByVal e As SetPostSalesCallProductQuestionOrderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SetPostSalesCallProductQuestionOrderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub IsPostSalesCallProductSettingExistsCompletedEventHandler(ByVal sender As Object, ByVal e As IsPostSalesCallProductSettingExistsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsPostSalesCallProductSettingExistsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property isExists() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCoverageCompletedEventHandler(ByVal sender As Object, ByVal e As GetCoverageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCoverageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtCov() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub RetrievePostSalesCallPolicyQuestionCompletedEventHandler(ByVal sender As Object, ByVal e As RetrievePostSalesCallPolicyQuestionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrievePostSalesCallPolicyQuestionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtQuestions() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SavePostSalesCallPolicyAnswerCompletedEventHandler(ByVal sender As Object, ByVal e As SavePostSalesCallPolicyAnswerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SavePostSalesCallPolicyAnswerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub IsPostSalesCallCompletedCompletedEventHandler(ByVal sender As Object, ByVal e As IsPostSalesCallCompletedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class IsPostSalesCallCompletedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property blnCompleted() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub RetrieveInvestmentFundCompletedEventHandler(ByVal sender As Object, ByVal e As RetrieveInvestmentFundCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrieveInvestmentFundCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtFund() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateFundRiskLevelCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateFundRiskLevelCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateFundRiskLevelCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetPolicyPostSalesCallTypeCompletedEventHandler(ByVal sender As Object, ByVal e As GetPolicyPostSalesCallTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPolicyPostSalesCallTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property callType() As PostSalesCallType
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),PostSalesCallType)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub RetrievePolicyHighRiskFundCompletedEventHandler(ByVal sender As Object, ByVal e As RetrievePolicyHighRiskFundCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RetrievePolicyHighRiskFundCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtFund() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetSerLogbyCriteriaCompletedEventHandler(ByVal sender As Object, ByVal e As GetSerLogbyCriteriaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSerLogbyCriteriaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetSerLogbyCusIdOrCriteriaCompletedEventHandler(ByVal sender As Object, ByVal e As GetSerLogbyCusIdOrCriteriaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSerLogbyCusIdOrCriteriaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetMarkinCompletedEventHandler(ByVal sender As Object, ByVal e As GetMarkinCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMarkinCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtMarkin() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErrMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetMarkinHistCompletedEventHandler(ByVal sender As Object, ByVal e As GetMarkinHistCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMarkinHistCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtMarkinHist() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErrMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetPendingMarkinCompletedEventHandler(ByVal sender As Object, ByVal e As GetPendingMarkinCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPendingMarkinCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtPendingMarkin() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErrMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetPendingMarkinHistCompletedEventHandler(ByVal sender As Object, ByVal e As GetPendingMarkinHistCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPendingMarkinHistCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtPendingMarkinHist() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strErrMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetReportListCompletedEventHandler(ByVal sender As Object, ByVal e As GetReportListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetReportListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WSResponseOfListOfMCUReportList
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WSResponseOfListOfMCUReportList)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub LoadFundPopupCompletedEventHandler(ByVal sender As Object, ByVal e As LoadFundPopupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoadFundPopupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WSResponseOfListOfRptILASFundDesc
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WSResponseOfListOfRptILASFundDesc)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetRptILASNotificationLetterInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetRptILASNotificationLetterInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRptILASNotificationLetterInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WSResponseOfRptILASNotificationLetterInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WSResponseOfRptILASNotificationLetterInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetPremCallRptCompletedEventHandler(ByVal sender As Object, ByVal e As GetPremCallRptCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPremCallRptCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WSResponseOfListOfPremCallRpt
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WSResponseOfListOfPremCallRpt)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetHKFIReportCompletedEventHandler(ByVal sender As Object, ByVal e As GetHKFIReportCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetHKFIReportCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WSResponseOfListOfHKFIRpt
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WSResponseOfListOfHKFIRpt)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetPolicyInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetPolicyInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPolicyInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WSResponseOfPolicyInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WSResponseOfPolicyInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetPIPHCustomerIDCompletedEventHandler(ByVal sender As Object, ByVal e As GetPIPHCustomerIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPIPHCustomerIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WSResponseOfCustomerID
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WSResponseOfCustomerID)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCustomerAndAgentInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetCustomerAndAgentInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCustomerAndAgentInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WSResponseOfListOfCustomerInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WSResponseOfListOfCustomerInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetPaymentInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetPaymentInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPaymentInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WSResponseOfPaymentInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WSResponseOfPaymentInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ClaimsAuditCompletedEventHandler(ByVal sender As Object, ByVal e As ClaimsAuditCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ClaimsAuditCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As WSResponseOfObject
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),WSResponseOfObject)
            End Get
        End Property
    End Class
End Namespace
