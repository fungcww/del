'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace CCMWS
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="CCMWSSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class CCMWS
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private globalHeaderValueField As GlobalHeader
        
        Private UpdateFundRiskSetupStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddFundRiskSetupMastReqIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertFundRiskDerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteFundRiskDerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FundRisk_RiskDerSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateMPFINVFundOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignValidationSetupSubmit_LifeAsiaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignCampInfoSetupSubmit_LifeAsiaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignCampSettingSetupSubmit_LifeAsiaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignTierSetupSubmit_LifeAsiaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignRemarkSetupSubmit_LifeAsiaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignCampCcSetupSubmit_LifeAsiaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignRemapWordSetupSubmit_LifeAsiaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignCcMastSetupSubmit_LifeAsiaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignCheckEndorsementOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignCommCtrlSetupSubmit_LifeAsiaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignCommTierSetupSubmit_LifeAsiaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignCommRateSetupSubmit_LifeAsiaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getePAMReconCodeTableOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getLastBusinessDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private writeReconReportLogOperationCompleted As System.Threading.SendOrPostCallback
        
        Private writeAppEventLogOperationCompleted As System.Threading.SendOrPostCallback
        
        Private upload2SQLbyBulkCopyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private removeDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAS400UnitBalUTRSDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAS400UTRNDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getUnitBalRptDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getConnectionStringOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAS400ConnectionStringOperationCompleted As System.Threading.SendOrPostCallback
        
        Private isWorkingDayOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getPolicyStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getAS400FundMovmentUTRNRvsTxnListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getFundMovementRptTxnListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private deleteAS400DownloadFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CopyGeneralLedgerByAccountCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetGeneralLedgerReportByYearAndMonthOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WriteCCMEventLogOperationCompleted As System.Threading.SendOrPostCallback
        
        Private WriteCCMExportFileLogOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetExportFileHistoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBOCOMPolicyNoListByDateRangeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPolicyAddressOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PrintSTPRequestByLetterRequestIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLetterCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLetterCodeWithSubTypeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPrintFileToppanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertToppanReconOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertToppanMailerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetNightBatchPrintFileReconOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCCMSFundTransRulesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCIWAccumulatedPremiumPaidOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProductTypeByPolNoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRoleInfoByPolNoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFundGainLossValueOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmailNotificationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateEmailNotificationStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLetterTemplateMailMergeInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetParamAS400MappingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCustomerAddressOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertLetterDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GenerateFileOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignCommControlSearch_DBMotoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignCommTierSearch_DBMotoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignCommRateSearch_DBMotoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCampCommTierOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCampCommRateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCampCommCtrlOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCampCommTierMaxReqSeqOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCampCommRateMaxReqSeqOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCampCommCtrlMaxReqSeqOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignCommTierSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignCommRateSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignCommCtrlSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCampCommTierOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCampCommRateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCampCommCtrlOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DelCampaignCommTierOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DelCampaignCommRateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DelCampaignCommCtrlOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCampaignRequestCommentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCampaignRequestCommentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCampaignRequestRefNumberOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCampaignPremiumDiscountSummaryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCampaignCommissionSummaryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCampaignCodeNextSeqIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCampaignRequestNumNextSeqIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FundRiskMPFINVFundSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertFundIgnoreCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeleteFundIgnoreCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFundRiskSetupMastByStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateFundRiskSetupMastOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertEmailAttachmentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateEmailStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmailByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendEmailByIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCampDefaultMaxReqSeqOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCampDefaultOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCampSetupMastByStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AddCampSetupMastReqIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignDefaultSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DelCampaignDefaultOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCampDefaultOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCampSetupStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCampValidationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCampValidationMaxReqSeqOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignValidationSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DelCampaignValidationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCampValidationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignValidationSearch_DBMotoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCampCampInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCampCampInfoMaxReqSeqOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignCampInfoSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DelCampaignCampInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCampCampInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignCampInfoSearch_DBMotoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCalastoneMastStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCampCampSettingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCampCampSettingMaxReqSeqOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignCampSettingSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DelCampaignCampSettingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCampCampSettingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignCampSettingSearch_DBMotoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCampTierOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCampTierMaxReqSeqOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignTierSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DelCampaignTierOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCampTierOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignTierSearch_DBMotoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCampRemarkOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCampRemarkMaxReqSeqOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignRemarkSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DelCampaignRemarkOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCampRemarkOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignRemarkSearch_DBMotoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCampCampCcOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCampCampCcMaxReqSeqOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignCampCcSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DelCampaignCampCcOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCampCampCcOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignCampCcSearch_DBMotoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCampCcMastOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCampCcMastMaxReqSeqOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignCcMastSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DelCampaignCcMastOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCampCcMastOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignCcMastSearch_DBMotoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCampRemapWordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCampRemapWordMaxReqSeqOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignRemapWordSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DelCampaignRemapWordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCampRemapWordOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignRemapWordSearch_DBMotoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCampaignSetupCommentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCampaignSetupCommentOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCampSetupMastOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCampStatusByUIOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCampSetupLogOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignSetupLogSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TESTOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCCMS_CodetableOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPrintLetterRequestByProgIdAndPrintStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdatePosTransQueuePrintStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdatePosTransQueueLetterCompletedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateCswTransHeaderCompletedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLetterMailMergeRelationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLetterMailMergeChartOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPlanNameByDescOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPlanNameByPolNoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCMUpoloadTypeListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetNbsPoliciesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GenApplicationFormOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FindConvertedPolInSameTransOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBusinessDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignSetupApprovalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignClearSetupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignDefaultSetupSubmit_LifeAsiaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HelloWorldOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLetterParamOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLetterParamFullListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetImageParamOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetImageParamListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPrintFileParamOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPrintSetParamOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CreateBatchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateBatchStatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertBatchDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLtrBatchIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertLetterDataDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertBatchDataToRequestDtlOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLtrRequestIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertLetterRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertLtrRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UpdateLtmRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserAccessRightOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLetterDetailOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLetterParam_UIOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLetterParam_UI_RestrictedOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCustomerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SearchLetter_UIOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPrintStatusCodesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLetterRequestSummaryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertUserEditLetterDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserEditVerOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetTableFunctionCodesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetAuditKeyFieldOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SearchAuditLog_UIOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdmGetUserSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdmGetUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DelAdmUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveAdmUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdmGetGroupSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdmGetGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DelAdmGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveAdmGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdmGetFunctionSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdmGetFunctionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DelAdmFunctionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveAdmFunctionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdmGetFunctionCatOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdmGetAppsSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdmGetAppsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DelAdmAppsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveAdmAppsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdmGetFuncCatSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdmGetFuncCatOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DelAdmFuncCatOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveAdmFuncCatOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdmGetAppsGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DelAdmAppsGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveAdmAppsGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdmGetGroupUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DelAdmGroupUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveAdmGroupUserOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdmGetGroupFunctionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DelAdmGroupFunctionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveAdmGroupFunctionOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdmGetUserGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DelAdmUserGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveAdmUserGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AdmGetFunctionGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DelAdmFunctionGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveAdmFunctionGroupOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetNextBusinessDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetNextBusinessDate_MCUOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CampaignDefaultSearch_DBMotoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCampaignTypeCodesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCampaignSetupActionCodesOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPlanCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetDistributeChannelByPlanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSalesUnitCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CheckAgentTypeExistOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetMortalityClassByPlanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSubPlanCodeByPlanOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRMLifeFundHouseInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetRMLifeFundTradeInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertCalastoneFundTradeMastOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetCalastoneSearchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFMSInfoByFundCodeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmailAlertOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmailIdOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InsertEmailMastOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.CS2005.My.MySettings.Default.CS2005_CCMWS_CCMWS
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Property GlobalHeaderValue() As GlobalHeader
            Get
                Return Me.globalHeaderValueField
            End Get
            Set
                Me.globalHeaderValueField = value
            End Set
        End Property
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event UpdateFundRiskSetupStatusCompleted As UpdateFundRiskSetupStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event AddFundRiskSetupMastReqIDCompleted As AddFundRiskSetupMastReqIDCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertFundRiskDerCompleted As InsertFundRiskDerCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteFundRiskDerCompleted As DeleteFundRiskDerCompletedEventHandler
        
        '''<remarks/>
        Public Event FundRisk_RiskDerSearchCompleted As FundRisk_RiskDerSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateMPFINVFundCompleted As UpdateMPFINVFundCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignValidationSetupSubmit_LifeAsiaCompleted As CampaignValidationSetupSubmit_LifeAsiaCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignCampInfoSetupSubmit_LifeAsiaCompleted As CampaignCampInfoSetupSubmit_LifeAsiaCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignCampSettingSetupSubmit_LifeAsiaCompleted As CampaignCampSettingSetupSubmit_LifeAsiaCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignTierSetupSubmit_LifeAsiaCompleted As CampaignTierSetupSubmit_LifeAsiaCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignRemarkSetupSubmit_LifeAsiaCompleted As CampaignRemarkSetupSubmit_LifeAsiaCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignCampCcSetupSubmit_LifeAsiaCompleted As CampaignCampCcSetupSubmit_LifeAsiaCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignRemapWordSetupSubmit_LifeAsiaCompleted As CampaignRemapWordSetupSubmit_LifeAsiaCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignCcMastSetupSubmit_LifeAsiaCompleted As CampaignCcMastSetupSubmit_LifeAsiaCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignCheckEndorsementCompleted As CampaignCheckEndorsementCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignCommCtrlSetupSubmit_LifeAsiaCompleted As CampaignCommCtrlSetupSubmit_LifeAsiaCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignCommTierSetupSubmit_LifeAsiaCompleted As CampaignCommTierSetupSubmit_LifeAsiaCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignCommRateSetupSubmit_LifeAsiaCompleted As CampaignCommRateSetupSubmit_LifeAsiaCompletedEventHandler
        
        '''<remarks/>
        Public Event getePAMReconCodeTableCompleted As getePAMReconCodeTableCompletedEventHandler
        
        '''<remarks/>
        Public Event getLastBusinessDateCompleted As getLastBusinessDateCompletedEventHandler
        
        '''<remarks/>
        Public Event writeReconReportLogCompleted As writeReconReportLogCompletedEventHandler
        
        '''<remarks/>
        Public Event writeAppEventLogCompleted As writeAppEventLogCompletedEventHandler
        
        '''<remarks/>
        Public Event upload2SQLbyBulkCopyCompleted As upload2SQLbyBulkCopyCompletedEventHandler
        
        '''<remarks/>
        Public Event removeDataCompleted As removeDataCompletedEventHandler
        
        '''<remarks/>
        Public Event getAS400UnitBalUTRSDataCompleted As getAS400UnitBalUTRSDataCompletedEventHandler
        
        '''<remarks/>
        Public Event getAS400UTRNDataCompleted As getAS400UTRNDataCompletedEventHandler
        
        '''<remarks/>
        Public Event getUnitBalRptDataCompleted As getUnitBalRptDataCompletedEventHandler
        
        '''<remarks/>
        Public Event getConnectionStringCompleted As getConnectionStringCompletedEventHandler
        
        '''<remarks/>
        Public Event getAS400ConnectionStringCompleted As getAS400ConnectionStringCompletedEventHandler
        
        '''<remarks/>
        Public Event isWorkingDayCompleted As isWorkingDayCompletedEventHandler
        
        '''<remarks/>
        Public Event getPolicyStatusCompleted As getPolicyStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event getAS400FundMovmentUTRNRvsTxnListCompleted As getAS400FundMovmentUTRNRvsTxnListCompletedEventHandler
        
        '''<remarks/>
        Public Event getFundMovementRptTxnListCompleted As getFundMovementRptTxnListCompletedEventHandler
        
        '''<remarks/>
        Public Event deleteAS400DownloadFileCompleted As deleteAS400DownloadFileCompletedEventHandler
        
        '''<remarks/>
        Public Event CopyGeneralLedgerByAccountCodeCompleted As CopyGeneralLedgerByAccountCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetGeneralLedgerReportByYearAndMonthCompleted As GetGeneralLedgerReportByYearAndMonthCompletedEventHandler
        
        '''<remarks/>
        Public Event WriteCCMEventLogCompleted As WriteCCMEventLogCompletedEventHandler
        
        '''<remarks/>
        Public Event WriteCCMExportFileLogCompleted As WriteCCMExportFileLogCompletedEventHandler
        
        '''<remarks/>
        Public Event GetExportFileHistoryCompleted As GetExportFileHistoryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBOCOMPolicyNoListByDateRangeCompleted As GetBOCOMPolicyNoListByDateRangeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPolicyAddressCompleted As GetPolicyAddressCompletedEventHandler
        
        '''<remarks/>
        Public Event PrintSTPRequestByLetterRequestIDCompleted As PrintSTPRequestByLetterRequestIDCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLetterCodeCompleted As GetLetterCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLetterCodeWithSubTypeCompleted As GetLetterCodeWithSubTypeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPrintFileToppanCompleted As GetPrintFileToppanCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertToppanReconCompleted As InsertToppanReconCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertToppanMailerCompleted As InsertToppanMailerCompletedEventHandler
        
        '''<remarks/>
        Public Event GetNightBatchPrintFileReconCompleted As GetNightBatchPrintFileReconCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCCMSFundTransRulesCompleted As GetCCMSFundTransRulesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCIWAccumulatedPremiumPaidCompleted As GetCIWAccumulatedPremiumPaidCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProductTypeByPolNoCompleted As GetProductTypeByPolNoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRoleInfoByPolNoCompleted As GetRoleInfoByPolNoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFundGainLossValueCompleted As GetFundGainLossValueCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmailNotificationCompleted As GetEmailNotificationCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateEmailNotificationStatusCompleted As UpdateEmailNotificationStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLetterTemplateMailMergeInfoCompleted As GetLetterTemplateMailMergeInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetParamAS400MappingCompleted As GetParamAS400MappingCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCustomerAddressCompleted As GetCustomerAddressCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertLetterDataCompleted As InsertLetterDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GenerateFileCompleted As GenerateFileCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignCommControlSearch_DBMotoCompleted As CampaignCommControlSearch_DBMotoCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignCommTierSearch_DBMotoCompleted As CampaignCommTierSearch_DBMotoCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignCommRateSearch_DBMotoCompleted As CampaignCommRateSearch_DBMotoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCampCommTierCompleted As InsertCampCommTierCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCampCommRateCompleted As InsertCampCommRateCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCampCommCtrlCompleted As InsertCampCommCtrlCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCampCommTierMaxReqSeqCompleted As GetCampCommTierMaxReqSeqCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCampCommRateMaxReqSeqCompleted As GetCampCommRateMaxReqSeqCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCampCommCtrlMaxReqSeqCompleted As GetCampCommCtrlMaxReqSeqCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignCommTierSearchCompleted As CampaignCommTierSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignCommRateSearchCompleted As CampaignCommRateSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignCommCtrlSearchCompleted As CampaignCommCtrlSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCampCommTierCompleted As UpdateCampCommTierCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCampCommRateCompleted As UpdateCampCommRateCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCampCommCtrlCompleted As UpdateCampCommCtrlCompletedEventHandler
        
        '''<remarks/>
        Public Event DelCampaignCommTierCompleted As DelCampaignCommTierCompletedEventHandler
        
        '''<remarks/>
        Public Event DelCampaignCommRateCompleted As DelCampaignCommRateCompletedEventHandler
        
        '''<remarks/>
        Public Event DelCampaignCommCtrlCompleted As DelCampaignCommCtrlCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCampaignRequestCommentCompleted As GetCampaignRequestCommentCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCampaignRequestCommentCompleted As InsertCampaignRequestCommentCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCampaignRequestRefNumberCompleted As GetCampaignRequestRefNumberCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCampaignPremiumDiscountSummaryCompleted As GetCampaignPremiumDiscountSummaryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCampaignCommissionSummaryCompleted As GetCampaignCommissionSummaryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCampaignCodeNextSeqIdCompleted As GetCampaignCodeNextSeqIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCampaignRequestNumNextSeqIdCompleted As GetCampaignRequestNumNextSeqIdCompletedEventHandler
        
        '''<remarks/>
        Public Event FundRiskMPFINVFundSearchCompleted As FundRiskMPFINVFundSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertFundIgnoreCodeCompleted As InsertFundIgnoreCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event DeleteFundIgnoreCodeCompleted As DeleteFundIgnoreCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFundRiskSetupMastByStatusCompleted As GetFundRiskSetupMastByStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateFundRiskSetupMastCompleted As UpdateFundRiskSetupMastCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertEmailAttachmentCompleted As InsertEmailAttachmentCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateEmailStatusCompleted As UpdateEmailStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmailByIdCompleted As GetEmailByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event SendEmailByIdCompleted As SendEmailByIdCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCampDefaultMaxReqSeqCompleted As GetCampDefaultMaxReqSeqCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCampDefaultCompleted As InsertCampDefaultCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCampSetupMastByStatusCompleted As GetCampSetupMastByStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event AddCampSetupMastReqIDCompleted As AddCampSetupMastReqIDCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignDefaultSearchCompleted As CampaignDefaultSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event DelCampaignDefaultCompleted As DelCampaignDefaultCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCampDefaultCompleted As UpdateCampDefaultCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCampSetupStatusCompleted As UpdateCampSetupStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCampValidationCompleted As InsertCampValidationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCampValidationMaxReqSeqCompleted As GetCampValidationMaxReqSeqCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignValidationSearchCompleted As CampaignValidationSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event DelCampaignValidationCompleted As DelCampaignValidationCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCampValidationCompleted As UpdateCampValidationCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignValidationSearch_DBMotoCompleted As CampaignValidationSearch_DBMotoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCampCampInfoCompleted As InsertCampCampInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCampCampInfoMaxReqSeqCompleted As GetCampCampInfoMaxReqSeqCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignCampInfoSearchCompleted As CampaignCampInfoSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event DelCampaignCampInfoCompleted As DelCampaignCampInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCampCampInfoCompleted As UpdateCampCampInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignCampInfoSearch_DBMotoCompleted As CampaignCampInfoSearch_DBMotoCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCalastoneMastStatusCompleted As UpdateCalastoneMastStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCampCampSettingCompleted As InsertCampCampSettingCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCampCampSettingMaxReqSeqCompleted As GetCampCampSettingMaxReqSeqCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignCampSettingSearchCompleted As CampaignCampSettingSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event DelCampaignCampSettingCompleted As DelCampaignCampSettingCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCampCampSettingCompleted As UpdateCampCampSettingCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignCampSettingSearch_DBMotoCompleted As CampaignCampSettingSearch_DBMotoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCampTierCompleted As InsertCampTierCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCampTierMaxReqSeqCompleted As GetCampTierMaxReqSeqCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignTierSearchCompleted As CampaignTierSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event DelCampaignTierCompleted As DelCampaignTierCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCampTierCompleted As UpdateCampTierCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignTierSearch_DBMotoCompleted As CampaignTierSearch_DBMotoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCampRemarkCompleted As InsertCampRemarkCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCampRemarkMaxReqSeqCompleted As GetCampRemarkMaxReqSeqCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignRemarkSearchCompleted As CampaignRemarkSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event DelCampaignRemarkCompleted As DelCampaignRemarkCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCampRemarkCompleted As UpdateCampRemarkCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignRemarkSearch_DBMotoCompleted As CampaignRemarkSearch_DBMotoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCampCampCcCompleted As InsertCampCampCcCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCampCampCcMaxReqSeqCompleted As GetCampCampCcMaxReqSeqCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignCampCcSearchCompleted As CampaignCampCcSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event DelCampaignCampCcCompleted As DelCampaignCampCcCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCampCampCcCompleted As UpdateCampCampCcCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignCampCcSearch_DBMotoCompleted As CampaignCampCcSearch_DBMotoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCampCcMastCompleted As InsertCampCcMastCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCampCcMastMaxReqSeqCompleted As GetCampCcMastMaxReqSeqCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignCcMastSearchCompleted As CampaignCcMastSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event DelCampaignCcMastCompleted As DelCampaignCcMastCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCampCcMastCompleted As UpdateCampCcMastCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignCcMastSearch_DBMotoCompleted As CampaignCcMastSearch_DBMotoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCampRemapWordCompleted As InsertCampRemapWordCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCampRemapWordMaxReqSeqCompleted As GetCampRemapWordMaxReqSeqCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignRemapWordSearchCompleted As CampaignRemapWordSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event DelCampaignRemapWordCompleted As DelCampaignRemapWordCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCampRemapWordCompleted As UpdateCampRemapWordCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignRemapWordSearch_DBMotoCompleted As CampaignRemapWordSearch_DBMotoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCampaignSetupCommentCompleted As GetCampaignSetupCommentCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCampaignSetupCommentCompleted As InsertCampaignSetupCommentCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCampSetupMastCompleted As UpdateCampSetupMastCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCampStatusByUICompleted As UpdateCampStatusByUICompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCampSetupLogCompleted As InsertCampSetupLogCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignSetupLogSearchCompleted As CampaignSetupLogSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event TESTCompleted As TESTCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCCMS_CodetableCompleted As GetCCMS_CodetableCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPrintLetterRequestByProgIdAndPrintStatusCompleted As GetPrintLetterRequestByProgIdAndPrintStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdatePosTransQueuePrintStatusCompleted As UpdatePosTransQueuePrintStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdatePosTransQueueLetterCompletedCompleted As UpdatePosTransQueueLetterCompletedCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateCswTransHeaderCompletedCompleted As UpdateCswTransHeaderCompletedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLetterMailMergeRelationCompleted As GetLetterMailMergeRelationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLetterMailMergeChartCompleted As GetLetterMailMergeChartCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPlanNameByDescCompleted As GetPlanNameByDescCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPlanNameByPolNoCompleted As GetPlanNameByPolNoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCMUpoloadTypeListCompleted As GetCMUpoloadTypeListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetNbsPoliciesCompleted As GetNbsPoliciesCompletedEventHandler
        
        '''<remarks/>
        Public Event GenApplicationFormCompleted As GenApplicationFormCompletedEventHandler
        
        '''<remarks/>
        Public Event FindConvertedPolInSameTransCompleted As FindConvertedPolInSameTransCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBusinessDateCompleted As GetBusinessDateCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignSetupApprovalCompleted As CampaignSetupApprovalCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignClearSetupCompleted As CampaignClearSetupCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignDefaultSetupSubmit_LifeAsiaCompleted As CampaignDefaultSetupSubmit_LifeAsiaCompletedEventHandler
        
        '''<remarks/>
        Public Event HelloWorldCompleted As HelloWorldCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLetterParamCompleted As GetLetterParamCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLetterParamFullListCompleted As GetLetterParamFullListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetImageParamCompleted As GetImageParamCompletedEventHandler
        
        '''<remarks/>
        Public Event GetImageParamListCompleted As GetImageParamListCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPrintFileParamCompleted As GetPrintFileParamCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPrintSetParamCompleted As GetPrintSetParamCompletedEventHandler
        
        '''<remarks/>
        Public Event CreateBatchCompleted As CreateBatchCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateBatchStatusCompleted As UpdateBatchStatusCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertBatchDetailCompleted As InsertBatchDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLtrBatchIdCompleted As GetLtrBatchIdCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertLetterDataDetailCompleted As InsertLetterDataDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertBatchDataToRequestDtlCompleted As InsertBatchDataToRequestDtlCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLtrRequestIdCompleted As GetLtrRequestIdCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertLetterRequestCompleted As InsertLetterRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertLtrRequestCompleted As InsertLtrRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event UpdateLtmRequestCompleted As UpdateLtmRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserAccessRightCompleted As GetUserAccessRightCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLetterDetailCompleted As GetLetterDetailCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLetterParam_UICompleted As GetLetterParam_UICompletedEventHandler
        
        '''<remarks/>
        Public Event GetLetterParam_UI_RestrictedCompleted As GetLetterParam_UI_RestrictedCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCustomerCompleted As GetCustomerCompletedEventHandler
        
        '''<remarks/>
        Public Event SearchLetter_UICompleted As SearchLetter_UICompletedEventHandler
        
        '''<remarks/>
        Public Event GetPrintStatusCodesCompleted As GetPrintStatusCodesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLetterRequestSummaryCompleted As GetLetterRequestSummaryCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertUserEditLetterDataCompleted As InsertUserEditLetterDataCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserEditVerCompleted As GetUserEditVerCompletedEventHandler
        
        '''<remarks/>
        Public Event GetTableFunctionCodesCompleted As GetTableFunctionCodesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetAuditKeyFieldCompleted As GetAuditKeyFieldCompletedEventHandler
        
        '''<remarks/>
        Public Event SearchAuditLog_UICompleted As SearchAuditLog_UICompletedEventHandler
        
        '''<remarks/>
        Public Event AdmGetUserSearchCompleted As AdmGetUserSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event AdmGetUserCompleted As AdmGetUserCompletedEventHandler
        
        '''<remarks/>
        Public Event DelAdmUserCompleted As DelAdmUserCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveAdmUserCompleted As SaveAdmUserCompletedEventHandler
        
        '''<remarks/>
        Public Event AdmGetGroupSearchCompleted As AdmGetGroupSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event AdmGetGroupCompleted As AdmGetGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event DelAdmGroupCompleted As DelAdmGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveAdmGroupCompleted As SaveAdmGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event AdmGetFunctionSearchCompleted As AdmGetFunctionSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event AdmGetFunctionCompleted As AdmGetFunctionCompletedEventHandler
        
        '''<remarks/>
        Public Event DelAdmFunctionCompleted As DelAdmFunctionCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveAdmFunctionCompleted As SaveAdmFunctionCompletedEventHandler
        
        '''<remarks/>
        Public Event AdmGetFunctionCatCompleted As AdmGetFunctionCatCompletedEventHandler
        
        '''<remarks/>
        Public Event AdmGetAppsSearchCompleted As AdmGetAppsSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event AdmGetAppsCompleted As AdmGetAppsCompletedEventHandler
        
        '''<remarks/>
        Public Event DelAdmAppsCompleted As DelAdmAppsCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveAdmAppsCompleted As SaveAdmAppsCompletedEventHandler
        
        '''<remarks/>
        Public Event AdmGetFuncCatSearchCompleted As AdmGetFuncCatSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event AdmGetFuncCatCompleted As AdmGetFuncCatCompletedEventHandler
        
        '''<remarks/>
        Public Event DelAdmFuncCatCompleted As DelAdmFuncCatCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveAdmFuncCatCompleted As SaveAdmFuncCatCompletedEventHandler
        
        '''<remarks/>
        Public Event AdmGetAppsGroupCompleted As AdmGetAppsGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event DelAdmAppsGroupCompleted As DelAdmAppsGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveAdmAppsGroupCompleted As SaveAdmAppsGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event AdmGetGroupUserCompleted As AdmGetGroupUserCompletedEventHandler
        
        '''<remarks/>
        Public Event DelAdmGroupUserCompleted As DelAdmGroupUserCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveAdmGroupUserCompleted As SaveAdmGroupUserCompletedEventHandler
        
        '''<remarks/>
        Public Event AdmGetGroupFunctionCompleted As AdmGetGroupFunctionCompletedEventHandler
        
        '''<remarks/>
        Public Event DelAdmGroupFunctionCompleted As DelAdmGroupFunctionCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveAdmGroupFunctionCompleted As SaveAdmGroupFunctionCompletedEventHandler
        
        '''<remarks/>
        Public Event AdmGetUserGroupCompleted As AdmGetUserGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event DelAdmUserGroupCompleted As DelAdmUserGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveAdmUserGroupCompleted As SaveAdmUserGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event AdmGetFunctionGroupCompleted As AdmGetFunctionGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event DelAdmFunctionGroupCompleted As DelAdmFunctionGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event SaveAdmFunctionGroupCompleted As SaveAdmFunctionGroupCompletedEventHandler
        
        '''<remarks/>
        Public Event GetNextBusinessDateCompleted As GetNextBusinessDateCompletedEventHandler
        
        '''<remarks/>
        Public Event GetNextBusinessDate_MCUCompleted As GetNextBusinessDate_MCUCompletedEventHandler
        
        '''<remarks/>
        Public Event CampaignDefaultSearch_DBMotoCompleted As CampaignDefaultSearch_DBMotoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCampaignTypeCodesCompleted As GetCampaignTypeCodesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCampaignSetupActionCodesCompleted As GetCampaignSetupActionCodesCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPlanCodeCompleted As GetPlanCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetDistributeChannelByPlanCompleted As GetDistributeChannelByPlanCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSalesUnitCodeCompleted As GetSalesUnitCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event CheckAgentTypeExistCompleted As CheckAgentTypeExistCompletedEventHandler
        
        '''<remarks/>
        Public Event GetMortalityClassByPlanCompleted As GetMortalityClassByPlanCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSubPlanCodeByPlanCompleted As GetSubPlanCodeByPlanCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRMLifeFundHouseInfoCompleted As GetRMLifeFundHouseInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetRMLifeFundTradeInfoCompleted As GetRMLifeFundTradeInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertCalastoneFundTradeMastCompleted As InsertCalastoneFundTradeMastCompletedEventHandler
        
        '''<remarks/>
        Public Event GetCalastoneSearchCompleted As GetCalastoneSearchCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFMSInfoByFundCodeCompleted As GetFMSInfoByFundCodeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmailAlertCompleted As GetEmailAlertCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmailIdCompleted As GetEmailIdCompletedEventHandler
        
        '''<remarks/>
        Public Event InsertEmailMastCompleted As InsertEmailMastCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFundRiskSetupStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateFundRiskSetupStatus(ByVal request_id As Integer, ByVal from_status As String, ByVal to_status As String, ByVal create_user As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateFundRiskSetupStatus", New Object() {request_id, from_status, to_status, create_user, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateFundRiskSetupStatusAsync(ByVal request_id As Integer, ByVal from_status As String, ByVal to_status As String, ByVal create_user As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateFundRiskSetupStatusAsync(request_id, from_status, to_status, create_user, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateFundRiskSetupStatusAsync(ByVal request_id As Integer, ByVal from_status As String, ByVal to_status As String, ByVal create_user As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateFundRiskSetupStatusOperationCompleted Is Nothing) Then
                Me.UpdateFundRiskSetupStatusOperationCompleted = AddressOf Me.OnUpdateFundRiskSetupStatusOperationCompleted
            End If
            Me.InvokeAsync("UpdateFundRiskSetupStatus", New Object() {request_id, from_status, to_status, create_user, errMsg, stackTrace}, Me.UpdateFundRiskSetupStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateFundRiskSetupStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateFundRiskSetupStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateFundRiskSetupStatusCompleted(Me, New UpdateFundRiskSetupStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddFundRiskSetupMastReqID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddFundRiskSetupMastReqID(ByVal createUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("AddFundRiskSetupMastReqID", New Object() {createUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddFundRiskSetupMastReqIDAsync(ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.AddFundRiskSetupMastReqIDAsync(createUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddFundRiskSetupMastReqIDAsync(ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.AddFundRiskSetupMastReqIDOperationCompleted Is Nothing) Then
                Me.AddFundRiskSetupMastReqIDOperationCompleted = AddressOf Me.OnAddFundRiskSetupMastReqIDOperationCompleted
            End If
            Me.InvokeAsync("AddFundRiskSetupMastReqID", New Object() {createUser, errMsg, stackTrace}, Me.AddFundRiskSetupMastReqIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddFundRiskSetupMastReqIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddFundRiskSetupMastReqIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddFundRiskSetupMastReqIDCompleted(Me, New AddFundRiskSetupMastReqIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertFundRiskDer", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertFundRiskDer(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertFundRiskDer", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertFundRiskDerAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertFundRiskDerAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertFundRiskDerAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertFundRiskDerOperationCompleted Is Nothing) Then
                Me.InsertFundRiskDerOperationCompleted = AddressOf Me.OnInsertFundRiskDerOperationCompleted
            End If
            Me.InvokeAsync("InsertFundRiskDer", New Object() {inTbl, errMsg, stackTrace}, Me.InsertFundRiskDerOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertFundRiskDerOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertFundRiskDerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertFundRiskDerCompleted(Me, New InsertFundRiskDerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFundRiskDer", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteFundRiskDer(ByVal requestId As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteFundRiskDer", New Object() {requestId, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteFundRiskDerAsync(ByVal requestId As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DeleteFundRiskDerAsync(requestId, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFundRiskDerAsync(ByVal requestId As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DeleteFundRiskDerOperationCompleted Is Nothing) Then
                Me.DeleteFundRiskDerOperationCompleted = AddressOf Me.OnDeleteFundRiskDerOperationCompleted
            End If
            Me.InvokeAsync("DeleteFundRiskDer", New Object() {requestId, errMsg, stackTrace}, Me.DeleteFundRiskDerOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteFundRiskDerOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteFundRiskDerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteFundRiskDerCompleted(Me, New DeleteFundRiskDerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FundRisk_RiskDerSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FundRisk_RiskDerSearch(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("FundRisk_RiskDerSearch", New Object() {setupID, requestID, status, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FundRisk_RiskDerSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.FundRisk_RiskDerSearchAsync(setupID, requestID, status, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FundRisk_RiskDerSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.FundRisk_RiskDerSearchOperationCompleted Is Nothing) Then
                Me.FundRisk_RiskDerSearchOperationCompleted = AddressOf Me.OnFundRisk_RiskDerSearchOperationCompleted
            End If
            Me.InvokeAsync("FundRisk_RiskDerSearch", New Object() {setupID, requestID, status, errMsg, stackTrace}, Me.FundRisk_RiskDerSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnFundRisk_RiskDerSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.FundRisk_RiskDerSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FundRisk_RiskDerSearchCompleted(Me, New FundRisk_RiskDerSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateMPFINVFund", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateMPFINVFund(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateMPFINVFund", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateMPFINVFundAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateMPFINVFundAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateMPFINVFundAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateMPFINVFundOperationCompleted Is Nothing) Then
                Me.UpdateMPFINVFundOperationCompleted = AddressOf Me.OnUpdateMPFINVFundOperationCompleted
            End If
            Me.InvokeAsync("UpdateMPFINVFund", New Object() {inTbl, errMsg, stackTrace}, Me.UpdateMPFINVFundOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateMPFINVFundOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateMPFINVFundCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateMPFINVFundCompleted(Me, New UpdateMPFINVFundCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignValidationSetupSubmit_LifeAsia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignValidationSetupSubmit_LifeAsia(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("CampaignValidationSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignValidationSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignValidationSetupSubmit_LifeAsiaAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignValidationSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignValidationSetupSubmit_LifeAsiaOperationCompleted Is Nothing) Then
                Me.CampaignValidationSetupSubmit_LifeAsiaOperationCompleted = AddressOf Me.OnCampaignValidationSetupSubmit_LifeAsiaOperationCompleted
            End If
            Me.InvokeAsync("CampaignValidationSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace}, Me.CampaignValidationSetupSubmit_LifeAsiaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignValidationSetupSubmit_LifeAsiaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignValidationSetupSubmit_LifeAsiaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignValidationSetupSubmit_LifeAsiaCompleted(Me, New CampaignValidationSetupSubmit_LifeAsiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignCampInfoSetupSubmit_LifeAsia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignCampInfoSetupSubmit_LifeAsia(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("CampaignCampInfoSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignCampInfoSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignCampInfoSetupSubmit_LifeAsiaAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignCampInfoSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignCampInfoSetupSubmit_LifeAsiaOperationCompleted Is Nothing) Then
                Me.CampaignCampInfoSetupSubmit_LifeAsiaOperationCompleted = AddressOf Me.OnCampaignCampInfoSetupSubmit_LifeAsiaOperationCompleted
            End If
            Me.InvokeAsync("CampaignCampInfoSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace}, Me.CampaignCampInfoSetupSubmit_LifeAsiaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignCampInfoSetupSubmit_LifeAsiaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignCampInfoSetupSubmit_LifeAsiaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignCampInfoSetupSubmit_LifeAsiaCompleted(Me, New CampaignCampInfoSetupSubmit_LifeAsiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignCampSettingSetupSubmit_LifeAsia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignCampSettingSetupSubmit_LifeAsia(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("CampaignCampSettingSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignCampSettingSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignCampSettingSetupSubmit_LifeAsiaAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignCampSettingSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignCampSettingSetupSubmit_LifeAsiaOperationCompleted Is Nothing) Then
                Me.CampaignCampSettingSetupSubmit_LifeAsiaOperationCompleted = AddressOf Me.OnCampaignCampSettingSetupSubmit_LifeAsiaOperationCompleted
            End If
            Me.InvokeAsync("CampaignCampSettingSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace}, Me.CampaignCampSettingSetupSubmit_LifeAsiaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignCampSettingSetupSubmit_LifeAsiaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignCampSettingSetupSubmit_LifeAsiaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignCampSettingSetupSubmit_LifeAsiaCompleted(Me, New CampaignCampSettingSetupSubmit_LifeAsiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignTierSetupSubmit_LifeAsia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignTierSetupSubmit_LifeAsia(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("CampaignTierSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignTierSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignTierSetupSubmit_LifeAsiaAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignTierSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignTierSetupSubmit_LifeAsiaOperationCompleted Is Nothing) Then
                Me.CampaignTierSetupSubmit_LifeAsiaOperationCompleted = AddressOf Me.OnCampaignTierSetupSubmit_LifeAsiaOperationCompleted
            End If
            Me.InvokeAsync("CampaignTierSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace}, Me.CampaignTierSetupSubmit_LifeAsiaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignTierSetupSubmit_LifeAsiaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignTierSetupSubmit_LifeAsiaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignTierSetupSubmit_LifeAsiaCompleted(Me, New CampaignTierSetupSubmit_LifeAsiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignRemarkSetupSubmit_LifeAsia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignRemarkSetupSubmit_LifeAsia(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("CampaignRemarkSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignRemarkSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignRemarkSetupSubmit_LifeAsiaAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignRemarkSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignRemarkSetupSubmit_LifeAsiaOperationCompleted Is Nothing) Then
                Me.CampaignRemarkSetupSubmit_LifeAsiaOperationCompleted = AddressOf Me.OnCampaignRemarkSetupSubmit_LifeAsiaOperationCompleted
            End If
            Me.InvokeAsync("CampaignRemarkSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace}, Me.CampaignRemarkSetupSubmit_LifeAsiaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignRemarkSetupSubmit_LifeAsiaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignRemarkSetupSubmit_LifeAsiaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignRemarkSetupSubmit_LifeAsiaCompleted(Me, New CampaignRemarkSetupSubmit_LifeAsiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignCampCcSetupSubmit_LifeAsia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignCampCcSetupSubmit_LifeAsia(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("CampaignCampCcSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignCampCcSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignCampCcSetupSubmit_LifeAsiaAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignCampCcSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignCampCcSetupSubmit_LifeAsiaOperationCompleted Is Nothing) Then
                Me.CampaignCampCcSetupSubmit_LifeAsiaOperationCompleted = AddressOf Me.OnCampaignCampCcSetupSubmit_LifeAsiaOperationCompleted
            End If
            Me.InvokeAsync("CampaignCampCcSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace}, Me.CampaignCampCcSetupSubmit_LifeAsiaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignCampCcSetupSubmit_LifeAsiaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignCampCcSetupSubmit_LifeAsiaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignCampCcSetupSubmit_LifeAsiaCompleted(Me, New CampaignCampCcSetupSubmit_LifeAsiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignRemapWordSetupSubmit_LifeAsia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignRemapWordSetupSubmit_LifeAsia(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("CampaignRemapWordSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignRemapWordSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignRemapWordSetupSubmit_LifeAsiaAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignRemapWordSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignRemapWordSetupSubmit_LifeAsiaOperationCompleted Is Nothing) Then
                Me.CampaignRemapWordSetupSubmit_LifeAsiaOperationCompleted = AddressOf Me.OnCampaignRemapWordSetupSubmit_LifeAsiaOperationCompleted
            End If
            Me.InvokeAsync("CampaignRemapWordSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace}, Me.CampaignRemapWordSetupSubmit_LifeAsiaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignRemapWordSetupSubmit_LifeAsiaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignRemapWordSetupSubmit_LifeAsiaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignRemapWordSetupSubmit_LifeAsiaCompleted(Me, New CampaignRemapWordSetupSubmit_LifeAsiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignCcMastSetupSubmit_LifeAsia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignCcMastSetupSubmit_LifeAsia(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("CampaignCcMastSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignCcMastSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignCcMastSetupSubmit_LifeAsiaAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignCcMastSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignCcMastSetupSubmit_LifeAsiaOperationCompleted Is Nothing) Then
                Me.CampaignCcMastSetupSubmit_LifeAsiaOperationCompleted = AddressOf Me.OnCampaignCcMastSetupSubmit_LifeAsiaOperationCompleted
            End If
            Me.InvokeAsync("CampaignCcMastSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace}, Me.CampaignCcMastSetupSubmit_LifeAsiaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignCcMastSetupSubmit_LifeAsiaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignCcMastSetupSubmit_LifeAsiaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignCcMastSetupSubmit_LifeAsiaCompleted(Me, New CampaignCcMastSetupSubmit_LifeAsiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignCheckEndorsement", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignCheckEndorsement(ByVal premDiscCampaignCode As String, ByVal paymentMode As String, ByRef errMsg As String, ByRef stackTrace As String) As String
            Dim results() As Object = Me.Invoke("CampaignCheckEndorsement", New Object() {premDiscCampaignCode, paymentMode, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignCheckEndorsementAsync(ByVal premDiscCampaignCode As String, ByVal paymentMode As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignCheckEndorsementAsync(premDiscCampaignCode, paymentMode, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignCheckEndorsementAsync(ByVal premDiscCampaignCode As String, ByVal paymentMode As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignCheckEndorsementOperationCompleted Is Nothing) Then
                Me.CampaignCheckEndorsementOperationCompleted = AddressOf Me.OnCampaignCheckEndorsementOperationCompleted
            End If
            Me.InvokeAsync("CampaignCheckEndorsement", New Object() {premDiscCampaignCode, paymentMode, errMsg, stackTrace}, Me.CampaignCheckEndorsementOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignCheckEndorsementOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignCheckEndorsementCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignCheckEndorsementCompleted(Me, New CampaignCheckEndorsementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignCommCtrlSetupSubmit_LifeAsia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignCommCtrlSetupSubmit_LifeAsia(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("CampaignCommCtrlSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignCommCtrlSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignCommCtrlSetupSubmit_LifeAsiaAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignCommCtrlSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignCommCtrlSetupSubmit_LifeAsiaOperationCompleted Is Nothing) Then
                Me.CampaignCommCtrlSetupSubmit_LifeAsiaOperationCompleted = AddressOf Me.OnCampaignCommCtrlSetupSubmit_LifeAsiaOperationCompleted
            End If
            Me.InvokeAsync("CampaignCommCtrlSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace}, Me.CampaignCommCtrlSetupSubmit_LifeAsiaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignCommCtrlSetupSubmit_LifeAsiaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignCommCtrlSetupSubmit_LifeAsiaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignCommCtrlSetupSubmit_LifeAsiaCompleted(Me, New CampaignCommCtrlSetupSubmit_LifeAsiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignCommTierSetupSubmit_LifeAsia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignCommTierSetupSubmit_LifeAsia(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("CampaignCommTierSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignCommTierSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignCommTierSetupSubmit_LifeAsiaAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignCommTierSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignCommTierSetupSubmit_LifeAsiaOperationCompleted Is Nothing) Then
                Me.CampaignCommTierSetupSubmit_LifeAsiaOperationCompleted = AddressOf Me.OnCampaignCommTierSetupSubmit_LifeAsiaOperationCompleted
            End If
            Me.InvokeAsync("CampaignCommTierSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace}, Me.CampaignCommTierSetupSubmit_LifeAsiaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignCommTierSetupSubmit_LifeAsiaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignCommTierSetupSubmit_LifeAsiaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignCommTierSetupSubmit_LifeAsiaCompleted(Me, New CampaignCommTierSetupSubmit_LifeAsiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignCommRateSetupSubmit_LifeAsia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignCommRateSetupSubmit_LifeAsia(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("CampaignCommRateSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignCommRateSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignCommRateSetupSubmit_LifeAsiaAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignCommRateSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignCommRateSetupSubmit_LifeAsiaOperationCompleted Is Nothing) Then
                Me.CampaignCommRateSetupSubmit_LifeAsiaOperationCompleted = AddressOf Me.OnCampaignCommRateSetupSubmit_LifeAsiaOperationCompleted
            End If
            Me.InvokeAsync("CampaignCommRateSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace}, Me.CampaignCommRateSetupSubmit_LifeAsiaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignCommRateSetupSubmit_LifeAsiaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignCommRateSetupSubmit_LifeAsiaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignCommRateSetupSubmit_LifeAsiaCompleted(Me, New CampaignCommRateSetupSubmit_LifeAsiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getePAMReconCodeTable", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getePAMReconCodeTable(ByVal ciwDBName As String, ByVal Type As String, ByVal Code As String, ByVal rtnCol() As String, ByRef rtnVal() As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("getePAMReconCodeTable", New Object() {ciwDBName, Type, Code, rtnCol, rtnVal, errMsg, stackTrace})
            rtnVal = CType(results(1),String())
            errMsg = CType(results(2),String)
            stackTrace = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getePAMReconCodeTableAsync(ByVal ciwDBName As String, ByVal Type As String, ByVal Code As String, ByVal rtnCol() As String, ByVal rtnVal() As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.getePAMReconCodeTableAsync(ciwDBName, Type, Code, rtnCol, rtnVal, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getePAMReconCodeTableAsync(ByVal ciwDBName As String, ByVal Type As String, ByVal Code As String, ByVal rtnCol() As String, ByVal rtnVal() As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.getePAMReconCodeTableOperationCompleted Is Nothing) Then
                Me.getePAMReconCodeTableOperationCompleted = AddressOf Me.OngetePAMReconCodeTableOperationCompleted
            End If
            Me.InvokeAsync("getePAMReconCodeTable", New Object() {ciwDBName, Type, Code, rtnCol, rtnVal, errMsg, stackTrace}, Me.getePAMReconCodeTableOperationCompleted, userState)
        End Sub
        
        Private Sub OngetePAMReconCodeTableOperationCompleted(ByVal arg As Object)
            If (Not (Me.getePAMReconCodeTableCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getePAMReconCodeTableCompleted(Me, New getePAMReconCodeTableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getLastBusinessDate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getLastBusinessDate(ByVal ciwDBName As String, ByVal date_yyyymmdd As String, ByRef errMsg As String, ByRef stackTrace As String) As String
            Dim results() As Object = Me.Invoke("getLastBusinessDate", New Object() {ciwDBName, date_yyyymmdd, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getLastBusinessDateAsync(ByVal ciwDBName As String, ByVal date_yyyymmdd As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.getLastBusinessDateAsync(ciwDBName, date_yyyymmdd, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getLastBusinessDateAsync(ByVal ciwDBName As String, ByVal date_yyyymmdd As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.getLastBusinessDateOperationCompleted Is Nothing) Then
                Me.getLastBusinessDateOperationCompleted = AddressOf Me.OngetLastBusinessDateOperationCompleted
            End If
            Me.InvokeAsync("getLastBusinessDate", New Object() {ciwDBName, date_yyyymmdd, errMsg, stackTrace}, Me.getLastBusinessDateOperationCompleted, userState)
        End Sub
        
        Private Sub OngetLastBusinessDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.getLastBusinessDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getLastBusinessDateCompleted(Me, New getLastBusinessDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/writeReconReportLog", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function writeReconReportLog(ByVal ciwDBName As String, ByVal rptDate As Date, ByVal rptName As String, ByVal Completed As String, ByVal UserID As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("writeReconReportLog", New Object() {ciwDBName, rptDate, rptName, Completed, UserID, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub writeReconReportLogAsync(ByVal ciwDBName As String, ByVal rptDate As Date, ByVal rptName As String, ByVal Completed As String, ByVal UserID As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.writeReconReportLogAsync(ciwDBName, rptDate, rptName, Completed, UserID, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub writeReconReportLogAsync(ByVal ciwDBName As String, ByVal rptDate As Date, ByVal rptName As String, ByVal Completed As String, ByVal UserID As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.writeReconReportLogOperationCompleted Is Nothing) Then
                Me.writeReconReportLogOperationCompleted = AddressOf Me.OnwriteReconReportLogOperationCompleted
            End If
            Me.InvokeAsync("writeReconReportLog", New Object() {ciwDBName, rptDate, rptName, Completed, UserID, errMsg, stackTrace}, Me.writeReconReportLogOperationCompleted, userState)
        End Sub
        
        Private Sub OnwriteReconReportLogOperationCompleted(ByVal arg As Object)
            If (Not (Me.writeReconReportLogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent writeReconReportLogCompleted(Me, New writeReconReportLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/writeAppEventLog", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function writeAppEventLog(ByVal ciwDBName As String, ByVal logType As String, ByVal userId As String, ByVal machine As String, ByVal msg As String, ByVal stack As String, ByVal reference As String, ByVal infoValue As String, ByVal sys As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("writeAppEventLog", New Object() {ciwDBName, logType, userId, machine, msg, stack, reference, infoValue, sys, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub writeAppEventLogAsync(ByVal ciwDBName As String, ByVal logType As String, ByVal userId As String, ByVal machine As String, ByVal msg As String, ByVal stack As String, ByVal reference As String, ByVal infoValue As String, ByVal sys As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.writeAppEventLogAsync(ciwDBName, logType, userId, machine, msg, stack, reference, infoValue, sys, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub writeAppEventLogAsync(ByVal ciwDBName As String, ByVal logType As String, ByVal userId As String, ByVal machine As String, ByVal msg As String, ByVal stack As String, ByVal reference As String, ByVal infoValue As String, ByVal sys As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.writeAppEventLogOperationCompleted Is Nothing) Then
                Me.writeAppEventLogOperationCompleted = AddressOf Me.OnwriteAppEventLogOperationCompleted
            End If
            Me.InvokeAsync("writeAppEventLog", New Object() {ciwDBName, logType, userId, machine, msg, stack, reference, infoValue, sys, errMsg, stackTrace}, Me.writeAppEventLogOperationCompleted, userState)
        End Sub
        
        Private Sub OnwriteAppEventLogOperationCompleted(ByVal arg As Object)
            If (Not (Me.writeAppEventLogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent writeAppEventLogCompleted(Me, New writeAppEventLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/upload2SQLbyBulkCopy", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function upload2SQLbyBulkCopy(ByVal tblName As String, ByVal dt As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("upload2SQLbyBulkCopy", New Object() {tblName, dt, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub upload2SQLbyBulkCopyAsync(ByVal tblName As String, ByVal dt As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.upload2SQLbyBulkCopyAsync(tblName, dt, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub upload2SQLbyBulkCopyAsync(ByVal tblName As String, ByVal dt As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.upload2SQLbyBulkCopyOperationCompleted Is Nothing) Then
                Me.upload2SQLbyBulkCopyOperationCompleted = AddressOf Me.Onupload2SQLbyBulkCopyOperationCompleted
            End If
            Me.InvokeAsync("upload2SQLbyBulkCopy", New Object() {tblName, dt, errMsg, stackTrace}, Me.upload2SQLbyBulkCopyOperationCompleted, userState)
        End Sub
        
        Private Sub Onupload2SQLbyBulkCopyOperationCompleted(ByVal arg As Object)
            If (Not (Me.upload2SQLbyBulkCopyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent upload2SQLbyBulkCopyCompleted(Me, New upload2SQLbyBulkCopyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/removeData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function removeData(ByVal dbName As String, ByVal tblName As String, ByVal truncateTbl As Boolean, ByVal criteria As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("removeData", New Object() {dbName, tblName, truncateTbl, criteria, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub removeDataAsync(ByVal dbName As String, ByVal tblName As String, ByVal truncateTbl As Boolean, ByVal criteria As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.removeDataAsync(dbName, tblName, truncateTbl, criteria, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub removeDataAsync(ByVal dbName As String, ByVal tblName As String, ByVal truncateTbl As Boolean, ByVal criteria As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.removeDataOperationCompleted Is Nothing) Then
                Me.removeDataOperationCompleted = AddressOf Me.OnremoveDataOperationCompleted
            End If
            Me.InvokeAsync("removeData", New Object() {dbName, tblName, truncateTbl, criteria, errMsg, stackTrace}, Me.removeDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnremoveDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.removeDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent removeDataCompleted(Me, New removeDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAS400UnitBalUTRSData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAS400UnitBalUTRSData(ByVal projectAlias As String, ByVal userType As String, ByVal connAlias As String, ByVal hostLib As String, ByRef dtRtn As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("getAS400UnitBalUTRSData", New Object() {projectAlias, userType, connAlias, hostLib, dtRtn, errMsg, stackTrace})
            dtRtn = CType(results(1),System.Data.DataTable)
            errMsg = CType(results(2),String)
            stackTrace = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAS400UnitBalUTRSDataAsync(ByVal projectAlias As String, ByVal userType As String, ByVal connAlias As String, ByVal hostLib As String, ByVal dtRtn As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.getAS400UnitBalUTRSDataAsync(projectAlias, userType, connAlias, hostLib, dtRtn, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAS400UnitBalUTRSDataAsync(ByVal projectAlias As String, ByVal userType As String, ByVal connAlias As String, ByVal hostLib As String, ByVal dtRtn As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.getAS400UnitBalUTRSDataOperationCompleted Is Nothing) Then
                Me.getAS400UnitBalUTRSDataOperationCompleted = AddressOf Me.OngetAS400UnitBalUTRSDataOperationCompleted
            End If
            Me.InvokeAsync("getAS400UnitBalUTRSData", New Object() {projectAlias, userType, connAlias, hostLib, dtRtn, errMsg, stackTrace}, Me.getAS400UnitBalUTRSDataOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAS400UnitBalUTRSDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAS400UnitBalUTRSDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAS400UnitBalUTRSDataCompleted(Me, New getAS400UnitBalUTRSDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAS400UTRNData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAS400UTRNData(ByVal projectAlias As String, ByVal userType As String, ByVal connAlias As String, ByVal hostLib As String, ByVal dateLastClose As Date, ByVal dateNewClose As Date, ByRef dtRtn As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("getAS400UTRNData", New Object() {projectAlias, userType, connAlias, hostLib, dateLastClose, dateNewClose, dtRtn, errMsg, stackTrace})
            dtRtn = CType(results(1),System.Data.DataTable)
            errMsg = CType(results(2),String)
            stackTrace = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAS400UTRNDataAsync(ByVal projectAlias As String, ByVal userType As String, ByVal connAlias As String, ByVal hostLib As String, ByVal dateLastClose As Date, ByVal dateNewClose As Date, ByVal dtRtn As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.getAS400UTRNDataAsync(projectAlias, userType, connAlias, hostLib, dateLastClose, dateNewClose, dtRtn, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAS400UTRNDataAsync(ByVal projectAlias As String, ByVal userType As String, ByVal connAlias As String, ByVal hostLib As String, ByVal dateLastClose As Date, ByVal dateNewClose As Date, ByVal dtRtn As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.getAS400UTRNDataOperationCompleted Is Nothing) Then
                Me.getAS400UTRNDataOperationCompleted = AddressOf Me.OngetAS400UTRNDataOperationCompleted
            End If
            Me.InvokeAsync("getAS400UTRNData", New Object() {projectAlias, userType, connAlias, hostLib, dateLastClose, dateNewClose, dtRtn, errMsg, stackTrace}, Me.getAS400UTRNDataOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAS400UTRNDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAS400UTRNDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAS400UTRNDataCompleted(Me, New getAS400UTRNDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getUnitBalRptData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getUnitBalRptData(ByVal ciwDBName As String, ByVal companyID As String, ByVal inForce As String, ByRef dtRtn As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("getUnitBalRptData", New Object() {ciwDBName, companyID, inForce, dtRtn, errMsg, stackTrace})
            dtRtn = CType(results(1),System.Data.DataTable)
            errMsg = CType(results(2),String)
            stackTrace = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getUnitBalRptDataAsync(ByVal ciwDBName As String, ByVal companyID As String, ByVal inForce As String, ByVal dtRtn As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.getUnitBalRptDataAsync(ciwDBName, companyID, inForce, dtRtn, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getUnitBalRptDataAsync(ByVal ciwDBName As String, ByVal companyID As String, ByVal inForce As String, ByVal dtRtn As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.getUnitBalRptDataOperationCompleted Is Nothing) Then
                Me.getUnitBalRptDataOperationCompleted = AddressOf Me.OngetUnitBalRptDataOperationCompleted
            End If
            Me.InvokeAsync("getUnitBalRptData", New Object() {ciwDBName, companyID, inForce, dtRtn, errMsg, stackTrace}, Me.getUnitBalRptDataOperationCompleted, userState)
        End Sub
        
        Private Sub OngetUnitBalRptDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.getUnitBalRptDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getUnitBalRptDataCompleted(Me, New getUnitBalRptDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getConnectionString", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getConnectionString(ByRef connstr As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("getConnectionString", New Object() {connstr, errMsg, stackTrace})
            connstr = CType(results(1),String)
            errMsg = CType(results(2),String)
            stackTrace = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getConnectionStringAsync(ByVal connstr As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.getConnectionStringAsync(connstr, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getConnectionStringAsync(ByVal connstr As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.getConnectionStringOperationCompleted Is Nothing) Then
                Me.getConnectionStringOperationCompleted = AddressOf Me.OngetConnectionStringOperationCompleted
            End If
            Me.InvokeAsync("getConnectionString", New Object() {connstr, errMsg, stackTrace}, Me.getConnectionStringOperationCompleted, userState)
        End Sub
        
        Private Sub OngetConnectionStringOperationCompleted(ByVal arg As Object)
            If (Not (Me.getConnectionStringCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getConnectionStringCompleted(Me, New getConnectionStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAS400ConnectionString", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAS400ConnectionString(ByVal projectAlias As String, ByVal userType As String, ByVal connAlias As String, ByVal hostLib As String, ByRef connStr As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("getAS400ConnectionString", New Object() {projectAlias, userType, connAlias, hostLib, connStr, errMsg, stackTrace})
            connStr = CType(results(1),String)
            errMsg = CType(results(2),String)
            stackTrace = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAS400ConnectionStringAsync(ByVal projectAlias As String, ByVal userType As String, ByVal connAlias As String, ByVal hostLib As String, ByVal connStr As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.getAS400ConnectionStringAsync(projectAlias, userType, connAlias, hostLib, connStr, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAS400ConnectionStringAsync(ByVal projectAlias As String, ByVal userType As String, ByVal connAlias As String, ByVal hostLib As String, ByVal connStr As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.getAS400ConnectionStringOperationCompleted Is Nothing) Then
                Me.getAS400ConnectionStringOperationCompleted = AddressOf Me.OngetAS400ConnectionStringOperationCompleted
            End If
            Me.InvokeAsync("getAS400ConnectionString", New Object() {projectAlias, userType, connAlias, hostLib, connStr, errMsg, stackTrace}, Me.getAS400ConnectionStringOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAS400ConnectionStringOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAS400ConnectionStringCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAS400ConnectionStringCompleted(Me, New getAS400ConnectionStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isWorkingDay", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function isWorkingDay(ByVal ciwDBName As String, ByVal date_yyyymmdd As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("isWorkingDay", New Object() {ciwDBName, date_yyyymmdd, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub isWorkingDayAsync(ByVal ciwDBName As String, ByVal date_yyyymmdd As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.isWorkingDayAsync(ciwDBName, date_yyyymmdd, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub isWorkingDayAsync(ByVal ciwDBName As String, ByVal date_yyyymmdd As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.isWorkingDayOperationCompleted Is Nothing) Then
                Me.isWorkingDayOperationCompleted = AddressOf Me.OnisWorkingDayOperationCompleted
            End If
            Me.InvokeAsync("isWorkingDay", New Object() {ciwDBName, date_yyyymmdd, errMsg, stackTrace}, Me.isWorkingDayOperationCompleted, userState)
        End Sub
        
        Private Sub OnisWorkingDayOperationCompleted(ByVal arg As Object)
            If (Not (Me.isWorkingDayCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent isWorkingDayCompleted(Me, New isWorkingDayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getPolicyStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getPolicyStatus(ByVal ciwDBName As String, ByRef dtRtn As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("getPolicyStatus", New Object() {ciwDBName, dtRtn, errMsg, stackTrace})
            dtRtn = CType(results(1),System.Data.DataTable)
            errMsg = CType(results(2),String)
            stackTrace = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getPolicyStatusAsync(ByVal ciwDBName As String, ByVal dtRtn As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.getPolicyStatusAsync(ciwDBName, dtRtn, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getPolicyStatusAsync(ByVal ciwDBName As String, ByVal dtRtn As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.getPolicyStatusOperationCompleted Is Nothing) Then
                Me.getPolicyStatusOperationCompleted = AddressOf Me.OngetPolicyStatusOperationCompleted
            End If
            Me.InvokeAsync("getPolicyStatus", New Object() {ciwDBName, dtRtn, errMsg, stackTrace}, Me.getPolicyStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OngetPolicyStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.getPolicyStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getPolicyStatusCompleted(Me, New getPolicyStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAS400FundMovmentUTRNRvsTxnList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getAS400FundMovmentUTRNRvsTxnList(ByVal projectAlias As String, ByVal userType As String, ByVal connAlias As String, ByVal hostLib As String, ByVal dateFrom As Date, ByVal dateTo As Date, ByRef dtRtn As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("getAS400FundMovmentUTRNRvsTxnList", New Object() {projectAlias, userType, connAlias, hostLib, dateFrom, dateTo, dtRtn, errMsg, stackTrace})
            dtRtn = CType(results(1),System.Data.DataTable)
            errMsg = CType(results(2),String)
            stackTrace = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getAS400FundMovmentUTRNRvsTxnListAsync(ByVal projectAlias As String, ByVal userType As String, ByVal connAlias As String, ByVal hostLib As String, ByVal dateFrom As Date, ByVal dateTo As Date, ByVal dtRtn As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.getAS400FundMovmentUTRNRvsTxnListAsync(projectAlias, userType, connAlias, hostLib, dateFrom, dateTo, dtRtn, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getAS400FundMovmentUTRNRvsTxnListAsync(ByVal projectAlias As String, ByVal userType As String, ByVal connAlias As String, ByVal hostLib As String, ByVal dateFrom As Date, ByVal dateTo As Date, ByVal dtRtn As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.getAS400FundMovmentUTRNRvsTxnListOperationCompleted Is Nothing) Then
                Me.getAS400FundMovmentUTRNRvsTxnListOperationCompleted = AddressOf Me.OngetAS400FundMovmentUTRNRvsTxnListOperationCompleted
            End If
            Me.InvokeAsync("getAS400FundMovmentUTRNRvsTxnList", New Object() {projectAlias, userType, connAlias, hostLib, dateFrom, dateTo, dtRtn, errMsg, stackTrace}, Me.getAS400FundMovmentUTRNRvsTxnListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetAS400FundMovmentUTRNRvsTxnListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getAS400FundMovmentUTRNRvsTxnListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getAS400FundMovmentUTRNRvsTxnListCompleted(Me, New getAS400FundMovmentUTRNRvsTxnListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFundMovementRptTxnList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getFundMovementRptTxnList(ByVal sRvsTxnCriteria As String, ByRef dtRtn As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("getFundMovementRptTxnList", New Object() {sRvsTxnCriteria, dtRtn, errMsg, stackTrace})
            dtRtn = CType(results(1),System.Data.DataTable)
            errMsg = CType(results(2),String)
            stackTrace = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getFundMovementRptTxnListAsync(ByVal sRvsTxnCriteria As String, ByVal dtRtn As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.getFundMovementRptTxnListAsync(sRvsTxnCriteria, dtRtn, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getFundMovementRptTxnListAsync(ByVal sRvsTxnCriteria As String, ByVal dtRtn As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.getFundMovementRptTxnListOperationCompleted Is Nothing) Then
                Me.getFundMovementRptTxnListOperationCompleted = AddressOf Me.OngetFundMovementRptTxnListOperationCompleted
            End If
            Me.InvokeAsync("getFundMovementRptTxnList", New Object() {sRvsTxnCriteria, dtRtn, errMsg, stackTrace}, Me.getFundMovementRptTxnListOperationCompleted, userState)
        End Sub
        
        Private Sub OngetFundMovementRptTxnListOperationCompleted(ByVal arg As Object)
            If (Not (Me.getFundMovementRptTxnListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getFundMovementRptTxnListCompleted(Me, New getFundMovementRptTxnListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteAS400DownloadFile", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function deleteAS400DownloadFile(ByVal AS400LocalFName As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("deleteAS400DownloadFile", New Object() {AS400LocalFName, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub deleteAS400DownloadFileAsync(ByVal AS400LocalFName As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.deleteAS400DownloadFileAsync(AS400LocalFName, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub deleteAS400DownloadFileAsync(ByVal AS400LocalFName As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.deleteAS400DownloadFileOperationCompleted Is Nothing) Then
                Me.deleteAS400DownloadFileOperationCompleted = AddressOf Me.OndeleteAS400DownloadFileOperationCompleted
            End If
            Me.InvokeAsync("deleteAS400DownloadFile", New Object() {AS400LocalFName, errMsg, stackTrace}, Me.deleteAS400DownloadFileOperationCompleted, userState)
        End Sub
        
        Private Sub OndeleteAS400DownloadFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.deleteAS400DownloadFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent deleteAS400DownloadFileCompleted(Me, New deleteAS400DownloadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CopyGeneralLedgerByAccountCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CopyGeneralLedgerByAccountCode(ByVal ciwDBName As String, ByVal acctCodes() As String, ByVal businessDate As String, ByRef row As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("CopyGeneralLedgerByAccountCode", New Object() {ciwDBName, acctCodes, businessDate, row, errMsg, stackTrace})
            row = CType(results(1),Integer)
            errMsg = CType(results(2),String)
            stackTrace = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CopyGeneralLedgerByAccountCodeAsync(ByVal ciwDBName As String, ByVal acctCodes() As String, ByVal businessDate As String, ByVal row As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CopyGeneralLedgerByAccountCodeAsync(ciwDBName, acctCodes, businessDate, row, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CopyGeneralLedgerByAccountCodeAsync(ByVal ciwDBName As String, ByVal acctCodes() As String, ByVal businessDate As String, ByVal row As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CopyGeneralLedgerByAccountCodeOperationCompleted Is Nothing) Then
                Me.CopyGeneralLedgerByAccountCodeOperationCompleted = AddressOf Me.OnCopyGeneralLedgerByAccountCodeOperationCompleted
            End If
            Me.InvokeAsync("CopyGeneralLedgerByAccountCode", New Object() {ciwDBName, acctCodes, businessDate, row, errMsg, stackTrace}, Me.CopyGeneralLedgerByAccountCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnCopyGeneralLedgerByAccountCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.CopyGeneralLedgerByAccountCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CopyGeneralLedgerByAccountCodeCompleted(Me, New CopyGeneralLedgerByAccountCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGeneralLedgerReportByYearAndMonth", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetGeneralLedgerReportByYearAndMonth(ByVal ciwDBName As String, ByVal camDBName As String, ByVal reportYear As Integer, ByVal reportMonth As Integer, ByVal channelCodes() As String, ByRef dtRtn As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("GetGeneralLedgerReportByYearAndMonth", New Object() {ciwDBName, camDBName, reportYear, reportMonth, channelCodes, dtRtn, errMsg, stackTrace})
            dtRtn = CType(results(1),System.Data.DataTable)
            errMsg = CType(results(2),String)
            stackTrace = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetGeneralLedgerReportByYearAndMonthAsync(ByVal ciwDBName As String, ByVal camDBName As String, ByVal reportYear As Integer, ByVal reportMonth As Integer, ByVal channelCodes() As String, ByVal dtRtn As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetGeneralLedgerReportByYearAndMonthAsync(ciwDBName, camDBName, reportYear, reportMonth, channelCodes, dtRtn, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetGeneralLedgerReportByYearAndMonthAsync(ByVal ciwDBName As String, ByVal camDBName As String, ByVal reportYear As Integer, ByVal reportMonth As Integer, ByVal channelCodes() As String, ByVal dtRtn As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetGeneralLedgerReportByYearAndMonthOperationCompleted Is Nothing) Then
                Me.GetGeneralLedgerReportByYearAndMonthOperationCompleted = AddressOf Me.OnGetGeneralLedgerReportByYearAndMonthOperationCompleted
            End If
            Me.InvokeAsync("GetGeneralLedgerReportByYearAndMonth", New Object() {ciwDBName, camDBName, reportYear, reportMonth, channelCodes, dtRtn, errMsg, stackTrace}, Me.GetGeneralLedgerReportByYearAndMonthOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetGeneralLedgerReportByYearAndMonthOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetGeneralLedgerReportByYearAndMonthCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetGeneralLedgerReportByYearAndMonthCompleted(Me, New GetGeneralLedgerReportByYearAndMonthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WriteCCMEventLog", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WriteCCMEventLog(ByVal logType As String, ByVal userId As String, ByVal machine As String, ByVal msg As String, ByVal stack As String, ByVal reference As String, ByVal infoValue As String, ByVal sys As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("WriteCCMEventLog", New Object() {logType, userId, machine, msg, stack, reference, infoValue, sys, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WriteCCMEventLogAsync(ByVal logType As String, ByVal userId As String, ByVal machine As String, ByVal msg As String, ByVal stack As String, ByVal reference As String, ByVal infoValue As String, ByVal sys As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.WriteCCMEventLogAsync(logType, userId, machine, msg, stack, reference, infoValue, sys, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WriteCCMEventLogAsync(ByVal logType As String, ByVal userId As String, ByVal machine As String, ByVal msg As String, ByVal stack As String, ByVal reference As String, ByVal infoValue As String, ByVal sys As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.WriteCCMEventLogOperationCompleted Is Nothing) Then
                Me.WriteCCMEventLogOperationCompleted = AddressOf Me.OnWriteCCMEventLogOperationCompleted
            End If
            Me.InvokeAsync("WriteCCMEventLog", New Object() {logType, userId, machine, msg, stack, reference, infoValue, sys, errMsg, stackTrace}, Me.WriteCCMEventLogOperationCompleted, userState)
        End Sub
        
        Private Sub OnWriteCCMEventLogOperationCompleted(ByVal arg As Object)
            If (Not (Me.WriteCCMEventLogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WriteCCMEventLogCompleted(Me, New WriteCCMEventLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WriteCCMExportFileLog", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function WriteCCMExportFileLog(ByVal func As String, ByVal destination As String, ByVal filename As String, ByVal export_date As Date, ByVal sys As String, ByVal machine As String, ByVal userId As String, ByVal remarks As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("WriteCCMExportFileLog", New Object() {func, destination, filename, export_date, sys, machine, userId, remarks, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub WriteCCMExportFileLogAsync(ByVal func As String, ByVal destination As String, ByVal filename As String, ByVal export_date As Date, ByVal sys As String, ByVal machine As String, ByVal userId As String, ByVal remarks As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.WriteCCMExportFileLogAsync(func, destination, filename, export_date, sys, machine, userId, remarks, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub WriteCCMExportFileLogAsync(ByVal func As String, ByVal destination As String, ByVal filename As String, ByVal export_date As Date, ByVal sys As String, ByVal machine As String, ByVal userId As String, ByVal remarks As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.WriteCCMExportFileLogOperationCompleted Is Nothing) Then
                Me.WriteCCMExportFileLogOperationCompleted = AddressOf Me.OnWriteCCMExportFileLogOperationCompleted
            End If
            Me.InvokeAsync("WriteCCMExportFileLog", New Object() {func, destination, filename, export_date, sys, machine, userId, remarks, errMsg, stackTrace}, Me.WriteCCMExportFileLogOperationCompleted, userState)
        End Sub
        
        Private Sub OnWriteCCMExportFileLogOperationCompleted(ByVal arg As Object)
            If (Not (Me.WriteCCMExportFileLogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent WriteCCMExportFileLogCompleted(Me, New WriteCCMExportFileLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetExportFileHistory", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetExportFileHistory(ByVal func As String, ByVal report_year As Integer, ByVal report_month As Integer, ByRef dtRtn As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("GetExportFileHistory", New Object() {func, report_year, report_month, dtRtn, errMsg, stackTrace})
            dtRtn = CType(results(1),System.Data.DataTable)
            errMsg = CType(results(2),String)
            stackTrace = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetExportFileHistoryAsync(ByVal func As String, ByVal report_year As Integer, ByVal report_month As Integer, ByVal dtRtn As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetExportFileHistoryAsync(func, report_year, report_month, dtRtn, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetExportFileHistoryAsync(ByVal func As String, ByVal report_year As Integer, ByVal report_month As Integer, ByVal dtRtn As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetExportFileHistoryOperationCompleted Is Nothing) Then
                Me.GetExportFileHistoryOperationCompleted = AddressOf Me.OnGetExportFileHistoryOperationCompleted
            End If
            Me.InvokeAsync("GetExportFileHistory", New Object() {func, report_year, report_month, dtRtn, errMsg, stackTrace}, Me.GetExportFileHistoryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetExportFileHistoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetExportFileHistoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetExportFileHistoryCompleted(Me, New GetExportFileHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBOCOMPolicyNoListByDateRange", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBOCOMPolicyNoListByDateRange(ByVal startDate As Date, ByVal endDate As Date, ByVal ciwDb As String, ByRef errMsg As String, ByRef stackTrace As String) As String()
            Dim results() As Object = Me.Invoke("GetBOCOMPolicyNoListByDateRange", New Object() {startDate, endDate, ciwDb, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),String())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBOCOMPolicyNoListByDateRangeAsync(ByVal startDate As Date, ByVal endDate As Date, ByVal ciwDb As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetBOCOMPolicyNoListByDateRangeAsync(startDate, endDate, ciwDb, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBOCOMPolicyNoListByDateRangeAsync(ByVal startDate As Date, ByVal endDate As Date, ByVal ciwDb As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetBOCOMPolicyNoListByDateRangeOperationCompleted Is Nothing) Then
                Me.GetBOCOMPolicyNoListByDateRangeOperationCompleted = AddressOf Me.OnGetBOCOMPolicyNoListByDateRangeOperationCompleted
            End If
            Me.InvokeAsync("GetBOCOMPolicyNoListByDateRange", New Object() {startDate, endDate, ciwDb, errMsg, stackTrace}, Me.GetBOCOMPolicyNoListByDateRangeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBOCOMPolicyNoListByDateRangeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBOCOMPolicyNoListByDateRangeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBOCOMPolicyNoListByDateRangeCompleted(Me, New GetBOCOMPolicyNoListByDateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPolicyAddress", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPolicyAddress(ByVal polNo As String, ByVal rel As String, ByVal ciwDb As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetPolicyAddress", New Object() {polNo, rel, ciwDb, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPolicyAddressAsync(ByVal polNo As String, ByVal rel As String, ByVal ciwDb As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetPolicyAddressAsync(polNo, rel, ciwDb, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPolicyAddressAsync(ByVal polNo As String, ByVal rel As String, ByVal ciwDb As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetPolicyAddressOperationCompleted Is Nothing) Then
                Me.GetPolicyAddressOperationCompleted = AddressOf Me.OnGetPolicyAddressOperationCompleted
            End If
            Me.InvokeAsync("GetPolicyAddress", New Object() {polNo, rel, ciwDb, errMsg, stackTrace}, Me.GetPolicyAddressOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPolicyAddressOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPolicyAddressCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPolicyAddressCompleted(Me, New GetPolicyAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PrintSTPRequestByLetterRequestID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PrintSTPRequestByLetterRequestID(ByVal ltrRequestId As String, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("PrintSTPRequestByLetterRequestID", New Object() {ltrRequestId, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PrintSTPRequestByLetterRequestIDAsync(ByVal ltrRequestId As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.PrintSTPRequestByLetterRequestIDAsync(ltrRequestId, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PrintSTPRequestByLetterRequestIDAsync(ByVal ltrRequestId As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.PrintSTPRequestByLetterRequestIDOperationCompleted Is Nothing) Then
                Me.PrintSTPRequestByLetterRequestIDOperationCompleted = AddressOf Me.OnPrintSTPRequestByLetterRequestIDOperationCompleted
            End If
            Me.InvokeAsync("PrintSTPRequestByLetterRequestID", New Object() {ltrRequestId, errMsg, stackTrace}, Me.PrintSTPRequestByLetterRequestIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnPrintSTPRequestByLetterRequestIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.PrintSTPRequestByLetterRequestIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PrintSTPRequestByLetterRequestIDCompleted(Me, New PrintSTPRequestByLetterRequestIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLetterCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLetterCode(ByVal ltrDept As String, ByVal ltrCode As String, ByVal progKey As String, ByVal printfileCode As String, ByVal ltrVer As String, ByVal as400FileType As String, ByVal as400File As String, ByVal as400LtrType As String, ByVal countryCode As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetLetterCode", New Object() {ltrDept, ltrCode, progKey, printfileCode, ltrVer, as400FileType, as400File, as400LtrType, countryCode, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLetterCodeAsync(ByVal ltrDept As String, ByVal ltrCode As String, ByVal progKey As String, ByVal printfileCode As String, ByVal ltrVer As String, ByVal as400FileType As String, ByVal as400File As String, ByVal as400LtrType As String, ByVal countryCode As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetLetterCodeAsync(ltrDept, ltrCode, progKey, printfileCode, ltrVer, as400FileType, as400File, as400LtrType, countryCode, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLetterCodeAsync(ByVal ltrDept As String, ByVal ltrCode As String, ByVal progKey As String, ByVal printfileCode As String, ByVal ltrVer As String, ByVal as400FileType As String, ByVal as400File As String, ByVal as400LtrType As String, ByVal countryCode As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetLetterCodeOperationCompleted Is Nothing) Then
                Me.GetLetterCodeOperationCompleted = AddressOf Me.OnGetLetterCodeOperationCompleted
            End If
            Me.InvokeAsync("GetLetterCode", New Object() {ltrDept, ltrCode, progKey, printfileCode, ltrVer, as400FileType, as400File, as400LtrType, countryCode, errMsg, stackTrace}, Me.GetLetterCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLetterCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLetterCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLetterCodeCompleted(Me, New GetLetterCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLetterCodeWithSubType", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLetterCodeWithSubType(ByVal ltrDept As String, ByVal ltrCode As String, ByVal progKey As String, ByVal printfileCode As String, ByVal ltrVer As String, ByVal as400FileType As String, ByVal as400File As String, ByVal as400LtrType As String, ByVal countryCode As String, ByVal as400SubLtrType As String, ByVal as400LetterDoc As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetLetterCodeWithSubType", New Object() {ltrDept, ltrCode, progKey, printfileCode, ltrVer, as400FileType, as400File, as400LtrType, countryCode, as400SubLtrType, as400LetterDoc, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLetterCodeWithSubTypeAsync(ByVal ltrDept As String, ByVal ltrCode As String, ByVal progKey As String, ByVal printfileCode As String, ByVal ltrVer As String, ByVal as400FileType As String, ByVal as400File As String, ByVal as400LtrType As String, ByVal countryCode As String, ByVal as400SubLtrType As String, ByVal as400LetterDoc As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetLetterCodeWithSubTypeAsync(ltrDept, ltrCode, progKey, printfileCode, ltrVer, as400FileType, as400File, as400LtrType, countryCode, as400SubLtrType, as400LetterDoc, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLetterCodeWithSubTypeAsync(ByVal ltrDept As String, ByVal ltrCode As String, ByVal progKey As String, ByVal printfileCode As String, ByVal ltrVer As String, ByVal as400FileType As String, ByVal as400File As String, ByVal as400LtrType As String, ByVal countryCode As String, ByVal as400SubLtrType As String, ByVal as400LetterDoc As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetLetterCodeWithSubTypeOperationCompleted Is Nothing) Then
                Me.GetLetterCodeWithSubTypeOperationCompleted = AddressOf Me.OnGetLetterCodeWithSubTypeOperationCompleted
            End If
            Me.InvokeAsync("GetLetterCodeWithSubType", New Object() {ltrDept, ltrCode, progKey, printfileCode, ltrVer, as400FileType, as400File, as400LtrType, countryCode, as400SubLtrType, as400LetterDoc, errMsg, stackTrace}, Me.GetLetterCodeWithSubTypeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLetterCodeWithSubTypeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLetterCodeWithSubTypeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLetterCodeWithSubTypeCompleted(Me, New GetLetterCodeWithSubTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrintFileToppan", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPrintFileToppan(ByVal printfileCode As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetPrintFileToppan", New Object() {printfileCode, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPrintFileToppanAsync(ByVal printfileCode As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetPrintFileToppanAsync(printfileCode, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPrintFileToppanAsync(ByVal printfileCode As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetPrintFileToppanOperationCompleted Is Nothing) Then
                Me.GetPrintFileToppanOperationCompleted = AddressOf Me.OnGetPrintFileToppanOperationCompleted
            End If
            Me.InvokeAsync("GetPrintFileToppan", New Object() {printfileCode, errMsg, stackTrace}, Me.GetPrintFileToppanOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPrintFileToppanOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPrintFileToppanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPrintFileToppanCompleted(Me, New GetPrintFileToppanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertToppanRecon", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertToppanRecon(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertToppanRecon", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertToppanReconAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertToppanReconAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertToppanReconAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertToppanReconOperationCompleted Is Nothing) Then
                Me.InsertToppanReconOperationCompleted = AddressOf Me.OnInsertToppanReconOperationCompleted
            End If
            Me.InvokeAsync("InsertToppanRecon", New Object() {inTbl, errMsg, stackTrace}, Me.InsertToppanReconOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertToppanReconOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertToppanReconCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertToppanReconCompleted(Me, New InsertToppanReconCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertToppanMailer", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertToppanMailer(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertToppanMailer", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertToppanMailerAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertToppanMailerAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertToppanMailerAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertToppanMailerOperationCompleted Is Nothing) Then
                Me.InsertToppanMailerOperationCompleted = AddressOf Me.OnInsertToppanMailerOperationCompleted
            End If
            Me.InvokeAsync("InsertToppanMailer", New Object() {inTbl, errMsg, stackTrace}, Me.InsertToppanMailerOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertToppanMailerOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertToppanMailerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertToppanMailerCompleted(Me, New InsertToppanMailerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNightBatchPrintFileRecon", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetNightBatchPrintFileRecon(ByVal sCountry As String, ByVal sOrderDate As String, ByVal sAS400Sys As String, ByVal sAS400BizDate As String, ByVal sRqtDay As String, ByVal sReconLevel As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetNightBatchPrintFileRecon", New Object() {sCountry, sOrderDate, sAS400Sys, sAS400BizDate, sRqtDay, sReconLevel, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetNightBatchPrintFileReconAsync(ByVal sCountry As String, ByVal sOrderDate As String, ByVal sAS400Sys As String, ByVal sAS400BizDate As String, ByVal sRqtDay As String, ByVal sReconLevel As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetNightBatchPrintFileReconAsync(sCountry, sOrderDate, sAS400Sys, sAS400BizDate, sRqtDay, sReconLevel, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetNightBatchPrintFileReconAsync(ByVal sCountry As String, ByVal sOrderDate As String, ByVal sAS400Sys As String, ByVal sAS400BizDate As String, ByVal sRqtDay As String, ByVal sReconLevel As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetNightBatchPrintFileReconOperationCompleted Is Nothing) Then
                Me.GetNightBatchPrintFileReconOperationCompleted = AddressOf Me.OnGetNightBatchPrintFileReconOperationCompleted
            End If
            Me.InvokeAsync("GetNightBatchPrintFileRecon", New Object() {sCountry, sOrderDate, sAS400Sys, sAS400BizDate, sRqtDay, sReconLevel, errMsg, stackTrace}, Me.GetNightBatchPrintFileReconOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetNightBatchPrintFileReconOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNightBatchPrintFileReconCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNightBatchPrintFileReconCompleted(Me, New GetNightBatchPrintFileReconCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCCMSFundTransRules", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCCMSFundTransRules() As BasicDataTableStruct
            Dim results() As Object = Me.Invoke("GetCCMSFundTransRules", New Object(-1) {})
            Return CType(results(0),BasicDataTableStruct)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCCMSFundTransRulesAsync()
            Me.GetCCMSFundTransRulesAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCCMSFundTransRulesAsync(ByVal userState As Object)
            If (Me.GetCCMSFundTransRulesOperationCompleted Is Nothing) Then
                Me.GetCCMSFundTransRulesOperationCompleted = AddressOf Me.OnGetCCMSFundTransRulesOperationCompleted
            End If
            Me.InvokeAsync("GetCCMSFundTransRules", New Object(-1) {}, Me.GetCCMSFundTransRulesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCCMSFundTransRulesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCCMSFundTransRulesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCCMSFundTransRulesCompleted(Me, New GetCCMSFundTransRulesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCIWAccumulatedPremiumPaid", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCIWAccumulatedPremiumPaid(ByVal ciw_db As String, ByVal pol_no As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetCIWAccumulatedPremiumPaid", New Object() {ciw_db, pol_no, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCIWAccumulatedPremiumPaidAsync(ByVal ciw_db As String, ByVal pol_no As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCIWAccumulatedPremiumPaidAsync(ciw_db, pol_no, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCIWAccumulatedPremiumPaidAsync(ByVal ciw_db As String, ByVal pol_no As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCIWAccumulatedPremiumPaidOperationCompleted Is Nothing) Then
                Me.GetCIWAccumulatedPremiumPaidOperationCompleted = AddressOf Me.OnGetCIWAccumulatedPremiumPaidOperationCompleted
            End If
            Me.InvokeAsync("GetCIWAccumulatedPremiumPaid", New Object() {ciw_db, pol_no, errMsg, stackTrace}, Me.GetCIWAccumulatedPremiumPaidOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCIWAccumulatedPremiumPaidOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCIWAccumulatedPremiumPaidCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCIWAccumulatedPremiumPaidCompleted(Me, New GetCIWAccumulatedPremiumPaidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProductTypeByPolNo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProductTypeByPolNo(ByVal ciw_db As String, ByVal pol_no As String, ByVal colNm As String, ByVal value As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetProductTypeByPolNo", New Object() {ciw_db, pol_no, colNm, value, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProductTypeByPolNoAsync(ByVal ciw_db As String, ByVal pol_no As String, ByVal colNm As String, ByVal value As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetProductTypeByPolNoAsync(ciw_db, pol_no, colNm, value, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProductTypeByPolNoAsync(ByVal ciw_db As String, ByVal pol_no As String, ByVal colNm As String, ByVal value As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetProductTypeByPolNoOperationCompleted Is Nothing) Then
                Me.GetProductTypeByPolNoOperationCompleted = AddressOf Me.OnGetProductTypeByPolNoOperationCompleted
            End If
            Me.InvokeAsync("GetProductTypeByPolNo", New Object() {ciw_db, pol_no, colNm, value, errMsg, stackTrace}, Me.GetProductTypeByPolNoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProductTypeByPolNoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProductTypeByPolNoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProductTypeByPolNoCompleted(Me, New GetProductTypeByPolNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRoleInfoByPolNo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRoleInfoByPolNo(ByVal pol_no As String, ByVal relateCode As String, ByVal companyCode As String, ByVal envCode As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetRoleInfoByPolNo", New Object() {pol_no, relateCode, companyCode, envCode, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRoleInfoByPolNoAsync(ByVal pol_no As String, ByVal relateCode As String, ByVal companyCode As String, ByVal envCode As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetRoleInfoByPolNoAsync(pol_no, relateCode, companyCode, envCode, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRoleInfoByPolNoAsync(ByVal pol_no As String, ByVal relateCode As String, ByVal companyCode As String, ByVal envCode As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetRoleInfoByPolNoOperationCompleted Is Nothing) Then
                Me.GetRoleInfoByPolNoOperationCompleted = AddressOf Me.OnGetRoleInfoByPolNoOperationCompleted
            End If
            Me.InvokeAsync("GetRoleInfoByPolNo", New Object() {pol_no, relateCode, companyCode, envCode, errMsg, stackTrace}, Me.GetRoleInfoByPolNoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRoleInfoByPolNoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRoleInfoByPolNoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRoleInfoByPolNoCompleted(Me, New GetRoleInfoByPolNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFundGainLossValue", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFundGainLossValue(ByVal policyNo As String, ByVal inTbl As System.Data.DataTable) As BasicDataSetStruct
            Dim results() As Object = Me.Invoke("GetFundGainLossValue", New Object() {policyNo, inTbl})
            Return CType(results(0),BasicDataSetStruct)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFundGainLossValueAsync(ByVal policyNo As String, ByVal inTbl As System.Data.DataTable)
            Me.GetFundGainLossValueAsync(policyNo, inTbl, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFundGainLossValueAsync(ByVal policyNo As String, ByVal inTbl As System.Data.DataTable, ByVal userState As Object)
            If (Me.GetFundGainLossValueOperationCompleted Is Nothing) Then
                Me.GetFundGainLossValueOperationCompleted = AddressOf Me.OnGetFundGainLossValueOperationCompleted
            End If
            Me.InvokeAsync("GetFundGainLossValue", New Object() {policyNo, inTbl}, Me.GetFundGainLossValueOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFundGainLossValueOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFundGainLossValueCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFundGainLossValueCompleted(Me, New GetFundGainLossValueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmailNotification", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmailNotification(ByVal where As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetEmailNotification", New Object() {where, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmailNotificationAsync(ByVal where As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetEmailNotificationAsync(where, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmailNotificationAsync(ByVal where As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetEmailNotificationOperationCompleted Is Nothing) Then
                Me.GetEmailNotificationOperationCompleted = AddressOf Me.OnGetEmailNotificationOperationCompleted
            End If
            Me.InvokeAsync("GetEmailNotification", New Object() {where, errMsg, stackTrace}, Me.GetEmailNotificationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmailNotificationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmailNotificationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmailNotificationCompleted(Me, New GetEmailNotificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEmailNotificationStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateEmailNotificationStatus(ByVal emailId As Integer, ByVal sentStatus As String, ByVal updateUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateEmailNotificationStatus", New Object() {emailId, sentStatus, updateUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateEmailNotificationStatusAsync(ByVal emailId As Integer, ByVal sentStatus As String, ByVal updateUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateEmailNotificationStatusAsync(emailId, sentStatus, updateUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateEmailNotificationStatusAsync(ByVal emailId As Integer, ByVal sentStatus As String, ByVal updateUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateEmailNotificationStatusOperationCompleted Is Nothing) Then
                Me.UpdateEmailNotificationStatusOperationCompleted = AddressOf Me.OnUpdateEmailNotificationStatusOperationCompleted
            End If
            Me.InvokeAsync("UpdateEmailNotificationStatus", New Object() {emailId, sentStatus, updateUser, errMsg, stackTrace}, Me.UpdateEmailNotificationStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateEmailNotificationStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateEmailNotificationStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateEmailNotificationStatusCompleted(Me, New UpdateEmailNotificationStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLetterTemplateMailMergeInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLetterTemplateMailMergeInfo(ByVal letterCode As String) As BaseResponseOfWordDocMailMergeDOM
            Dim results() As Object = Me.Invoke("GetLetterTemplateMailMergeInfo", New Object() {letterCode})
            Return CType(results(0),BaseResponseOfWordDocMailMergeDOM)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLetterTemplateMailMergeInfoAsync(ByVal letterCode As String)
            Me.GetLetterTemplateMailMergeInfoAsync(letterCode, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLetterTemplateMailMergeInfoAsync(ByVal letterCode As String, ByVal userState As Object)
            If (Me.GetLetterTemplateMailMergeInfoOperationCompleted Is Nothing) Then
                Me.GetLetterTemplateMailMergeInfoOperationCompleted = AddressOf Me.OnGetLetterTemplateMailMergeInfoOperationCompleted
            End If
            Me.InvokeAsync("GetLetterTemplateMailMergeInfo", New Object() {letterCode}, Me.GetLetterTemplateMailMergeInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLetterTemplateMailMergeInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLetterTemplateMailMergeInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLetterTemplateMailMergeInfoCompleted(Me, New GetLetterTemplateMailMergeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetParamAS400Mapping", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetParamAS400Mapping(ByVal where As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetParamAS400Mapping", New Object() {where, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetParamAS400MappingAsync(ByVal where As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetParamAS400MappingAsync(where, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetParamAS400MappingAsync(ByVal where As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetParamAS400MappingOperationCompleted Is Nothing) Then
                Me.GetParamAS400MappingOperationCompleted = AddressOf Me.OnGetParamAS400MappingOperationCompleted
            End If
            Me.InvokeAsync("GetParamAS400Mapping", New Object() {where, errMsg, stackTrace}, Me.GetParamAS400MappingOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetParamAS400MappingOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetParamAS400MappingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetParamAS400MappingCompleted(Me, New GetParamAS400MappingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomerAddress", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCustomerAddress(ByVal ciwCustID As String, ByVal addrType As String, ByVal ciwDb As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetCustomerAddress", New Object() {ciwCustID, addrType, ciwDb, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCustomerAddressAsync(ByVal ciwCustID As String, ByVal addrType As String, ByVal ciwDb As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCustomerAddressAsync(ciwCustID, addrType, ciwDb, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCustomerAddressAsync(ByVal ciwCustID As String, ByVal addrType As String, ByVal ciwDb As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCustomerAddressOperationCompleted Is Nothing) Then
                Me.GetCustomerAddressOperationCompleted = AddressOf Me.OnGetCustomerAddressOperationCompleted
            End If
            Me.InvokeAsync("GetCustomerAddress", New Object() {ciwCustID, addrType, ciwDb, errMsg, stackTrace}, Me.GetCustomerAddressOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCustomerAddressOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCustomerAddressCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCustomerAddressCompleted(Me, New GetCustomerAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertLetterData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertLetterData(ByVal request As LetterRequest, ByVal fieldList() As LetterField, <System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfLetterRegion"), System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel:=1)> ByVal regionSet()() As LetterRegion) As BaseResponseOfLetterInfo
            Dim results() As Object = Me.Invoke("InsertLetterData", New Object() {request, fieldList, regionSet})
            Return CType(results(0),BaseResponseOfLetterInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertLetterDataAsync(ByVal request As LetterRequest, ByVal fieldList() As LetterField, ByVal regionSet()() As LetterRegion)
            Me.InsertLetterDataAsync(request, fieldList, regionSet, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertLetterDataAsync(ByVal request As LetterRequest, ByVal fieldList() As LetterField, ByVal regionSet()() As LetterRegion, ByVal userState As Object)
            If (Me.InsertLetterDataOperationCompleted Is Nothing) Then
                Me.InsertLetterDataOperationCompleted = AddressOf Me.OnInsertLetterDataOperationCompleted
            End If
            Me.InvokeAsync("InsertLetterData", New Object() {request, fieldList, regionSet}, Me.InsertLetterDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertLetterDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertLetterDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertLetterDataCompleted(Me, New InsertLetterDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenerateFile", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GenerateFile(ByVal generateInput As LetterGenerateInput) As BaseResponseOfLetterGenerateInfo
            Dim results() As Object = Me.Invoke("GenerateFile", New Object() {generateInput})
            Return CType(results(0),BaseResponseOfLetterGenerateInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GenerateFileAsync(ByVal generateInput As LetterGenerateInput)
            Me.GenerateFileAsync(generateInput, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GenerateFileAsync(ByVal generateInput As LetterGenerateInput, ByVal userState As Object)
            If (Me.GenerateFileOperationCompleted Is Nothing) Then
                Me.GenerateFileOperationCompleted = AddressOf Me.OnGenerateFileOperationCompleted
            End If
            Me.InvokeAsync("GenerateFile", New Object() {generateInput}, Me.GenerateFileOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenerateFileOperationCompleted(ByVal arg As Object)
            If (Not (Me.GenerateFileCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GenerateFileCompleted(Me, New GenerateFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignCommControlSearch_DBMoto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignCommControlSearch_DBMoto(ByVal campaign As String, ByVal request_num As String, ByVal ciw_db As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignCommControlSearch_DBMoto", New Object() {campaign, request_num, ciw_db, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignCommControlSearch_DBMotoAsync(ByVal campaign As String, ByVal request_num As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignCommControlSearch_DBMotoAsync(campaign, request_num, ciw_db, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignCommControlSearch_DBMotoAsync(ByVal campaign As String, ByVal request_num As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignCommControlSearch_DBMotoOperationCompleted Is Nothing) Then
                Me.CampaignCommControlSearch_DBMotoOperationCompleted = AddressOf Me.OnCampaignCommControlSearch_DBMotoOperationCompleted
            End If
            Me.InvokeAsync("CampaignCommControlSearch_DBMoto", New Object() {campaign, request_num, ciw_db, errMsg, stackTrace}, Me.CampaignCommControlSearch_DBMotoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignCommControlSearch_DBMotoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignCommControlSearch_DBMotoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignCommControlSearch_DBMotoCompleted(Me, New CampaignCommControlSearch_DBMotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignCommTierSearch_DBMoto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignCommTierSearch_DBMoto(ByVal campaign As String, ByVal request_num As String, ByVal ciw_db As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignCommTierSearch_DBMoto", New Object() {campaign, request_num, ciw_db, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignCommTierSearch_DBMotoAsync(ByVal campaign As String, ByVal request_num As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignCommTierSearch_DBMotoAsync(campaign, request_num, ciw_db, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignCommTierSearch_DBMotoAsync(ByVal campaign As String, ByVal request_num As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignCommTierSearch_DBMotoOperationCompleted Is Nothing) Then
                Me.CampaignCommTierSearch_DBMotoOperationCompleted = AddressOf Me.OnCampaignCommTierSearch_DBMotoOperationCompleted
            End If
            Me.InvokeAsync("CampaignCommTierSearch_DBMoto", New Object() {campaign, request_num, ciw_db, errMsg, stackTrace}, Me.CampaignCommTierSearch_DBMotoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignCommTierSearch_DBMotoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignCommTierSearch_DBMotoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignCommTierSearch_DBMotoCompleted(Me, New CampaignCommTierSearch_DBMotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignCommRateSearch_DBMoto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignCommRateSearch_DBMoto(ByVal rate_key As String, ByVal request_num As String, ByVal ciw_db As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignCommRateSearch_DBMoto", New Object() {rate_key, request_num, ciw_db, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignCommRateSearch_DBMotoAsync(ByVal rate_key As String, ByVal request_num As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignCommRateSearch_DBMotoAsync(rate_key, request_num, ciw_db, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignCommRateSearch_DBMotoAsync(ByVal rate_key As String, ByVal request_num As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignCommRateSearch_DBMotoOperationCompleted Is Nothing) Then
                Me.CampaignCommRateSearch_DBMotoOperationCompleted = AddressOf Me.OnCampaignCommRateSearch_DBMotoOperationCompleted
            End If
            Me.InvokeAsync("CampaignCommRateSearch_DBMoto", New Object() {rate_key, request_num, ciw_db, errMsg, stackTrace}, Me.CampaignCommRateSearch_DBMotoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignCommRateSearch_DBMotoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignCommRateSearch_DBMotoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignCommRateSearch_DBMotoCompleted(Me, New CampaignCommRateSearch_DBMotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCampCommTier", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCampCommTier(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertCampCommTier", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCampCommTierAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertCampCommTierAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCampCommTierAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertCampCommTierOperationCompleted Is Nothing) Then
                Me.InsertCampCommTierOperationCompleted = AddressOf Me.OnInsertCampCommTierOperationCompleted
            End If
            Me.InvokeAsync("InsertCampCommTier", New Object() {inTbl, errMsg, stackTrace}, Me.InsertCampCommTierOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCampCommTierOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCampCommTierCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCampCommTierCompleted(Me, New InsertCampCommTierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCampCommRate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCampCommRate(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertCampCommRate", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCampCommRateAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertCampCommRateAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCampCommRateAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertCampCommRateOperationCompleted Is Nothing) Then
                Me.InsertCampCommRateOperationCompleted = AddressOf Me.OnInsertCampCommRateOperationCompleted
            End If
            Me.InvokeAsync("InsertCampCommRate", New Object() {inTbl, errMsg, stackTrace}, Me.InsertCampCommRateOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCampCommRateOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCampCommRateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCampCommRateCompleted(Me, New InsertCampCommRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCampCommCtrl", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCampCommCtrl(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertCampCommCtrl", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCampCommCtrlAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertCampCommCtrlAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCampCommCtrlAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertCampCommCtrlOperationCompleted Is Nothing) Then
                Me.InsertCampCommCtrlOperationCompleted = AddressOf Me.OnInsertCampCommCtrlOperationCompleted
            End If
            Me.InvokeAsync("InsertCampCommCtrl", New Object() {inTbl, errMsg, stackTrace}, Me.InsertCampCommCtrlOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCampCommCtrlOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCampCommCtrlCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCampCommCtrlCompleted(Me, New InsertCampCommCtrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampCommTierMaxReqSeq", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCampCommTierMaxReqSeq(ByVal requestID As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("GetCampCommTierMaxReqSeq", New Object() {requestID, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCampCommTierMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCampCommTierMaxReqSeqAsync(requestID, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCampCommTierMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCampCommTierMaxReqSeqOperationCompleted Is Nothing) Then
                Me.GetCampCommTierMaxReqSeqOperationCompleted = AddressOf Me.OnGetCampCommTierMaxReqSeqOperationCompleted
            End If
            Me.InvokeAsync("GetCampCommTierMaxReqSeq", New Object() {requestID, errMsg, stackTrace}, Me.GetCampCommTierMaxReqSeqOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCampCommTierMaxReqSeqOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampCommTierMaxReqSeqCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampCommTierMaxReqSeqCompleted(Me, New GetCampCommTierMaxReqSeqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampCommRateMaxReqSeq", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCampCommRateMaxReqSeq(ByVal requestID As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("GetCampCommRateMaxReqSeq", New Object() {requestID, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCampCommRateMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCampCommRateMaxReqSeqAsync(requestID, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCampCommRateMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCampCommRateMaxReqSeqOperationCompleted Is Nothing) Then
                Me.GetCampCommRateMaxReqSeqOperationCompleted = AddressOf Me.OnGetCampCommRateMaxReqSeqOperationCompleted
            End If
            Me.InvokeAsync("GetCampCommRateMaxReqSeq", New Object() {requestID, errMsg, stackTrace}, Me.GetCampCommRateMaxReqSeqOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCampCommRateMaxReqSeqOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampCommRateMaxReqSeqCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampCommRateMaxReqSeqCompleted(Me, New GetCampCommRateMaxReqSeqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampCommCtrlMaxReqSeq", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCampCommCtrlMaxReqSeq(ByVal requestID As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("GetCampCommCtrlMaxReqSeq", New Object() {requestID, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCampCommCtrlMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCampCommCtrlMaxReqSeqAsync(requestID, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCampCommCtrlMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCampCommCtrlMaxReqSeqOperationCompleted Is Nothing) Then
                Me.GetCampCommCtrlMaxReqSeqOperationCompleted = AddressOf Me.OnGetCampCommCtrlMaxReqSeqOperationCompleted
            End If
            Me.InvokeAsync("GetCampCommCtrlMaxReqSeq", New Object() {requestID, errMsg, stackTrace}, Me.GetCampCommCtrlMaxReqSeqOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCampCommCtrlMaxReqSeqOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampCommCtrlMaxReqSeqCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampCommCtrlMaxReqSeqCompleted(Me, New GetCampCommCtrlMaxReqSeqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignCommTierSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignCommTierSearch(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignCommTierSearch", New Object() {setupID, requestID, status, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignCommTierSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignCommTierSearchAsync(setupID, requestID, status, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignCommTierSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignCommTierSearchOperationCompleted Is Nothing) Then
                Me.CampaignCommTierSearchOperationCompleted = AddressOf Me.OnCampaignCommTierSearchOperationCompleted
            End If
            Me.InvokeAsync("CampaignCommTierSearch", New Object() {setupID, requestID, status, errMsg, stackTrace}, Me.CampaignCommTierSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignCommTierSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignCommTierSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignCommTierSearchCompleted(Me, New CampaignCommTierSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignCommRateSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignCommRateSearch(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignCommRateSearch", New Object() {setupID, requestID, status, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignCommRateSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignCommRateSearchAsync(setupID, requestID, status, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignCommRateSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignCommRateSearchOperationCompleted Is Nothing) Then
                Me.CampaignCommRateSearchOperationCompleted = AddressOf Me.OnCampaignCommRateSearchOperationCompleted
            End If
            Me.InvokeAsync("CampaignCommRateSearch", New Object() {setupID, requestID, status, errMsg, stackTrace}, Me.CampaignCommRateSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignCommRateSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignCommRateSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignCommRateSearchCompleted(Me, New CampaignCommRateSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignCommCtrlSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignCommCtrlSearch(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignCommCtrlSearch", New Object() {setupID, requestID, status, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignCommCtrlSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignCommCtrlSearchAsync(setupID, requestID, status, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignCommCtrlSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignCommCtrlSearchOperationCompleted Is Nothing) Then
                Me.CampaignCommCtrlSearchOperationCompleted = AddressOf Me.OnCampaignCommCtrlSearchOperationCompleted
            End If
            Me.InvokeAsync("CampaignCommCtrlSearch", New Object() {setupID, requestID, status, errMsg, stackTrace}, Me.CampaignCommCtrlSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignCommCtrlSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignCommCtrlSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignCommCtrlSearchCompleted(Me, New CampaignCommCtrlSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCampCommTier", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCampCommTier(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateCampCommTier", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCampCommTierAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateCampCommTierAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCampCommTierAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateCampCommTierOperationCompleted Is Nothing) Then
                Me.UpdateCampCommTierOperationCompleted = AddressOf Me.OnUpdateCampCommTierOperationCompleted
            End If
            Me.InvokeAsync("UpdateCampCommTier", New Object() {inTbl, errMsg, stackTrace}, Me.UpdateCampCommTierOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCampCommTierOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCampCommTierCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCampCommTierCompleted(Me, New UpdateCampCommTierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCampCommRate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCampCommRate(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateCampCommRate", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCampCommRateAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateCampCommRateAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCampCommRateAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateCampCommRateOperationCompleted Is Nothing) Then
                Me.UpdateCampCommRateOperationCompleted = AddressOf Me.OnUpdateCampCommRateOperationCompleted
            End If
            Me.InvokeAsync("UpdateCampCommRate", New Object() {inTbl, errMsg, stackTrace}, Me.UpdateCampCommRateOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCampCommRateOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCampCommRateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCampCommRateCompleted(Me, New UpdateCampCommRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCampCommCtrl", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCampCommCtrl(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateCampCommCtrl", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCampCommCtrlAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateCampCommCtrlAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCampCommCtrlAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateCampCommCtrlOperationCompleted Is Nothing) Then
                Me.UpdateCampCommCtrlOperationCompleted = AddressOf Me.OnUpdateCampCommCtrlOperationCompleted
            End If
            Me.InvokeAsync("UpdateCampCommCtrl", New Object() {inTbl, errMsg, stackTrace}, Me.UpdateCampCommCtrlOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCampCommCtrlOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCampCommCtrlCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCampCommCtrlCompleted(Me, New UpdateCampCommCtrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelCampaignCommTier", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DelCampaignCommTier(ByVal setupIDList() As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DelCampaignCommTier", New Object() {setupIDList, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DelCampaignCommTierAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DelCampaignCommTierAsync(setupIDList, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DelCampaignCommTierAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DelCampaignCommTierOperationCompleted Is Nothing) Then
                Me.DelCampaignCommTierOperationCompleted = AddressOf Me.OnDelCampaignCommTierOperationCompleted
            End If
            Me.InvokeAsync("DelCampaignCommTier", New Object() {setupIDList, errMsg, stackTrace}, Me.DelCampaignCommTierOperationCompleted, userState)
        End Sub
        
        Private Sub OnDelCampaignCommTierOperationCompleted(ByVal arg As Object)
            If (Not (Me.DelCampaignCommTierCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DelCampaignCommTierCompleted(Me, New DelCampaignCommTierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelCampaignCommRate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DelCampaignCommRate(ByVal setupIDList() As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DelCampaignCommRate", New Object() {setupIDList, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DelCampaignCommRateAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DelCampaignCommRateAsync(setupIDList, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DelCampaignCommRateAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DelCampaignCommRateOperationCompleted Is Nothing) Then
                Me.DelCampaignCommRateOperationCompleted = AddressOf Me.OnDelCampaignCommRateOperationCompleted
            End If
            Me.InvokeAsync("DelCampaignCommRate", New Object() {setupIDList, errMsg, stackTrace}, Me.DelCampaignCommRateOperationCompleted, userState)
        End Sub
        
        Private Sub OnDelCampaignCommRateOperationCompleted(ByVal arg As Object)
            If (Not (Me.DelCampaignCommRateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DelCampaignCommRateCompleted(Me, New DelCampaignCommRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelCampaignCommCtrl", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DelCampaignCommCtrl(ByVal setupIDList() As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DelCampaignCommCtrl", New Object() {setupIDList, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DelCampaignCommCtrlAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DelCampaignCommCtrlAsync(setupIDList, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DelCampaignCommCtrlAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DelCampaignCommCtrlOperationCompleted Is Nothing) Then
                Me.DelCampaignCommCtrlOperationCompleted = AddressOf Me.OnDelCampaignCommCtrlOperationCompleted
            End If
            Me.InvokeAsync("DelCampaignCommCtrl", New Object() {setupIDList, errMsg, stackTrace}, Me.DelCampaignCommCtrlOperationCompleted, userState)
        End Sub
        
        Private Sub OnDelCampaignCommCtrlOperationCompleted(ByVal arg As Object)
            If (Not (Me.DelCampaignCommCtrlCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DelCampaignCommCtrlCompleted(Me, New DelCampaignCommCtrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampaignRequestComment", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCampaignRequestComment(ByVal requestID As Integer, ByVal ref_number As String, ByVal isLatest As Boolean, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetCampaignRequestComment", New Object() {requestID, ref_number, isLatest, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCampaignRequestCommentAsync(ByVal requestID As Integer, ByVal ref_number As String, ByVal isLatest As Boolean, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCampaignRequestCommentAsync(requestID, ref_number, isLatest, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCampaignRequestCommentAsync(ByVal requestID As Integer, ByVal ref_number As String, ByVal isLatest As Boolean, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCampaignRequestCommentOperationCompleted Is Nothing) Then
                Me.GetCampaignRequestCommentOperationCompleted = AddressOf Me.OnGetCampaignRequestCommentOperationCompleted
            End If
            Me.InvokeAsync("GetCampaignRequestComment", New Object() {requestID, ref_number, isLatest, errMsg, stackTrace}, Me.GetCampaignRequestCommentOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCampaignRequestCommentOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampaignRequestCommentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampaignRequestCommentCompleted(Me, New GetCampaignRequestCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCampaignRequestComment", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCampaignRequestComment(ByVal requestID As Integer, ByVal ref_number As String, ByVal detail As String, ByVal requestor As String, ByVal create_user As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertCampaignRequestComment", New Object() {requestID, ref_number, detail, requestor, create_user, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCampaignRequestCommentAsync(ByVal requestID As Integer, ByVal ref_number As String, ByVal detail As String, ByVal requestor As String, ByVal create_user As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertCampaignRequestCommentAsync(requestID, ref_number, detail, requestor, create_user, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCampaignRequestCommentAsync(ByVal requestID As Integer, ByVal ref_number As String, ByVal detail As String, ByVal requestor As String, ByVal create_user As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertCampaignRequestCommentOperationCompleted Is Nothing) Then
                Me.InsertCampaignRequestCommentOperationCompleted = AddressOf Me.OnInsertCampaignRequestCommentOperationCompleted
            End If
            Me.InvokeAsync("InsertCampaignRequestComment", New Object() {requestID, ref_number, detail, requestor, create_user, errMsg, stackTrace}, Me.InsertCampaignRequestCommentOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCampaignRequestCommentOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCampaignRequestCommentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCampaignRequestCommentCompleted(Me, New InsertCampaignRequestCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampaignRequestRefNumber", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCampaignRequestRefNumber(ByVal requestID As Integer, ByVal status As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetCampaignRequestRefNumber", New Object() {requestID, status, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCampaignRequestRefNumberAsync(ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCampaignRequestRefNumberAsync(requestID, status, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCampaignRequestRefNumberAsync(ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCampaignRequestRefNumberOperationCompleted Is Nothing) Then
                Me.GetCampaignRequestRefNumberOperationCompleted = AddressOf Me.OnGetCampaignRequestRefNumberOperationCompleted
            End If
            Me.InvokeAsync("GetCampaignRequestRefNumber", New Object() {requestID, status, errMsg, stackTrace}, Me.GetCampaignRequestRefNumberOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCampaignRequestRefNumberOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampaignRequestRefNumberCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampaignRequestRefNumberCompleted(Me, New GetCampaignRequestRefNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampaignPremiumDiscountSummary", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCampaignPremiumDiscountSummary(ByVal requestID As Integer, ByVal Country As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetCampaignPremiumDiscountSummary", New Object() {requestID, Country, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCampaignPremiumDiscountSummaryAsync(ByVal requestID As Integer, ByVal Country As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCampaignPremiumDiscountSummaryAsync(requestID, Country, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCampaignPremiumDiscountSummaryAsync(ByVal requestID As Integer, ByVal Country As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCampaignPremiumDiscountSummaryOperationCompleted Is Nothing) Then
                Me.GetCampaignPremiumDiscountSummaryOperationCompleted = AddressOf Me.OnGetCampaignPremiumDiscountSummaryOperationCompleted
            End If
            Me.InvokeAsync("GetCampaignPremiumDiscountSummary", New Object() {requestID, Country, errMsg, stackTrace}, Me.GetCampaignPremiumDiscountSummaryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCampaignPremiumDiscountSummaryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampaignPremiumDiscountSummaryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampaignPremiumDiscountSummaryCompleted(Me, New GetCampaignPremiumDiscountSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampaignCommissionSummary", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCampaignCommissionSummary(ByVal requestID As Integer, ByVal Country As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetCampaignCommissionSummary", New Object() {requestID, Country, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCampaignCommissionSummaryAsync(ByVal requestID As Integer, ByVal Country As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCampaignCommissionSummaryAsync(requestID, Country, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCampaignCommissionSummaryAsync(ByVal requestID As Integer, ByVal Country As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCampaignCommissionSummaryOperationCompleted Is Nothing) Then
                Me.GetCampaignCommissionSummaryOperationCompleted = AddressOf Me.OnGetCampaignCommissionSummaryOperationCompleted
            End If
            Me.InvokeAsync("GetCampaignCommissionSummary", New Object() {requestID, Country, errMsg, stackTrace}, Me.GetCampaignCommissionSummaryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCampaignCommissionSummaryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampaignCommissionSummaryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampaignCommissionSummaryCompleted(Me, New GetCampaignCommissionSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampaignCodeNextSeqId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCampaignCodeNextSeqId(ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("GetCampaignCodeNextSeqId", New Object() {errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCampaignCodeNextSeqIdAsync(ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCampaignCodeNextSeqIdAsync(errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCampaignCodeNextSeqIdAsync(ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCampaignCodeNextSeqIdOperationCompleted Is Nothing) Then
                Me.GetCampaignCodeNextSeqIdOperationCompleted = AddressOf Me.OnGetCampaignCodeNextSeqIdOperationCompleted
            End If
            Me.InvokeAsync("GetCampaignCodeNextSeqId", New Object() {errMsg, stackTrace}, Me.GetCampaignCodeNextSeqIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCampaignCodeNextSeqIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampaignCodeNextSeqIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampaignCodeNextSeqIdCompleted(Me, New GetCampaignCodeNextSeqIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampaignRequestNumNextSeqId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCampaignRequestNumNextSeqId(ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("GetCampaignRequestNumNextSeqId", New Object() {errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCampaignRequestNumNextSeqIdAsync(ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCampaignRequestNumNextSeqIdAsync(errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCampaignRequestNumNextSeqIdAsync(ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCampaignRequestNumNextSeqIdOperationCompleted Is Nothing) Then
                Me.GetCampaignRequestNumNextSeqIdOperationCompleted = AddressOf Me.OnGetCampaignRequestNumNextSeqIdOperationCompleted
            End If
            Me.InvokeAsync("GetCampaignRequestNumNextSeqId", New Object() {errMsg, stackTrace}, Me.GetCampaignRequestNumNextSeqIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCampaignRequestNumNextSeqIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampaignRequestNumNextSeqIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampaignRequestNumNextSeqIdCompleted(Me, New GetCampaignRequestNumNextSeqIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FundRiskMPFINVFundSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FundRiskMPFINVFundSearch(ByVal fund_code As String, ByVal ciw_db As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("FundRiskMPFINVFundSearch", New Object() {fund_code, ciw_db, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FundRiskMPFINVFundSearchAsync(ByVal fund_code As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.FundRiskMPFINVFundSearchAsync(fund_code, ciw_db, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FundRiskMPFINVFundSearchAsync(ByVal fund_code As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.FundRiskMPFINVFundSearchOperationCompleted Is Nothing) Then
                Me.FundRiskMPFINVFundSearchOperationCompleted = AddressOf Me.OnFundRiskMPFINVFundSearchOperationCompleted
            End If
            Me.InvokeAsync("FundRiskMPFINVFundSearch", New Object() {fund_code, ciw_db, errMsg, stackTrace}, Me.FundRiskMPFINVFundSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnFundRiskMPFINVFundSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.FundRiskMPFINVFundSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FundRiskMPFINVFundSearchCompleted(Me, New FundRiskMPFINVFundSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertFundIgnoreCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertFundIgnoreCode(ByVal fund_code As String, ByVal create_user As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertFundIgnoreCode", New Object() {fund_code, create_user, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertFundIgnoreCodeAsync(ByVal fund_code As String, ByVal create_user As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertFundIgnoreCodeAsync(fund_code, create_user, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertFundIgnoreCodeAsync(ByVal fund_code As String, ByVal create_user As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertFundIgnoreCodeOperationCompleted Is Nothing) Then
                Me.InsertFundIgnoreCodeOperationCompleted = AddressOf Me.OnInsertFundIgnoreCodeOperationCompleted
            End If
            Me.InvokeAsync("InsertFundIgnoreCode", New Object() {fund_code, create_user, errMsg, stackTrace}, Me.InsertFundIgnoreCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertFundIgnoreCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertFundIgnoreCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertFundIgnoreCodeCompleted(Me, New InsertFundIgnoreCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFundIgnoreCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeleteFundIgnoreCode(ByVal fund_code As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DeleteFundIgnoreCode", New Object() {fund_code, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeleteFundIgnoreCodeAsync(ByVal fund_code As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DeleteFundIgnoreCodeAsync(fund_code, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeleteFundIgnoreCodeAsync(ByVal fund_code As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DeleteFundIgnoreCodeOperationCompleted Is Nothing) Then
                Me.DeleteFundIgnoreCodeOperationCompleted = AddressOf Me.OnDeleteFundIgnoreCodeOperationCompleted
            End If
            Me.InvokeAsync("DeleteFundIgnoreCode", New Object() {fund_code, errMsg, stackTrace}, Me.DeleteFundIgnoreCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeleteFundIgnoreCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeleteFundIgnoreCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeleteFundIgnoreCodeCompleted(Me, New DeleteFundIgnoreCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFundRiskSetupMastByStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFundRiskSetupMastByStatus(ByVal status As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetFundRiskSetupMastByStatus", New Object() {status, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFundRiskSetupMastByStatusAsync(ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetFundRiskSetupMastByStatusAsync(status, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFundRiskSetupMastByStatusAsync(ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetFundRiskSetupMastByStatusOperationCompleted Is Nothing) Then
                Me.GetFundRiskSetupMastByStatusOperationCompleted = AddressOf Me.OnGetFundRiskSetupMastByStatusOperationCompleted
            End If
            Me.InvokeAsync("GetFundRiskSetupMastByStatus", New Object() {status, errMsg, stackTrace}, Me.GetFundRiskSetupMastByStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFundRiskSetupMastByStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFundRiskSetupMastByStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFundRiskSetupMastByStatusCompleted(Me, New GetFundRiskSetupMastByStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFundRiskSetupMast", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateFundRiskSetupMast(ByVal request_id As Integer, ByVal updJson As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateFundRiskSetupMast", New Object() {request_id, updJson, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateFundRiskSetupMastAsync(ByVal request_id As Integer, ByVal updJson As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateFundRiskSetupMastAsync(request_id, updJson, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateFundRiskSetupMastAsync(ByVal request_id As Integer, ByVal updJson As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateFundRiskSetupMastOperationCompleted Is Nothing) Then
                Me.UpdateFundRiskSetupMastOperationCompleted = AddressOf Me.OnUpdateFundRiskSetupMastOperationCompleted
            End If
            Me.InvokeAsync("UpdateFundRiskSetupMast", New Object() {request_id, updJson, errMsg, stackTrace}, Me.UpdateFundRiskSetupMastOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateFundRiskSetupMastOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateFundRiskSetupMastCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateFundRiskSetupMastCompleted(Me, New UpdateFundRiskSetupMastCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertEmailAttachment", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertEmailAttachment(ByVal emailId As Integer, <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")> ByVal attachmentBlob() As Byte, ByVal filename As String, ByVal type As String, ByVal createUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("InsertEmailAttachment", New Object() {emailId, attachmentBlob, filename, type, createUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertEmailAttachmentAsync(ByVal emailId As Integer, ByVal attachmentBlob() As Byte, ByVal filename As String, ByVal type As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertEmailAttachmentAsync(emailId, attachmentBlob, filename, type, createUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertEmailAttachmentAsync(ByVal emailId As Integer, ByVal attachmentBlob() As Byte, ByVal filename As String, ByVal type As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertEmailAttachmentOperationCompleted Is Nothing) Then
                Me.InsertEmailAttachmentOperationCompleted = AddressOf Me.OnInsertEmailAttachmentOperationCompleted
            End If
            Me.InvokeAsync("InsertEmailAttachment", New Object() {emailId, attachmentBlob, filename, type, createUser, errMsg, stackTrace}, Me.InsertEmailAttachmentOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertEmailAttachmentOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertEmailAttachmentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertEmailAttachmentCompleted(Me, New InsertEmailAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateEmailStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateEmailStatus(ByVal emailId As Integer, ByVal status As String, ByVal createUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateEmailStatus", New Object() {emailId, status, createUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateEmailStatusAsync(ByVal emailId As Integer, ByVal status As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateEmailStatusAsync(emailId, status, createUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateEmailStatusAsync(ByVal emailId As Integer, ByVal status As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateEmailStatusOperationCompleted Is Nothing) Then
                Me.UpdateEmailStatusOperationCompleted = AddressOf Me.OnUpdateEmailStatusOperationCompleted
            End If
            Me.InvokeAsync("UpdateEmailStatus", New Object() {emailId, status, createUser, errMsg, stackTrace}, Me.UpdateEmailStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateEmailStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateEmailStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateEmailStatusCompleted(Me, New UpdateEmailStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmailById", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmailById(ByVal emailId As Integer, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetEmailById", New Object() {emailId, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmailByIdAsync(ByVal emailId As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetEmailByIdAsync(emailId, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmailByIdAsync(ByVal emailId As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetEmailByIdOperationCompleted Is Nothing) Then
                Me.GetEmailByIdOperationCompleted = AddressOf Me.OnGetEmailByIdOperationCompleted
            End If
            Me.InvokeAsync("GetEmailById", New Object() {emailId, errMsg, stackTrace}, Me.GetEmailByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmailByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmailByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmailByIdCompleted(Me, New GetEmailByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendEmailById", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SendEmailById(ByVal emailId As Integer, ByVal smtpServer As String, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("SendEmailById", New Object() {emailId, smtpServer, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendEmailByIdAsync(ByVal emailId As Integer, ByVal smtpServer As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.SendEmailByIdAsync(emailId, smtpServer, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendEmailByIdAsync(ByVal emailId As Integer, ByVal smtpServer As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.SendEmailByIdOperationCompleted Is Nothing) Then
                Me.SendEmailByIdOperationCompleted = AddressOf Me.OnSendEmailByIdOperationCompleted
            End If
            Me.InvokeAsync("SendEmailById", New Object() {emailId, smtpServer, errMsg, stackTrace}, Me.SendEmailByIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendEmailByIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendEmailByIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendEmailByIdCompleted(Me, New SendEmailByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampDefaultMaxReqSeq", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCampDefaultMaxReqSeq(ByVal requestID As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("GetCampDefaultMaxReqSeq", New Object() {requestID, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCampDefaultMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCampDefaultMaxReqSeqAsync(requestID, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCampDefaultMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCampDefaultMaxReqSeqOperationCompleted Is Nothing) Then
                Me.GetCampDefaultMaxReqSeqOperationCompleted = AddressOf Me.OnGetCampDefaultMaxReqSeqOperationCompleted
            End If
            Me.InvokeAsync("GetCampDefaultMaxReqSeq", New Object() {requestID, errMsg, stackTrace}, Me.GetCampDefaultMaxReqSeqOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCampDefaultMaxReqSeqOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampDefaultMaxReqSeqCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampDefaultMaxReqSeqCompleted(Me, New GetCampDefaultMaxReqSeqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCampDefault", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCampDefault(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertCampDefault", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCampDefaultAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertCampDefaultAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCampDefaultAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertCampDefaultOperationCompleted Is Nothing) Then
                Me.InsertCampDefaultOperationCompleted = AddressOf Me.OnInsertCampDefaultOperationCompleted
            End If
            Me.InvokeAsync("InsertCampDefault", New Object() {inTbl, errMsg, stackTrace}, Me.InsertCampDefaultOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCampDefaultOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCampDefaultCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCampDefaultCompleted(Me, New InsertCampDefaultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampSetupMastByStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCampSetupMastByStatus(ByVal status As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetCampSetupMastByStatus", New Object() {status, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCampSetupMastByStatusAsync(ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCampSetupMastByStatusAsync(status, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCampSetupMastByStatusAsync(ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCampSetupMastByStatusOperationCompleted Is Nothing) Then
                Me.GetCampSetupMastByStatusOperationCompleted = AddressOf Me.OnGetCampSetupMastByStatusOperationCompleted
            End If
            Me.InvokeAsync("GetCampSetupMastByStatus", New Object() {status, errMsg, stackTrace}, Me.GetCampSetupMastByStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCampSetupMastByStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampSetupMastByStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampSetupMastByStatusCompleted(Me, New GetCampSetupMastByStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddCampSetupMastReqID", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AddCampSetupMastReqID(ByVal createUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("AddCampSetupMastReqID", New Object() {createUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AddCampSetupMastReqIDAsync(ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.AddCampSetupMastReqIDAsync(createUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AddCampSetupMastReqIDAsync(ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.AddCampSetupMastReqIDOperationCompleted Is Nothing) Then
                Me.AddCampSetupMastReqIDOperationCompleted = AddressOf Me.OnAddCampSetupMastReqIDOperationCompleted
            End If
            Me.InvokeAsync("AddCampSetupMastReqID", New Object() {createUser, errMsg, stackTrace}, Me.AddCampSetupMastReqIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnAddCampSetupMastReqIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.AddCampSetupMastReqIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AddCampSetupMastReqIDCompleted(Me, New AddCampSetupMastReqIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignDefaultSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignDefaultSearch(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignDefaultSearch", New Object() {setupID, requestID, status, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignDefaultSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignDefaultSearchAsync(setupID, requestID, status, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignDefaultSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignDefaultSearchOperationCompleted Is Nothing) Then
                Me.CampaignDefaultSearchOperationCompleted = AddressOf Me.OnCampaignDefaultSearchOperationCompleted
            End If
            Me.InvokeAsync("CampaignDefaultSearch", New Object() {setupID, requestID, status, errMsg, stackTrace}, Me.CampaignDefaultSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignDefaultSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignDefaultSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignDefaultSearchCompleted(Me, New CampaignDefaultSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelCampaignDefault", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DelCampaignDefault(ByVal setupIDList() As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DelCampaignDefault", New Object() {setupIDList, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DelCampaignDefaultAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DelCampaignDefaultAsync(setupIDList, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DelCampaignDefaultAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DelCampaignDefaultOperationCompleted Is Nothing) Then
                Me.DelCampaignDefaultOperationCompleted = AddressOf Me.OnDelCampaignDefaultOperationCompleted
            End If
            Me.InvokeAsync("DelCampaignDefault", New Object() {setupIDList, errMsg, stackTrace}, Me.DelCampaignDefaultOperationCompleted, userState)
        End Sub
        
        Private Sub OnDelCampaignDefaultOperationCompleted(ByVal arg As Object)
            If (Not (Me.DelCampaignDefaultCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DelCampaignDefaultCompleted(Me, New DelCampaignDefaultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCampDefault", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCampDefault(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateCampDefault", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCampDefaultAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateCampDefaultAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCampDefaultAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateCampDefaultOperationCompleted Is Nothing) Then
                Me.UpdateCampDefaultOperationCompleted = AddressOf Me.OnUpdateCampDefaultOperationCompleted
            End If
            Me.InvokeAsync("UpdateCampDefault", New Object() {inTbl, errMsg, stackTrace}, Me.UpdateCampDefaultOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCampDefaultOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCampDefaultCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCampDefaultCompleted(Me, New UpdateCampDefaultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCampSetupStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCampSetupStatus(ByVal request_id As Integer, ByVal from_status As String, ByVal to_status As String, ByVal create_user As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateCampSetupStatus", New Object() {request_id, from_status, to_status, create_user, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCampSetupStatusAsync(ByVal request_id As Integer, ByVal from_status As String, ByVal to_status As String, ByVal create_user As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateCampSetupStatusAsync(request_id, from_status, to_status, create_user, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCampSetupStatusAsync(ByVal request_id As Integer, ByVal from_status As String, ByVal to_status As String, ByVal create_user As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateCampSetupStatusOperationCompleted Is Nothing) Then
                Me.UpdateCampSetupStatusOperationCompleted = AddressOf Me.OnUpdateCampSetupStatusOperationCompleted
            End If
            Me.InvokeAsync("UpdateCampSetupStatus", New Object() {request_id, from_status, to_status, create_user, errMsg, stackTrace}, Me.UpdateCampSetupStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCampSetupStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCampSetupStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCampSetupStatusCompleted(Me, New UpdateCampSetupStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCampValidation", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCampValidation(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertCampValidation", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCampValidationAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertCampValidationAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCampValidationAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertCampValidationOperationCompleted Is Nothing) Then
                Me.InsertCampValidationOperationCompleted = AddressOf Me.OnInsertCampValidationOperationCompleted
            End If
            Me.InvokeAsync("InsertCampValidation", New Object() {inTbl, errMsg, stackTrace}, Me.InsertCampValidationOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCampValidationOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCampValidationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCampValidationCompleted(Me, New InsertCampValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampValidationMaxReqSeq", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCampValidationMaxReqSeq(ByVal requestID As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("GetCampValidationMaxReqSeq", New Object() {requestID, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCampValidationMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCampValidationMaxReqSeqAsync(requestID, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCampValidationMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCampValidationMaxReqSeqOperationCompleted Is Nothing) Then
                Me.GetCampValidationMaxReqSeqOperationCompleted = AddressOf Me.OnGetCampValidationMaxReqSeqOperationCompleted
            End If
            Me.InvokeAsync("GetCampValidationMaxReqSeq", New Object() {requestID, errMsg, stackTrace}, Me.GetCampValidationMaxReqSeqOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCampValidationMaxReqSeqOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampValidationMaxReqSeqCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampValidationMaxReqSeqCompleted(Me, New GetCampValidationMaxReqSeqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignValidationSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignValidationSearch(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignValidationSearch", New Object() {setupID, requestID, status, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignValidationSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignValidationSearchAsync(setupID, requestID, status, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignValidationSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignValidationSearchOperationCompleted Is Nothing) Then
                Me.CampaignValidationSearchOperationCompleted = AddressOf Me.OnCampaignValidationSearchOperationCompleted
            End If
            Me.InvokeAsync("CampaignValidationSearch", New Object() {setupID, requestID, status, errMsg, stackTrace}, Me.CampaignValidationSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignValidationSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignValidationSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignValidationSearchCompleted(Me, New CampaignValidationSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelCampaignValidation", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DelCampaignValidation(ByVal setupIDList() As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DelCampaignValidation", New Object() {setupIDList, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DelCampaignValidationAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DelCampaignValidationAsync(setupIDList, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DelCampaignValidationAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DelCampaignValidationOperationCompleted Is Nothing) Then
                Me.DelCampaignValidationOperationCompleted = AddressOf Me.OnDelCampaignValidationOperationCompleted
            End If
            Me.InvokeAsync("DelCampaignValidation", New Object() {setupIDList, errMsg, stackTrace}, Me.DelCampaignValidationOperationCompleted, userState)
        End Sub
        
        Private Sub OnDelCampaignValidationOperationCompleted(ByVal arg As Object)
            If (Not (Me.DelCampaignValidationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DelCampaignValidationCompleted(Me, New DelCampaignValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCampValidation", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCampValidation(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateCampValidation", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCampValidationAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateCampValidationAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCampValidationAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateCampValidationOperationCompleted Is Nothing) Then
                Me.UpdateCampValidationOperationCompleted = AddressOf Me.OnUpdateCampValidationOperationCompleted
            End If
            Me.InvokeAsync("UpdateCampValidation", New Object() {inTbl, errMsg, stackTrace}, Me.UpdateCampValidationOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCampValidationOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCampValidationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCampValidationCompleted(Me, New UpdateCampValidationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignValidationSearch_DBMoto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignValidationSearch_DBMoto(ByVal plan_code As String, ByVal campaign As String, ByVal campaign_type As String, ByVal request_num As String, ByVal ciw_db As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignValidationSearch_DBMoto", New Object() {plan_code, campaign, campaign_type, request_num, ciw_db, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignValidationSearch_DBMotoAsync(ByVal plan_code As String, ByVal campaign As String, ByVal campaign_type As String, ByVal request_num As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignValidationSearch_DBMotoAsync(plan_code, campaign, campaign_type, request_num, ciw_db, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignValidationSearch_DBMotoAsync(ByVal plan_code As String, ByVal campaign As String, ByVal campaign_type As String, ByVal request_num As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignValidationSearch_DBMotoOperationCompleted Is Nothing) Then
                Me.CampaignValidationSearch_DBMotoOperationCompleted = AddressOf Me.OnCampaignValidationSearch_DBMotoOperationCompleted
            End If
            Me.InvokeAsync("CampaignValidationSearch_DBMoto", New Object() {plan_code, campaign, campaign_type, request_num, ciw_db, errMsg, stackTrace}, Me.CampaignValidationSearch_DBMotoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignValidationSearch_DBMotoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignValidationSearch_DBMotoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignValidationSearch_DBMotoCompleted(Me, New CampaignValidationSearch_DBMotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCampCampInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCampCampInfo(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertCampCampInfo", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCampCampInfoAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertCampCampInfoAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCampCampInfoAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertCampCampInfoOperationCompleted Is Nothing) Then
                Me.InsertCampCampInfoOperationCompleted = AddressOf Me.OnInsertCampCampInfoOperationCompleted
            End If
            Me.InvokeAsync("InsertCampCampInfo", New Object() {inTbl, errMsg, stackTrace}, Me.InsertCampCampInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCampCampInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCampCampInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCampCampInfoCompleted(Me, New InsertCampCampInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampCampInfoMaxReqSeq", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCampCampInfoMaxReqSeq(ByVal requestID As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("GetCampCampInfoMaxReqSeq", New Object() {requestID, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCampCampInfoMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCampCampInfoMaxReqSeqAsync(requestID, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCampCampInfoMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCampCampInfoMaxReqSeqOperationCompleted Is Nothing) Then
                Me.GetCampCampInfoMaxReqSeqOperationCompleted = AddressOf Me.OnGetCampCampInfoMaxReqSeqOperationCompleted
            End If
            Me.InvokeAsync("GetCampCampInfoMaxReqSeq", New Object() {requestID, errMsg, stackTrace}, Me.GetCampCampInfoMaxReqSeqOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCampCampInfoMaxReqSeqOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampCampInfoMaxReqSeqCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampCampInfoMaxReqSeqCompleted(Me, New GetCampCampInfoMaxReqSeqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignCampInfoSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignCampInfoSearch(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignCampInfoSearch", New Object() {setupID, requestID, status, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignCampInfoSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignCampInfoSearchAsync(setupID, requestID, status, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignCampInfoSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignCampInfoSearchOperationCompleted Is Nothing) Then
                Me.CampaignCampInfoSearchOperationCompleted = AddressOf Me.OnCampaignCampInfoSearchOperationCompleted
            End If
            Me.InvokeAsync("CampaignCampInfoSearch", New Object() {setupID, requestID, status, errMsg, stackTrace}, Me.CampaignCampInfoSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignCampInfoSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignCampInfoSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignCampInfoSearchCompleted(Me, New CampaignCampInfoSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelCampaignCampInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DelCampaignCampInfo(ByVal setupIDList() As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DelCampaignCampInfo", New Object() {setupIDList, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DelCampaignCampInfoAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DelCampaignCampInfoAsync(setupIDList, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DelCampaignCampInfoAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DelCampaignCampInfoOperationCompleted Is Nothing) Then
                Me.DelCampaignCampInfoOperationCompleted = AddressOf Me.OnDelCampaignCampInfoOperationCompleted
            End If
            Me.InvokeAsync("DelCampaignCampInfo", New Object() {setupIDList, errMsg, stackTrace}, Me.DelCampaignCampInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnDelCampaignCampInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.DelCampaignCampInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DelCampaignCampInfoCompleted(Me, New DelCampaignCampInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCampCampInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCampCampInfo(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateCampCampInfo", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCampCampInfoAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateCampCampInfoAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCampCampInfoAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateCampCampInfoOperationCompleted Is Nothing) Then
                Me.UpdateCampCampInfoOperationCompleted = AddressOf Me.OnUpdateCampCampInfoOperationCompleted
            End If
            Me.InvokeAsync("UpdateCampCampInfo", New Object() {inTbl, errMsg, stackTrace}, Me.UpdateCampCampInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCampCampInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCampCampInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCampCampInfoCompleted(Me, New UpdateCampCampInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignCampInfoSearch_DBMoto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignCampInfoSearch_DBMoto(ByVal campaign As String, ByVal request_num As String, ByVal ciw_db As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignCampInfoSearch_DBMoto", New Object() {campaign, request_num, ciw_db, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignCampInfoSearch_DBMotoAsync(ByVal campaign As String, ByVal request_num As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignCampInfoSearch_DBMotoAsync(campaign, request_num, ciw_db, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignCampInfoSearch_DBMotoAsync(ByVal campaign As String, ByVal request_num As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignCampInfoSearch_DBMotoOperationCompleted Is Nothing) Then
                Me.CampaignCampInfoSearch_DBMotoOperationCompleted = AddressOf Me.OnCampaignCampInfoSearch_DBMotoOperationCompleted
            End If
            Me.InvokeAsync("CampaignCampInfoSearch_DBMoto", New Object() {campaign, request_num, ciw_db, errMsg, stackTrace}, Me.CampaignCampInfoSearch_DBMotoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignCampInfoSearch_DBMotoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignCampInfoSearch_DBMotoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignCampInfoSearch_DBMotoCompleted(Me, New CampaignCampInfoSearch_DBMotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCalastoneMastStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCalastoneMastStatus(ByVal orderRef As String, ByVal status As String, ByVal createUser As String, ByRef errMsg As String, ByRef stackTrace As String) As String
            Dim results() As Object = Me.Invoke("UpdateCalastoneMastStatus", New Object() {orderRef, status, createUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCalastoneMastStatusAsync(ByVal orderRef As String, ByVal status As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateCalastoneMastStatusAsync(orderRef, status, createUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCalastoneMastStatusAsync(ByVal orderRef As String, ByVal status As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateCalastoneMastStatusOperationCompleted Is Nothing) Then
                Me.UpdateCalastoneMastStatusOperationCompleted = AddressOf Me.OnUpdateCalastoneMastStatusOperationCompleted
            End If
            Me.InvokeAsync("UpdateCalastoneMastStatus", New Object() {orderRef, status, createUser, errMsg, stackTrace}, Me.UpdateCalastoneMastStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCalastoneMastStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCalastoneMastStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCalastoneMastStatusCompleted(Me, New UpdateCalastoneMastStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCampCampSetting", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCampCampSetting(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertCampCampSetting", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCampCampSettingAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertCampCampSettingAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCampCampSettingAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertCampCampSettingOperationCompleted Is Nothing) Then
                Me.InsertCampCampSettingOperationCompleted = AddressOf Me.OnInsertCampCampSettingOperationCompleted
            End If
            Me.InvokeAsync("InsertCampCampSetting", New Object() {inTbl, errMsg, stackTrace}, Me.InsertCampCampSettingOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCampCampSettingOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCampCampSettingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCampCampSettingCompleted(Me, New InsertCampCampSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampCampSettingMaxReqSeq", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCampCampSettingMaxReqSeq(ByVal requestID As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("GetCampCampSettingMaxReqSeq", New Object() {requestID, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCampCampSettingMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCampCampSettingMaxReqSeqAsync(requestID, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCampCampSettingMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCampCampSettingMaxReqSeqOperationCompleted Is Nothing) Then
                Me.GetCampCampSettingMaxReqSeqOperationCompleted = AddressOf Me.OnGetCampCampSettingMaxReqSeqOperationCompleted
            End If
            Me.InvokeAsync("GetCampCampSettingMaxReqSeq", New Object() {requestID, errMsg, stackTrace}, Me.GetCampCampSettingMaxReqSeqOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCampCampSettingMaxReqSeqOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampCampSettingMaxReqSeqCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampCampSettingMaxReqSeqCompleted(Me, New GetCampCampSettingMaxReqSeqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignCampSettingSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignCampSettingSearch(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignCampSettingSearch", New Object() {setupID, requestID, status, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignCampSettingSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignCampSettingSearchAsync(setupID, requestID, status, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignCampSettingSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignCampSettingSearchOperationCompleted Is Nothing) Then
                Me.CampaignCampSettingSearchOperationCompleted = AddressOf Me.OnCampaignCampSettingSearchOperationCompleted
            End If
            Me.InvokeAsync("CampaignCampSettingSearch", New Object() {setupID, requestID, status, errMsg, stackTrace}, Me.CampaignCampSettingSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignCampSettingSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignCampSettingSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignCampSettingSearchCompleted(Me, New CampaignCampSettingSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelCampaignCampSetting", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DelCampaignCampSetting(ByVal setupIDList() As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DelCampaignCampSetting", New Object() {setupIDList, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DelCampaignCampSettingAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DelCampaignCampSettingAsync(setupIDList, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DelCampaignCampSettingAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DelCampaignCampSettingOperationCompleted Is Nothing) Then
                Me.DelCampaignCampSettingOperationCompleted = AddressOf Me.OnDelCampaignCampSettingOperationCompleted
            End If
            Me.InvokeAsync("DelCampaignCampSetting", New Object() {setupIDList, errMsg, stackTrace}, Me.DelCampaignCampSettingOperationCompleted, userState)
        End Sub
        
        Private Sub OnDelCampaignCampSettingOperationCompleted(ByVal arg As Object)
            If (Not (Me.DelCampaignCampSettingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DelCampaignCampSettingCompleted(Me, New DelCampaignCampSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCampCampSetting", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCampCampSetting(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateCampCampSetting", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCampCampSettingAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateCampCampSettingAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCampCampSettingAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateCampCampSettingOperationCompleted Is Nothing) Then
                Me.UpdateCampCampSettingOperationCompleted = AddressOf Me.OnUpdateCampCampSettingOperationCompleted
            End If
            Me.InvokeAsync("UpdateCampCampSetting", New Object() {inTbl, errMsg, stackTrace}, Me.UpdateCampCampSettingOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCampCampSettingOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCampCampSettingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCampCampSettingCompleted(Me, New UpdateCampCampSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignCampSettingSearch_DBMoto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignCampSettingSearch_DBMoto(ByVal campaign As String, ByVal request_num As String, ByVal ciw_db As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignCampSettingSearch_DBMoto", New Object() {campaign, request_num, ciw_db, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignCampSettingSearch_DBMotoAsync(ByVal campaign As String, ByVal request_num As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignCampSettingSearch_DBMotoAsync(campaign, request_num, ciw_db, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignCampSettingSearch_DBMotoAsync(ByVal campaign As String, ByVal request_num As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignCampSettingSearch_DBMotoOperationCompleted Is Nothing) Then
                Me.CampaignCampSettingSearch_DBMotoOperationCompleted = AddressOf Me.OnCampaignCampSettingSearch_DBMotoOperationCompleted
            End If
            Me.InvokeAsync("CampaignCampSettingSearch_DBMoto", New Object() {campaign, request_num, ciw_db, errMsg, stackTrace}, Me.CampaignCampSettingSearch_DBMotoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignCampSettingSearch_DBMotoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignCampSettingSearch_DBMotoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignCampSettingSearch_DBMotoCompleted(Me, New CampaignCampSettingSearch_DBMotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCampTier", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCampTier(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertCampTier", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCampTierAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertCampTierAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCampTierAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertCampTierOperationCompleted Is Nothing) Then
                Me.InsertCampTierOperationCompleted = AddressOf Me.OnInsertCampTierOperationCompleted
            End If
            Me.InvokeAsync("InsertCampTier", New Object() {inTbl, errMsg, stackTrace}, Me.InsertCampTierOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCampTierOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCampTierCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCampTierCompleted(Me, New InsertCampTierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampTierMaxReqSeq", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCampTierMaxReqSeq(ByVal requestID As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("GetCampTierMaxReqSeq", New Object() {requestID, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCampTierMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCampTierMaxReqSeqAsync(requestID, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCampTierMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCampTierMaxReqSeqOperationCompleted Is Nothing) Then
                Me.GetCampTierMaxReqSeqOperationCompleted = AddressOf Me.OnGetCampTierMaxReqSeqOperationCompleted
            End If
            Me.InvokeAsync("GetCampTierMaxReqSeq", New Object() {requestID, errMsg, stackTrace}, Me.GetCampTierMaxReqSeqOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCampTierMaxReqSeqOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampTierMaxReqSeqCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampTierMaxReqSeqCompleted(Me, New GetCampTierMaxReqSeqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignTierSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignTierSearch(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignTierSearch", New Object() {setupID, requestID, status, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignTierSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignTierSearchAsync(setupID, requestID, status, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignTierSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignTierSearchOperationCompleted Is Nothing) Then
                Me.CampaignTierSearchOperationCompleted = AddressOf Me.OnCampaignTierSearchOperationCompleted
            End If
            Me.InvokeAsync("CampaignTierSearch", New Object() {setupID, requestID, status, errMsg, stackTrace}, Me.CampaignTierSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignTierSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignTierSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignTierSearchCompleted(Me, New CampaignTierSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelCampaignTier", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DelCampaignTier(ByVal setupIDList() As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DelCampaignTier", New Object() {setupIDList, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DelCampaignTierAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DelCampaignTierAsync(setupIDList, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DelCampaignTierAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DelCampaignTierOperationCompleted Is Nothing) Then
                Me.DelCampaignTierOperationCompleted = AddressOf Me.OnDelCampaignTierOperationCompleted
            End If
            Me.InvokeAsync("DelCampaignTier", New Object() {setupIDList, errMsg, stackTrace}, Me.DelCampaignTierOperationCompleted, userState)
        End Sub
        
        Private Sub OnDelCampaignTierOperationCompleted(ByVal arg As Object)
            If (Not (Me.DelCampaignTierCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DelCampaignTierCompleted(Me, New DelCampaignTierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCampTier", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCampTier(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateCampTier", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCampTierAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateCampTierAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCampTierAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateCampTierOperationCompleted Is Nothing) Then
                Me.UpdateCampTierOperationCompleted = AddressOf Me.OnUpdateCampTierOperationCompleted
            End If
            Me.InvokeAsync("UpdateCampTier", New Object() {inTbl, errMsg, stackTrace}, Me.UpdateCampTierOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCampTierOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCampTierCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCampTierCompleted(Me, New UpdateCampTierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignTierSearch_DBMoto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignTierSearch_DBMoto(ByVal tier_key As String, ByVal request_num As String, ByVal ciw_db As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignTierSearch_DBMoto", New Object() {tier_key, request_num, ciw_db, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignTierSearch_DBMotoAsync(ByVal tier_key As String, ByVal request_num As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignTierSearch_DBMotoAsync(tier_key, request_num, ciw_db, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignTierSearch_DBMotoAsync(ByVal tier_key As String, ByVal request_num As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignTierSearch_DBMotoOperationCompleted Is Nothing) Then
                Me.CampaignTierSearch_DBMotoOperationCompleted = AddressOf Me.OnCampaignTierSearch_DBMotoOperationCompleted
            End If
            Me.InvokeAsync("CampaignTierSearch_DBMoto", New Object() {tier_key, request_num, ciw_db, errMsg, stackTrace}, Me.CampaignTierSearch_DBMotoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignTierSearch_DBMotoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignTierSearch_DBMotoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignTierSearch_DBMotoCompleted(Me, New CampaignTierSearch_DBMotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCampRemark", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCampRemark(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertCampRemark", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCampRemarkAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertCampRemarkAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCampRemarkAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertCampRemarkOperationCompleted Is Nothing) Then
                Me.InsertCampRemarkOperationCompleted = AddressOf Me.OnInsertCampRemarkOperationCompleted
            End If
            Me.InvokeAsync("InsertCampRemark", New Object() {inTbl, errMsg, stackTrace}, Me.InsertCampRemarkOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCampRemarkOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCampRemarkCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCampRemarkCompleted(Me, New InsertCampRemarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampRemarkMaxReqSeq", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCampRemarkMaxReqSeq(ByVal requestID As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("GetCampRemarkMaxReqSeq", New Object() {requestID, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCampRemarkMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCampRemarkMaxReqSeqAsync(requestID, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCampRemarkMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCampRemarkMaxReqSeqOperationCompleted Is Nothing) Then
                Me.GetCampRemarkMaxReqSeqOperationCompleted = AddressOf Me.OnGetCampRemarkMaxReqSeqOperationCompleted
            End If
            Me.InvokeAsync("GetCampRemarkMaxReqSeq", New Object() {requestID, errMsg, stackTrace}, Me.GetCampRemarkMaxReqSeqOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCampRemarkMaxReqSeqOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampRemarkMaxReqSeqCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampRemarkMaxReqSeqCompleted(Me, New GetCampRemarkMaxReqSeqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignRemarkSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignRemarkSearch(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignRemarkSearch", New Object() {setupID, requestID, status, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignRemarkSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignRemarkSearchAsync(setupID, requestID, status, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignRemarkSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignRemarkSearchOperationCompleted Is Nothing) Then
                Me.CampaignRemarkSearchOperationCompleted = AddressOf Me.OnCampaignRemarkSearchOperationCompleted
            End If
            Me.InvokeAsync("CampaignRemarkSearch", New Object() {setupID, requestID, status, errMsg, stackTrace}, Me.CampaignRemarkSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignRemarkSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignRemarkSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignRemarkSearchCompleted(Me, New CampaignRemarkSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelCampaignRemark", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DelCampaignRemark(ByVal setupIDList() As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DelCampaignRemark", New Object() {setupIDList, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DelCampaignRemarkAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DelCampaignRemarkAsync(setupIDList, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DelCampaignRemarkAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DelCampaignRemarkOperationCompleted Is Nothing) Then
                Me.DelCampaignRemarkOperationCompleted = AddressOf Me.OnDelCampaignRemarkOperationCompleted
            End If
            Me.InvokeAsync("DelCampaignRemark", New Object() {setupIDList, errMsg, stackTrace}, Me.DelCampaignRemarkOperationCompleted, userState)
        End Sub
        
        Private Sub OnDelCampaignRemarkOperationCompleted(ByVal arg As Object)
            If (Not (Me.DelCampaignRemarkCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DelCampaignRemarkCompleted(Me, New DelCampaignRemarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCampRemark", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCampRemark(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateCampRemark", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCampRemarkAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateCampRemarkAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCampRemarkAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateCampRemarkOperationCompleted Is Nothing) Then
                Me.UpdateCampRemarkOperationCompleted = AddressOf Me.OnUpdateCampRemarkOperationCompleted
            End If
            Me.InvokeAsync("UpdateCampRemark", New Object() {inTbl, errMsg, stackTrace}, Me.UpdateCampRemarkOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCampRemarkOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCampRemarkCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCampRemarkCompleted(Me, New UpdateCampRemarkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignRemarkSearch_DBMoto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignRemarkSearch_DBMoto(ByVal campaign As String, ByVal campaign_type As String, ByVal ciw_db As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignRemarkSearch_DBMoto", New Object() {campaign, campaign_type, ciw_db, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignRemarkSearch_DBMotoAsync(ByVal campaign As String, ByVal campaign_type As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignRemarkSearch_DBMotoAsync(campaign, campaign_type, ciw_db, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignRemarkSearch_DBMotoAsync(ByVal campaign As String, ByVal campaign_type As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignRemarkSearch_DBMotoOperationCompleted Is Nothing) Then
                Me.CampaignRemarkSearch_DBMotoOperationCompleted = AddressOf Me.OnCampaignRemarkSearch_DBMotoOperationCompleted
            End If
            Me.InvokeAsync("CampaignRemarkSearch_DBMoto", New Object() {campaign, campaign_type, ciw_db, errMsg, stackTrace}, Me.CampaignRemarkSearch_DBMotoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignRemarkSearch_DBMotoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignRemarkSearch_DBMotoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignRemarkSearch_DBMotoCompleted(Me, New CampaignRemarkSearch_DBMotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCampCampCc", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCampCampCc(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertCampCampCc", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCampCampCcAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertCampCampCcAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCampCampCcAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertCampCampCcOperationCompleted Is Nothing) Then
                Me.InsertCampCampCcOperationCompleted = AddressOf Me.OnInsertCampCampCcOperationCompleted
            End If
            Me.InvokeAsync("InsertCampCampCc", New Object() {inTbl, errMsg, stackTrace}, Me.InsertCampCampCcOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCampCampCcOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCampCampCcCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCampCampCcCompleted(Me, New InsertCampCampCcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampCampCcMaxReqSeq", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCampCampCcMaxReqSeq(ByVal requestID As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("GetCampCampCcMaxReqSeq", New Object() {requestID, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCampCampCcMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCampCampCcMaxReqSeqAsync(requestID, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCampCampCcMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCampCampCcMaxReqSeqOperationCompleted Is Nothing) Then
                Me.GetCampCampCcMaxReqSeqOperationCompleted = AddressOf Me.OnGetCampCampCcMaxReqSeqOperationCompleted
            End If
            Me.InvokeAsync("GetCampCampCcMaxReqSeq", New Object() {requestID, errMsg, stackTrace}, Me.GetCampCampCcMaxReqSeqOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCampCampCcMaxReqSeqOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampCampCcMaxReqSeqCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampCampCcMaxReqSeqCompleted(Me, New GetCampCampCcMaxReqSeqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignCampCcSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignCampCcSearch(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignCampCcSearch", New Object() {setupID, requestID, status, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignCampCcSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignCampCcSearchAsync(setupID, requestID, status, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignCampCcSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignCampCcSearchOperationCompleted Is Nothing) Then
                Me.CampaignCampCcSearchOperationCompleted = AddressOf Me.OnCampaignCampCcSearchOperationCompleted
            End If
            Me.InvokeAsync("CampaignCampCcSearch", New Object() {setupID, requestID, status, errMsg, stackTrace}, Me.CampaignCampCcSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignCampCcSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignCampCcSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignCampCcSearchCompleted(Me, New CampaignCampCcSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelCampaignCampCc", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DelCampaignCampCc(ByVal setupIDList() As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DelCampaignCampCc", New Object() {setupIDList, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DelCampaignCampCcAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DelCampaignCampCcAsync(setupIDList, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DelCampaignCampCcAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DelCampaignCampCcOperationCompleted Is Nothing) Then
                Me.DelCampaignCampCcOperationCompleted = AddressOf Me.OnDelCampaignCampCcOperationCompleted
            End If
            Me.InvokeAsync("DelCampaignCampCc", New Object() {setupIDList, errMsg, stackTrace}, Me.DelCampaignCampCcOperationCompleted, userState)
        End Sub
        
        Private Sub OnDelCampaignCampCcOperationCompleted(ByVal arg As Object)
            If (Not (Me.DelCampaignCampCcCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DelCampaignCampCcCompleted(Me, New DelCampaignCampCcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCampCampCc", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCampCampCc(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateCampCampCc", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCampCampCcAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateCampCampCcAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCampCampCcAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateCampCampCcOperationCompleted Is Nothing) Then
                Me.UpdateCampCampCcOperationCompleted = AddressOf Me.OnUpdateCampCampCcOperationCompleted
            End If
            Me.InvokeAsync("UpdateCampCampCc", New Object() {inTbl, errMsg, stackTrace}, Me.UpdateCampCampCcOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCampCampCcOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCampCampCcCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCampCampCcCompleted(Me, New UpdateCampCampCcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignCampCcSearch_DBMoto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignCampCcSearch_DBMoto(ByVal campaign As String, ByVal ciw_db As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignCampCcSearch_DBMoto", New Object() {campaign, ciw_db, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignCampCcSearch_DBMotoAsync(ByVal campaign As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignCampCcSearch_DBMotoAsync(campaign, ciw_db, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignCampCcSearch_DBMotoAsync(ByVal campaign As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignCampCcSearch_DBMotoOperationCompleted Is Nothing) Then
                Me.CampaignCampCcSearch_DBMotoOperationCompleted = AddressOf Me.OnCampaignCampCcSearch_DBMotoOperationCompleted
            End If
            Me.InvokeAsync("CampaignCampCcSearch_DBMoto", New Object() {campaign, ciw_db, errMsg, stackTrace}, Me.CampaignCampCcSearch_DBMotoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignCampCcSearch_DBMotoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignCampCcSearch_DBMotoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignCampCcSearch_DBMotoCompleted(Me, New CampaignCampCcSearch_DBMotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCampCcMast", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCampCcMast(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertCampCcMast", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCampCcMastAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertCampCcMastAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCampCcMastAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertCampCcMastOperationCompleted Is Nothing) Then
                Me.InsertCampCcMastOperationCompleted = AddressOf Me.OnInsertCampCcMastOperationCompleted
            End If
            Me.InvokeAsync("InsertCampCcMast", New Object() {inTbl, errMsg, stackTrace}, Me.InsertCampCcMastOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCampCcMastOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCampCcMastCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCampCcMastCompleted(Me, New InsertCampCcMastCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampCcMastMaxReqSeq", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCampCcMastMaxReqSeq(ByVal requestID As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("GetCampCcMastMaxReqSeq", New Object() {requestID, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCampCcMastMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCampCcMastMaxReqSeqAsync(requestID, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCampCcMastMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCampCcMastMaxReqSeqOperationCompleted Is Nothing) Then
                Me.GetCampCcMastMaxReqSeqOperationCompleted = AddressOf Me.OnGetCampCcMastMaxReqSeqOperationCompleted
            End If
            Me.InvokeAsync("GetCampCcMastMaxReqSeq", New Object() {requestID, errMsg, stackTrace}, Me.GetCampCcMastMaxReqSeqOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCampCcMastMaxReqSeqOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampCcMastMaxReqSeqCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampCcMastMaxReqSeqCompleted(Me, New GetCampCcMastMaxReqSeqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignCcMastSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignCcMastSearch(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignCcMastSearch", New Object() {setupID, requestID, status, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignCcMastSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignCcMastSearchAsync(setupID, requestID, status, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignCcMastSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignCcMastSearchOperationCompleted Is Nothing) Then
                Me.CampaignCcMastSearchOperationCompleted = AddressOf Me.OnCampaignCcMastSearchOperationCompleted
            End If
            Me.InvokeAsync("CampaignCcMastSearch", New Object() {setupID, requestID, status, errMsg, stackTrace}, Me.CampaignCcMastSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignCcMastSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignCcMastSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignCcMastSearchCompleted(Me, New CampaignCcMastSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelCampaignCcMast", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DelCampaignCcMast(ByVal setupIDList() As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DelCampaignCcMast", New Object() {setupIDList, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DelCampaignCcMastAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DelCampaignCcMastAsync(setupIDList, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DelCampaignCcMastAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DelCampaignCcMastOperationCompleted Is Nothing) Then
                Me.DelCampaignCcMastOperationCompleted = AddressOf Me.OnDelCampaignCcMastOperationCompleted
            End If
            Me.InvokeAsync("DelCampaignCcMast", New Object() {setupIDList, errMsg, stackTrace}, Me.DelCampaignCcMastOperationCompleted, userState)
        End Sub
        
        Private Sub OnDelCampaignCcMastOperationCompleted(ByVal arg As Object)
            If (Not (Me.DelCampaignCcMastCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DelCampaignCcMastCompleted(Me, New DelCampaignCcMastCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCampCcMast", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCampCcMast(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateCampCcMast", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCampCcMastAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateCampCcMastAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCampCcMastAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateCampCcMastOperationCompleted Is Nothing) Then
                Me.UpdateCampCcMastOperationCompleted = AddressOf Me.OnUpdateCampCcMastOperationCompleted
            End If
            Me.InvokeAsync("UpdateCampCcMast", New Object() {inTbl, errMsg, stackTrace}, Me.UpdateCampCcMastOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCampCcMastOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCampCcMastCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCampCcMastCompleted(Me, New UpdateCampCcMastCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignCcMastSearch_DBMoto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignCcMastSearch_DBMoto(ByVal cost_center As String, ByVal ciw_db As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignCcMastSearch_DBMoto", New Object() {cost_center, ciw_db, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignCcMastSearch_DBMotoAsync(ByVal cost_center As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignCcMastSearch_DBMotoAsync(cost_center, ciw_db, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignCcMastSearch_DBMotoAsync(ByVal cost_center As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignCcMastSearch_DBMotoOperationCompleted Is Nothing) Then
                Me.CampaignCcMastSearch_DBMotoOperationCompleted = AddressOf Me.OnCampaignCcMastSearch_DBMotoOperationCompleted
            End If
            Me.InvokeAsync("CampaignCcMastSearch_DBMoto", New Object() {cost_center, ciw_db, errMsg, stackTrace}, Me.CampaignCcMastSearch_DBMotoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignCcMastSearch_DBMotoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignCcMastSearch_DBMotoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignCcMastSearch_DBMotoCompleted(Me, New CampaignCcMastSearch_DBMotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCampRemapWord", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCampRemapWord(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertCampRemapWord", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCampRemapWordAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertCampRemapWordAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCampRemapWordAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertCampRemapWordOperationCompleted Is Nothing) Then
                Me.InsertCampRemapWordOperationCompleted = AddressOf Me.OnInsertCampRemapWordOperationCompleted
            End If
            Me.InvokeAsync("InsertCampRemapWord", New Object() {inTbl, errMsg, stackTrace}, Me.InsertCampRemapWordOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCampRemapWordOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCampRemapWordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCampRemapWordCompleted(Me, New InsertCampRemapWordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampRemapWordMaxReqSeq", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCampRemapWordMaxReqSeq(ByVal requestID As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("GetCampRemapWordMaxReqSeq", New Object() {requestID, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCampRemapWordMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCampRemapWordMaxReqSeqAsync(requestID, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCampRemapWordMaxReqSeqAsync(ByVal requestID As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCampRemapWordMaxReqSeqOperationCompleted Is Nothing) Then
                Me.GetCampRemapWordMaxReqSeqOperationCompleted = AddressOf Me.OnGetCampRemapWordMaxReqSeqOperationCompleted
            End If
            Me.InvokeAsync("GetCampRemapWordMaxReqSeq", New Object() {requestID, errMsg, stackTrace}, Me.GetCampRemapWordMaxReqSeqOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCampRemapWordMaxReqSeqOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampRemapWordMaxReqSeqCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampRemapWordMaxReqSeqCompleted(Me, New GetCampRemapWordMaxReqSeqCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignRemapWordSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignRemapWordSearch(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignRemapWordSearch", New Object() {setupID, requestID, status, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignRemapWordSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignRemapWordSearchAsync(setupID, requestID, status, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignRemapWordSearchAsync(ByVal setupID As Integer, ByVal requestID As Integer, ByVal status As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignRemapWordSearchOperationCompleted Is Nothing) Then
                Me.CampaignRemapWordSearchOperationCompleted = AddressOf Me.OnCampaignRemapWordSearchOperationCompleted
            End If
            Me.InvokeAsync("CampaignRemapWordSearch", New Object() {setupID, requestID, status, errMsg, stackTrace}, Me.CampaignRemapWordSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignRemapWordSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignRemapWordSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignRemapWordSearchCompleted(Me, New CampaignRemapWordSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelCampaignRemapWord", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DelCampaignRemapWord(ByVal setupIDList() As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DelCampaignRemapWord", New Object() {setupIDList, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DelCampaignRemapWordAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DelCampaignRemapWordAsync(setupIDList, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DelCampaignRemapWordAsync(ByVal setupIDList() As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DelCampaignRemapWordOperationCompleted Is Nothing) Then
                Me.DelCampaignRemapWordOperationCompleted = AddressOf Me.OnDelCampaignRemapWordOperationCompleted
            End If
            Me.InvokeAsync("DelCampaignRemapWord", New Object() {setupIDList, errMsg, stackTrace}, Me.DelCampaignRemapWordOperationCompleted, userState)
        End Sub
        
        Private Sub OnDelCampaignRemapWordOperationCompleted(ByVal arg As Object)
            If (Not (Me.DelCampaignRemapWordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DelCampaignRemapWordCompleted(Me, New DelCampaignRemapWordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCampRemapWord", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCampRemapWord(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateCampRemapWord", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCampRemapWordAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateCampRemapWordAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCampRemapWordAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateCampRemapWordOperationCompleted Is Nothing) Then
                Me.UpdateCampRemapWordOperationCompleted = AddressOf Me.OnUpdateCampRemapWordOperationCompleted
            End If
            Me.InvokeAsync("UpdateCampRemapWord", New Object() {inTbl, errMsg, stackTrace}, Me.UpdateCampRemapWordOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCampRemapWordOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCampRemapWordCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCampRemapWordCompleted(Me, New UpdateCampRemapWordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignRemapWordSearch_DBMoto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignRemapWordSearch_DBMoto(ByVal cost_center As String, ByVal ciw_db As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignRemapWordSearch_DBMoto", New Object() {cost_center, ciw_db, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignRemapWordSearch_DBMotoAsync(ByVal cost_center As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignRemapWordSearch_DBMotoAsync(cost_center, ciw_db, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignRemapWordSearch_DBMotoAsync(ByVal cost_center As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignRemapWordSearch_DBMotoOperationCompleted Is Nothing) Then
                Me.CampaignRemapWordSearch_DBMotoOperationCompleted = AddressOf Me.OnCampaignRemapWordSearch_DBMotoOperationCompleted
            End If
            Me.InvokeAsync("CampaignRemapWordSearch_DBMoto", New Object() {cost_center, ciw_db, errMsg, stackTrace}, Me.CampaignRemapWordSearch_DBMotoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignRemapWordSearch_DBMotoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignRemapWordSearch_DBMotoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignRemapWordSearch_DBMotoCompleted(Me, New CampaignRemapWordSearch_DBMotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampaignSetupComment", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCampaignSetupComment(ByVal requestID As Integer, ByVal isLatest As Boolean, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetCampaignSetupComment", New Object() {requestID, isLatest, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCampaignSetupCommentAsync(ByVal requestID As Integer, ByVal isLatest As Boolean, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCampaignSetupCommentAsync(requestID, isLatest, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCampaignSetupCommentAsync(ByVal requestID As Integer, ByVal isLatest As Boolean, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCampaignSetupCommentOperationCompleted Is Nothing) Then
                Me.GetCampaignSetupCommentOperationCompleted = AddressOf Me.OnGetCampaignSetupCommentOperationCompleted
            End If
            Me.InvokeAsync("GetCampaignSetupComment", New Object() {requestID, isLatest, errMsg, stackTrace}, Me.GetCampaignSetupCommentOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCampaignSetupCommentOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampaignSetupCommentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampaignSetupCommentCompleted(Me, New GetCampaignSetupCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCampaignSetupComment", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCampaignSetupComment(ByVal request_id As Integer, ByVal detail As String, ByVal create_user As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertCampaignSetupComment", New Object() {request_id, detail, create_user, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCampaignSetupCommentAsync(ByVal request_id As Integer, ByVal detail As String, ByVal create_user As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertCampaignSetupCommentAsync(request_id, detail, create_user, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCampaignSetupCommentAsync(ByVal request_id As Integer, ByVal detail As String, ByVal create_user As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertCampaignSetupCommentOperationCompleted Is Nothing) Then
                Me.InsertCampaignSetupCommentOperationCompleted = AddressOf Me.OnInsertCampaignSetupCommentOperationCompleted
            End If
            Me.InvokeAsync("InsertCampaignSetupComment", New Object() {request_id, detail, create_user, errMsg, stackTrace}, Me.InsertCampaignSetupCommentOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCampaignSetupCommentOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCampaignSetupCommentCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCampaignSetupCommentCompleted(Me, New InsertCampaignSetupCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCampSetupMast", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCampSetupMast(ByVal request_id As Integer, ByVal updJson As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateCampSetupMast", New Object() {request_id, updJson, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCampSetupMastAsync(ByVal request_id As Integer, ByVal updJson As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateCampSetupMastAsync(request_id, updJson, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCampSetupMastAsync(ByVal request_id As Integer, ByVal updJson As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateCampSetupMastOperationCompleted Is Nothing) Then
                Me.UpdateCampSetupMastOperationCompleted = AddressOf Me.OnUpdateCampSetupMastOperationCompleted
            End If
            Me.InvokeAsync("UpdateCampSetupMast", New Object() {request_id, updJson, errMsg, stackTrace}, Me.UpdateCampSetupMastOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCampSetupMastOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCampSetupMastCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCampSetupMastCompleted(Me, New UpdateCampSetupMastCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCampStatusByUI", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCampStatusByUI(ByVal ui_name As String, ByVal request_id As Integer, ByVal setup_id As Integer, ByVal status As String, ByVal create_user As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateCampStatusByUI", New Object() {ui_name, request_id, setup_id, status, create_user, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCampStatusByUIAsync(ByVal ui_name As String, ByVal request_id As Integer, ByVal setup_id As Integer, ByVal status As String, ByVal create_user As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateCampStatusByUIAsync(ui_name, request_id, setup_id, status, create_user, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCampStatusByUIAsync(ByVal ui_name As String, ByVal request_id As Integer, ByVal setup_id As Integer, ByVal status As String, ByVal create_user As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateCampStatusByUIOperationCompleted Is Nothing) Then
                Me.UpdateCampStatusByUIOperationCompleted = AddressOf Me.OnUpdateCampStatusByUIOperationCompleted
            End If
            Me.InvokeAsync("UpdateCampStatusByUI", New Object() {ui_name, request_id, setup_id, status, create_user, errMsg, stackTrace}, Me.UpdateCampStatusByUIOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCampStatusByUIOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCampStatusByUICompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCampStatusByUICompleted(Me, New UpdateCampStatusByUICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCampSetupLog", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCampSetupLog(ByVal request_id As Integer, ByVal setup_id As Integer, ByVal ui_name As String, ByVal message As String, ByVal create_user As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertCampSetupLog", New Object() {request_id, setup_id, ui_name, message, create_user, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCampSetupLogAsync(ByVal request_id As Integer, ByVal setup_id As Integer, ByVal ui_name As String, ByVal message As String, ByVal create_user As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertCampSetupLogAsync(request_id, setup_id, ui_name, message, create_user, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCampSetupLogAsync(ByVal request_id As Integer, ByVal setup_id As Integer, ByVal ui_name As String, ByVal message As String, ByVal create_user As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertCampSetupLogOperationCompleted Is Nothing) Then
                Me.InsertCampSetupLogOperationCompleted = AddressOf Me.OnInsertCampSetupLogOperationCompleted
            End If
            Me.InvokeAsync("InsertCampSetupLog", New Object() {request_id, setup_id, ui_name, message, create_user, errMsg, stackTrace}, Me.InsertCampSetupLogOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCampSetupLogOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCampSetupLogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCampSetupLogCompleted(Me, New InsertCampSetupLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignSetupLogSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignSetupLogSearch(ByVal request_id As Integer, ByVal from_DT As Date, ByVal to_DT As Date, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignSetupLogSearch", New Object() {request_id, from_DT, to_DT, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignSetupLogSearchAsync(ByVal request_id As Integer, ByVal from_DT As Date, ByVal to_DT As Date, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignSetupLogSearchAsync(request_id, from_DT, to_DT, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignSetupLogSearchAsync(ByVal request_id As Integer, ByVal from_DT As Date, ByVal to_DT As Date, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignSetupLogSearchOperationCompleted Is Nothing) Then
                Me.CampaignSetupLogSearchOperationCompleted = AddressOf Me.OnCampaignSetupLogSearchOperationCompleted
            End If
            Me.InvokeAsync("CampaignSetupLogSearch", New Object() {request_id, from_DT, to_DT, errMsg, stackTrace}, Me.CampaignSetupLogSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignSetupLogSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignSetupLogSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignSetupLogSearchCompleted(Me, New CampaignSetupLogSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/TEST", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function TEST(ByVal test1 As String, ByVal test2 As String, ByRef errMsg As String, ByRef stackTrace As String) As String
            Dim results() As Object = Me.Invoke("TEST", New Object() {test1, test2, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TESTAsync(ByVal test1 As String, ByVal test2 As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.TESTAsync(test1, test2, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TESTAsync(ByVal test1 As String, ByVal test2 As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.TESTOperationCompleted Is Nothing) Then
                Me.TESTOperationCompleted = AddressOf Me.OnTESTOperationCompleted
            End If
            Me.InvokeAsync("TEST", New Object() {test1, test2, errMsg, stackTrace}, Me.TESTOperationCompleted, userState)
        End Sub
        
        Private Sub OnTESTOperationCompleted(ByVal arg As Object)
            If (Not (Me.TESTCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TESTCompleted(Me, New TESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCCMS_Codetable", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCCMS_Codetable(ByVal app_id As String, ByVal codetype As String, ByVal code As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetCCMS_Codetable", New Object() {app_id, codetype, code, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCCMS_CodetableAsync(ByVal app_id As String, ByVal codetype As String, ByVal code As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCCMS_CodetableAsync(app_id, codetype, code, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCCMS_CodetableAsync(ByVal app_id As String, ByVal codetype As String, ByVal code As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCCMS_CodetableOperationCompleted Is Nothing) Then
                Me.GetCCMS_CodetableOperationCompleted = AddressOf Me.OnGetCCMS_CodetableOperationCompleted
            End If
            Me.InvokeAsync("GetCCMS_Codetable", New Object() {app_id, codetype, code, errMsg, stackTrace}, Me.GetCCMS_CodetableOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCCMS_CodetableOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCCMS_CodetableCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCCMS_CodetableCompleted(Me, New GetCCMS_CodetableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrintLetterRequestByProgIdAndPrintStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPrintLetterRequestByProgIdAndPrintStatus(ByVal prog_key As String, ByVal ltr_print_status As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetPrintLetterRequestByProgIdAndPrintStatus", New Object() {prog_key, ltr_print_status, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPrintLetterRequestByProgIdAndPrintStatusAsync(ByVal prog_key As String, ByVal ltr_print_status As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetPrintLetterRequestByProgIdAndPrintStatusAsync(prog_key, ltr_print_status, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPrintLetterRequestByProgIdAndPrintStatusAsync(ByVal prog_key As String, ByVal ltr_print_status As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetPrintLetterRequestByProgIdAndPrintStatusOperationCompleted Is Nothing) Then
                Me.GetPrintLetterRequestByProgIdAndPrintStatusOperationCompleted = AddressOf Me.OnGetPrintLetterRequestByProgIdAndPrintStatusOperationCompleted
            End If
            Me.InvokeAsync("GetPrintLetterRequestByProgIdAndPrintStatus", New Object() {prog_key, ltr_print_status, errMsg, stackTrace}, Me.GetPrintLetterRequestByProgIdAndPrintStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPrintLetterRequestByProgIdAndPrintStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPrintLetterRequestByProgIdAndPrintStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPrintLetterRequestByProgIdAndPrintStatusCompleted(Me, New GetPrintLetterRequestByProgIdAndPrintStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePosTransQueuePrintStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdatePosTransQueuePrintStatus(ByVal posTQId As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdatePosTransQueuePrintStatus", New Object() {posTQId, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdatePosTransQueuePrintStatusAsync(ByVal posTQId As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdatePosTransQueuePrintStatusAsync(posTQId, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdatePosTransQueuePrintStatusAsync(ByVal posTQId As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdatePosTransQueuePrintStatusOperationCompleted Is Nothing) Then
                Me.UpdatePosTransQueuePrintStatusOperationCompleted = AddressOf Me.OnUpdatePosTransQueuePrintStatusOperationCompleted
            End If
            Me.InvokeAsync("UpdatePosTransQueuePrintStatus", New Object() {posTQId, errMsg, stackTrace}, Me.UpdatePosTransQueuePrintStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdatePosTransQueuePrintStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdatePosTransQueuePrintStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdatePosTransQueuePrintStatusCompleted(Me, New UpdatePosTransQueuePrintStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePosTransQueueLetterCompleted", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdatePosTransQueueLetterCompleted(ByVal transType As String, ByVal posTQId As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdatePosTransQueueLetterCompleted", New Object() {transType, posTQId, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdatePosTransQueueLetterCompletedAsync(ByVal transType As String, ByVal posTQId As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdatePosTransQueueLetterCompletedAsync(transType, posTQId, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdatePosTransQueueLetterCompletedAsync(ByVal transType As String, ByVal posTQId As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdatePosTransQueueLetterCompletedOperationCompleted Is Nothing) Then
                Me.UpdatePosTransQueueLetterCompletedOperationCompleted = AddressOf Me.OnUpdatePosTransQueueLetterCompletedOperationCompleted
            End If
            Me.InvokeAsync("UpdatePosTransQueueLetterCompleted", New Object() {transType, posTQId, errMsg, stackTrace}, Me.UpdatePosTransQueueLetterCompletedOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdatePosTransQueueLetterCompletedOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdatePosTransQueueLetterCompletedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdatePosTransQueueLetterCompletedCompleted(Me, New UpdatePosTransQueueLetterCompletedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateCswTransHeaderCompleted", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateCswTransHeaderCompleted(ByVal transType As String, ByVal refId As Integer, ByVal userId As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateCswTransHeaderCompleted", New Object() {transType, refId, userId, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateCswTransHeaderCompletedAsync(ByVal transType As String, ByVal refId As Integer, ByVal userId As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateCswTransHeaderCompletedAsync(transType, refId, userId, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateCswTransHeaderCompletedAsync(ByVal transType As String, ByVal refId As Integer, ByVal userId As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateCswTransHeaderCompletedOperationCompleted Is Nothing) Then
                Me.UpdateCswTransHeaderCompletedOperationCompleted = AddressOf Me.OnUpdateCswTransHeaderCompletedOperationCompleted
            End If
            Me.InvokeAsync("UpdateCswTransHeaderCompleted", New Object() {transType, refId, userId, errMsg, stackTrace}, Me.UpdateCswTransHeaderCompletedOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateCswTransHeaderCompletedOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateCswTransHeaderCompletedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateCswTransHeaderCompletedCompleted(Me, New UpdateCswTransHeaderCompletedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLetterMailMergeRelation", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLetterMailMergeRelation(ByVal ltr_code As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetLetterMailMergeRelation", New Object() {ltr_code, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLetterMailMergeRelationAsync(ByVal ltr_code As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetLetterMailMergeRelationAsync(ltr_code, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLetterMailMergeRelationAsync(ByVal ltr_code As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetLetterMailMergeRelationOperationCompleted Is Nothing) Then
                Me.GetLetterMailMergeRelationOperationCompleted = AddressOf Me.OnGetLetterMailMergeRelationOperationCompleted
            End If
            Me.InvokeAsync("GetLetterMailMergeRelation", New Object() {ltr_code, errMsg, stackTrace}, Me.GetLetterMailMergeRelationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLetterMailMergeRelationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLetterMailMergeRelationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLetterMailMergeRelationCompleted(Me, New GetLetterMailMergeRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLetterMailMergeChart", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLetterMailMergeChart(ByVal ltr_code As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetLetterMailMergeChart", New Object() {ltr_code, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLetterMailMergeChartAsync(ByVal ltr_code As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetLetterMailMergeChartAsync(ltr_code, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLetterMailMergeChartAsync(ByVal ltr_code As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetLetterMailMergeChartOperationCompleted Is Nothing) Then
                Me.GetLetterMailMergeChartOperationCompleted = AddressOf Me.OnGetLetterMailMergeChartOperationCompleted
            End If
            Me.InvokeAsync("GetLetterMailMergeChart", New Object() {ltr_code, errMsg, stackTrace}, Me.GetLetterMailMergeChartOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLetterMailMergeChartOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLetterMailMergeChartCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLetterMailMergeChartCompleted(Me, New GetLetterMailMergeChartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPlanNameByDesc", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPlanNameByDesc(ByVal plan_desc As String, ByVal ciwDb As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetPlanNameByDesc", New Object() {plan_desc, ciwDb, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPlanNameByDescAsync(ByVal plan_desc As String, ByVal ciwDb As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetPlanNameByDescAsync(plan_desc, ciwDb, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPlanNameByDescAsync(ByVal plan_desc As String, ByVal ciwDb As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetPlanNameByDescOperationCompleted Is Nothing) Then
                Me.GetPlanNameByDescOperationCompleted = AddressOf Me.OnGetPlanNameByDescOperationCompleted
            End If
            Me.InvokeAsync("GetPlanNameByDesc", New Object() {plan_desc, ciwDb, errMsg, stackTrace}, Me.GetPlanNameByDescOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPlanNameByDescOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPlanNameByDescCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPlanNameByDescCompleted(Me, New GetPlanNameByDescCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPlanNameByPolNo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPlanNameByPolNo(ByVal pol_no As String, ByVal companyCode As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetPlanNameByPolNo", New Object() {pol_no, companyCode, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPlanNameByPolNoAsync(ByVal pol_no As String, ByVal companyCode As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetPlanNameByPolNoAsync(pol_no, companyCode, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPlanNameByPolNoAsync(ByVal pol_no As String, ByVal companyCode As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetPlanNameByPolNoOperationCompleted Is Nothing) Then
                Me.GetPlanNameByPolNoOperationCompleted = AddressOf Me.OnGetPlanNameByPolNoOperationCompleted
            End If
            Me.InvokeAsync("GetPlanNameByPolNo", New Object() {pol_no, companyCode, errMsg, stackTrace}, Me.GetPlanNameByPolNoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPlanNameByPolNoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPlanNameByPolNoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPlanNameByPolNoCompleted(Me, New GetPlanNameByPolNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCMUpoloadTypeList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCMUpoloadTypeList(ByVal Code As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetCMUpoloadTypeList", New Object() {Code, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCMUpoloadTypeListAsync(ByVal Code As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCMUpoloadTypeListAsync(Code, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCMUpoloadTypeListAsync(ByVal Code As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCMUpoloadTypeListOperationCompleted Is Nothing) Then
                Me.GetCMUpoloadTypeListOperationCompleted = AddressOf Me.OnGetCMUpoloadTypeListOperationCompleted
            End If
            Me.InvokeAsync("GetCMUpoloadTypeList", New Object() {Code, errMsg, stackTrace}, Me.GetCMUpoloadTypeListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCMUpoloadTypeListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCMUpoloadTypeListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCMUpoloadTypeListCompleted(Me, New GetCMUpoloadTypeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNbsPolicies", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetNbsPolicies(ByVal EmployeeNumberID As String, ByVal PhFirstName As String, ByVal PhLastName As String, ByVal CmDocType As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetNbsPolicies", New Object() {EmployeeNumberID, PhFirstName, PhLastName, CmDocType, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetNbsPoliciesAsync(ByVal EmployeeNumberID As String, ByVal PhFirstName As String, ByVal PhLastName As String, ByVal CmDocType As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetNbsPoliciesAsync(EmployeeNumberID, PhFirstName, PhLastName, CmDocType, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetNbsPoliciesAsync(ByVal EmployeeNumberID As String, ByVal PhFirstName As String, ByVal PhLastName As String, ByVal CmDocType As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetNbsPoliciesOperationCompleted Is Nothing) Then
                Me.GetNbsPoliciesOperationCompleted = AddressOf Me.OnGetNbsPoliciesOperationCompleted
            End If
            Me.InvokeAsync("GetNbsPolicies", New Object() {EmployeeNumberID, PhFirstName, PhLastName, CmDocType, errMsg, stackTrace}, Me.GetNbsPoliciesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetNbsPoliciesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNbsPoliciesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNbsPoliciesCompleted(Me, New GetNbsPoliciesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GenApplicationForm", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GenApplicationForm(ByVal CompanyID As String, ByVal PolicyNo As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GenApplicationForm", New Object() {CompanyID, PolicyNo})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GenApplicationFormAsync(ByVal CompanyID As String, ByVal PolicyNo As String)
            Me.GenApplicationFormAsync(CompanyID, PolicyNo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GenApplicationFormAsync(ByVal CompanyID As String, ByVal PolicyNo As String, ByVal userState As Object)
            If (Me.GenApplicationFormOperationCompleted Is Nothing) Then
                Me.GenApplicationFormOperationCompleted = AddressOf Me.OnGenApplicationFormOperationCompleted
            End If
            Me.InvokeAsync("GenApplicationForm", New Object() {CompanyID, PolicyNo}, Me.GenApplicationFormOperationCompleted, userState)
        End Sub
        
        Private Sub OnGenApplicationFormOperationCompleted(ByVal arg As Object)
            If (Not (Me.GenApplicationFormCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GenApplicationFormCompleted(Me, New GenApplicationFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FindConvertedPolInSameTrans", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function FindConvertedPolInSameTrans(ByVal polNo As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("FindConvertedPolInSameTrans", New Object() {polNo, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FindConvertedPolInSameTransAsync(ByVal polNo As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.FindConvertedPolInSameTransAsync(polNo, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FindConvertedPolInSameTransAsync(ByVal polNo As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.FindConvertedPolInSameTransOperationCompleted Is Nothing) Then
                Me.FindConvertedPolInSameTransOperationCompleted = AddressOf Me.OnFindConvertedPolInSameTransOperationCompleted
            End If
            Me.InvokeAsync("FindConvertedPolInSameTrans", New Object() {polNo, errMsg, stackTrace}, Me.FindConvertedPolInSameTransOperationCompleted, userState)
        End Sub
        
        Private Sub OnFindConvertedPolInSameTransOperationCompleted(ByVal arg As Object)
            If (Not (Me.FindConvertedPolInSameTransCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FindConvertedPolInSameTransCompleted(Me, New FindConvertedPolInSameTransCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBusinessDate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetBusinessDate(ByRef errMsg As String, ByRef stackTrace As String) As Date
            Dim results() As Object = Me.Invoke("GetBusinessDate", New Object() {errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Date)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetBusinessDateAsync(ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetBusinessDateAsync(errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBusinessDateAsync(ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetBusinessDateOperationCompleted Is Nothing) Then
                Me.GetBusinessDateOperationCompleted = AddressOf Me.OnGetBusinessDateOperationCompleted
            End If
            Me.InvokeAsync("GetBusinessDate", New Object() {errMsg, stackTrace}, Me.GetBusinessDateOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBusinessDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBusinessDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBusinessDateCompleted(Me, New GetBusinessDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignSetupApproval", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignSetupApproval(ByVal cssReqId As Integer, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("CampaignSetupApproval", New Object() {cssReqId, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignSetupApprovalAsync(ByVal cssReqId As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignSetupApprovalAsync(cssReqId, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignSetupApprovalAsync(ByVal cssReqId As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignSetupApprovalOperationCompleted Is Nothing) Then
                Me.CampaignSetupApprovalOperationCompleted = AddressOf Me.OnCampaignSetupApprovalOperationCompleted
            End If
            Me.InvokeAsync("CampaignSetupApproval", New Object() {cssReqId, errMsg, stackTrace}, Me.CampaignSetupApprovalOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignSetupApprovalOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignSetupApprovalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignSetupApprovalCompleted(Me, New CampaignSetupApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignClearSetup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignClearSetup(ByVal cssReqId As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("CampaignClearSetup", New Object() {cssReqId, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignClearSetupAsync(ByVal cssReqId As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignClearSetupAsync(cssReqId, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignClearSetupAsync(ByVal cssReqId As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignClearSetupOperationCompleted Is Nothing) Then
                Me.CampaignClearSetupOperationCompleted = AddressOf Me.OnCampaignClearSetupOperationCompleted
            End If
            Me.InvokeAsync("CampaignClearSetup", New Object() {cssReqId, errMsg, stackTrace}, Me.CampaignClearSetupOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignClearSetupOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignClearSetupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignClearSetupCompleted(Me, New CampaignClearSetupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignDefaultSetupSubmit_LifeAsia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignDefaultSetupSubmit_LifeAsia(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("CampaignDefaultSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignDefaultSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignDefaultSetupSubmit_LifeAsiaAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignDefaultSetupSubmit_LifeAsiaAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignDefaultSetupSubmit_LifeAsiaOperationCompleted Is Nothing) Then
                Me.CampaignDefaultSetupSubmit_LifeAsiaOperationCompleted = AddressOf Me.OnCampaignDefaultSetupSubmit_LifeAsiaOperationCompleted
            End If
            Me.InvokeAsync("CampaignDefaultSetupSubmit_LifeAsia", New Object() {inTbl, errMsg, stackTrace}, Me.CampaignDefaultSetupSubmit_LifeAsiaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignDefaultSetupSubmit_LifeAsiaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignDefaultSetupSubmit_LifeAsiaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignDefaultSetupSubmit_LifeAsiaCompleted(Me, New CampaignDefaultSetupSubmit_LifeAsiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function HelloWorld() As String
            Dim results() As Object = Me.Invoke("HelloWorld", New Object(-1) {})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub HelloWorldAsync()
            Me.HelloWorldAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HelloWorldAsync(ByVal userState As Object)
            If (Me.HelloWorldOperationCompleted Is Nothing) Then
                Me.HelloWorldOperationCompleted = AddressOf Me.OnHelloWorldOperationCompleted
            End If
            Me.InvokeAsync("HelloWorld", New Object(-1) {}, Me.HelloWorldOperationCompleted, userState)
        End Sub
        
        Private Sub OnHelloWorldOperationCompleted(ByVal arg As Object)
            If (Not (Me.HelloWorldCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HelloWorldCompleted(Me, New HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLetterParam", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLetterParam(ByVal letterCode As String, ByRef errMsg As String, ByRef stackTrace As String) As LetterParamBean
            Dim results() As Object = Me.Invoke("GetLetterParam", New Object() {letterCode, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),LetterParamBean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLetterParamAsync(ByVal letterCode As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetLetterParamAsync(letterCode, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLetterParamAsync(ByVal letterCode As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetLetterParamOperationCompleted Is Nothing) Then
                Me.GetLetterParamOperationCompleted = AddressOf Me.OnGetLetterParamOperationCompleted
            End If
            Me.InvokeAsync("GetLetterParam", New Object() {letterCode, errMsg, stackTrace}, Me.GetLetterParamOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLetterParamOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLetterParamCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLetterParamCompleted(Me, New GetLetterParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLetterParamFullList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLetterParamFullList(ByVal letterCode As String, ByRef errMsg As String, ByRef stackTrace As String) As LetterParamBean()
            Dim results() As Object = Me.Invoke("GetLetterParamFullList", New Object() {letterCode, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),LetterParamBean())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLetterParamFullListAsync(ByVal letterCode As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetLetterParamFullListAsync(letterCode, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLetterParamFullListAsync(ByVal letterCode As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetLetterParamFullListOperationCompleted Is Nothing) Then
                Me.GetLetterParamFullListOperationCompleted = AddressOf Me.OnGetLetterParamFullListOperationCompleted
            End If
            Me.InvokeAsync("GetLetterParamFullList", New Object() {letterCode, errMsg, stackTrace}, Me.GetLetterParamFullListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLetterParamFullListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLetterParamFullListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLetterParamFullListCompleted(Me, New GetLetterParamFullListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImageParam", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetImageParam(ByVal imageCode As String, ByRef errMsg As String, ByRef stackTrace As String) As LetterImageBean
            Dim results() As Object = Me.Invoke("GetImageParam", New Object() {imageCode, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),LetterImageBean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetImageParamAsync(ByVal imageCode As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetImageParamAsync(imageCode, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetImageParamAsync(ByVal imageCode As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetImageParamOperationCompleted Is Nothing) Then
                Me.GetImageParamOperationCompleted = AddressOf Me.OnGetImageParamOperationCompleted
            End If
            Me.InvokeAsync("GetImageParam", New Object() {imageCode, errMsg, stackTrace}, Me.GetImageParamOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetImageParamOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetImageParamCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetImageParamCompleted(Me, New GetImageParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetImageParamList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetImageParamList(ByVal strWhere As String, ByRef errMsg As String, ByRef stackTrace As String) As LetterImageBean()
            Dim results() As Object = Me.Invoke("GetImageParamList", New Object() {strWhere, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),LetterImageBean())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetImageParamListAsync(ByVal strWhere As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetImageParamListAsync(strWhere, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetImageParamListAsync(ByVal strWhere As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetImageParamListOperationCompleted Is Nothing) Then
                Me.GetImageParamListOperationCompleted = AddressOf Me.OnGetImageParamListOperationCompleted
            End If
            Me.InvokeAsync("GetImageParamList", New Object() {strWhere, errMsg, stackTrace}, Me.GetImageParamListOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetImageParamListOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetImageParamListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetImageParamListCompleted(Me, New GetImageParamListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrintFileParam", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPrintFileParam(ByVal printFileCode As String, ByRef errMsg As String, ByRef stackTrace As String) As LetterPrintFileBean()
            Dim results() As Object = Me.Invoke("GetPrintFileParam", New Object() {printFileCode, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),LetterPrintFileBean())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPrintFileParamAsync(ByVal printFileCode As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetPrintFileParamAsync(printFileCode, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPrintFileParamAsync(ByVal printFileCode As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetPrintFileParamOperationCompleted Is Nothing) Then
                Me.GetPrintFileParamOperationCompleted = AddressOf Me.OnGetPrintFileParamOperationCompleted
            End If
            Me.InvokeAsync("GetPrintFileParam", New Object() {printFileCode, errMsg, stackTrace}, Me.GetPrintFileParamOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPrintFileParamOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPrintFileParamCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPrintFileParamCompleted(Me, New GetPrintFileParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrintSetParam", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPrintSetParam(ByVal printSetCode As String, ByRef errMsg As String, ByRef stackTrace As String) As LetterPrintSetBean()
            Dim results() As Object = Me.Invoke("GetPrintSetParam", New Object() {printSetCode, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),LetterPrintSetBean())
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPrintSetParamAsync(ByVal printSetCode As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetPrintSetParamAsync(printSetCode, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPrintSetParamAsync(ByVal printSetCode As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetPrintSetParamOperationCompleted Is Nothing) Then
                Me.GetPrintSetParamOperationCompleted = AddressOf Me.OnGetPrintSetParamOperationCompleted
            End If
            Me.InvokeAsync("GetPrintSetParam", New Object() {printSetCode, errMsg, stackTrace}, Me.GetPrintSetParamOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPrintSetParamOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPrintSetParamCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPrintSetParamCompleted(Me, New GetPrintSetParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateBatch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CreateBatch(ByVal sysID As String, ByVal batchDate As Date, ByVal procDate As Date, ByVal status As String, ByVal createUsr As String, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("CreateBatch", New Object() {sysID, batchDate, procDate, status, createUsr, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CreateBatchAsync(ByVal sysID As String, ByVal batchDate As Date, ByVal procDate As Date, ByVal status As String, ByVal createUsr As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CreateBatchAsync(sysID, batchDate, procDate, status, createUsr, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CreateBatchAsync(ByVal sysID As String, ByVal batchDate As Date, ByVal procDate As Date, ByVal status As String, ByVal createUsr As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CreateBatchOperationCompleted Is Nothing) Then
                Me.CreateBatchOperationCompleted = AddressOf Me.OnCreateBatchOperationCompleted
            End If
            Me.InvokeAsync("CreateBatch", New Object() {sysID, batchDate, procDate, status, createUsr, errMsg, stackTrace}, Me.CreateBatchOperationCompleted, userState)
        End Sub
        
        Private Sub OnCreateBatchOperationCompleted(ByVal arg As Object)
            If (Not (Me.CreateBatchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CreateBatchCompleted(Me, New CreateBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateBatchStatus", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateBatchStatus(ByVal batchId As Integer, ByVal status As String, ByVal updateUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("UpdateBatchStatus", New Object() {batchId, status, updateUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateBatchStatusAsync(ByVal batchId As Integer, ByVal status As String, ByVal updateUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateBatchStatusAsync(batchId, status, updateUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateBatchStatusAsync(ByVal batchId As Integer, ByVal status As String, ByVal updateUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateBatchStatusOperationCompleted Is Nothing) Then
                Me.UpdateBatchStatusOperationCompleted = AddressOf Me.OnUpdateBatchStatusOperationCompleted
            End If
            Me.InvokeAsync("UpdateBatchStatus", New Object() {batchId, status, updateUser, errMsg, stackTrace}, Me.UpdateBatchStatusOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateBatchStatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateBatchStatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateBatchStatusCompleted(Me, New UpdateBatchStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertBatchDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertBatchDetail(ByVal batchId As Integer, ByVal ltrReqId As Integer, ByVal createUsr As String, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("InsertBatchDetail", New Object() {batchId, ltrReqId, createUsr, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertBatchDetailAsync(ByVal batchId As Integer, ByVal ltrReqId As Integer, ByVal createUsr As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertBatchDetailAsync(batchId, ltrReqId, createUsr, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertBatchDetailAsync(ByVal batchId As Integer, ByVal ltrReqId As Integer, ByVal createUsr As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertBatchDetailOperationCompleted Is Nothing) Then
                Me.InsertBatchDetailOperationCompleted = AddressOf Me.OnInsertBatchDetailOperationCompleted
            End If
            Me.InvokeAsync("InsertBatchDetail", New Object() {batchId, ltrReqId, createUsr, errMsg, stackTrace}, Me.InsertBatchDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertBatchDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertBatchDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertBatchDetailCompleted(Me, New InsertBatchDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLtrBatchId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLtrBatchId(ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("GetLtrBatchId", New Object() {errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLtrBatchIdAsync(ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetLtrBatchIdAsync(errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLtrBatchIdAsync(ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetLtrBatchIdOperationCompleted Is Nothing) Then
                Me.GetLtrBatchIdOperationCompleted = AddressOf Me.OnGetLtrBatchIdOperationCompleted
            End If
            Me.InvokeAsync("GetLtrBatchId", New Object() {errMsg, stackTrace}, Me.GetLtrBatchIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLtrBatchIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLtrBatchIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLtrBatchIdCompleted(Me, New GetLtrBatchIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertLetterDataDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertLetterDataDetail(ByVal ltrCode As String, ByVal ltrBatchid As Integer, ByVal pol_no As String, ByVal batch_seq As Integer, ByVal field_seq As Integer, ByVal field_name As String, ByVal field_value As String, ByVal create_user As String, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("InsertLetterDataDetail", New Object() {ltrCode, ltrBatchid, pol_no, batch_seq, field_seq, field_name, field_value, create_user, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertLetterDataDetailAsync(ByVal ltrCode As String, ByVal ltrBatchid As Integer, ByVal pol_no As String, ByVal batch_seq As Integer, ByVal field_seq As Integer, ByVal field_name As String, ByVal field_value As String, ByVal create_user As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertLetterDataDetailAsync(ltrCode, ltrBatchid, pol_no, batch_seq, field_seq, field_name, field_value, create_user, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertLetterDataDetailAsync(ByVal ltrCode As String, ByVal ltrBatchid As Integer, ByVal pol_no As String, ByVal batch_seq As Integer, ByVal field_seq As Integer, ByVal field_name As String, ByVal field_value As String, ByVal create_user As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertLetterDataDetailOperationCompleted Is Nothing) Then
                Me.InsertLetterDataDetailOperationCompleted = AddressOf Me.OnInsertLetterDataDetailOperationCompleted
            End If
            Me.InvokeAsync("InsertLetterDataDetail", New Object() {ltrCode, ltrBatchid, pol_no, batch_seq, field_seq, field_name, field_value, create_user, errMsg, stackTrace}, Me.InsertLetterDataDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertLetterDataDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertLetterDataDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertLetterDataDetailCompleted(Me, New InsertLetterDataDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertBatchDataToRequestDtl", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertBatchDataToRequestDtl(ByVal dt As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertBatchDataToRequestDtl", New Object() {dt, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertBatchDataToRequestDtlAsync(ByVal dt As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertBatchDataToRequestDtlAsync(dt, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertBatchDataToRequestDtlAsync(ByVal dt As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertBatchDataToRequestDtlOperationCompleted Is Nothing) Then
                Me.InsertBatchDataToRequestDtlOperationCompleted = AddressOf Me.OnInsertBatchDataToRequestDtlOperationCompleted
            End If
            Me.InvokeAsync("InsertBatchDataToRequestDtl", New Object() {dt, errMsg, stackTrace}, Me.InsertBatchDataToRequestDtlOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertBatchDataToRequestDtlOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertBatchDataToRequestDtlCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertBatchDataToRequestDtlCompleted(Me, New InsertBatchDataToRequestDtlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLtrRequestId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLtrRequestId(ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("GetLtrRequestId", New Object() {errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLtrRequestIdAsync(ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetLtrRequestIdAsync(errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLtrRequestIdAsync(ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetLtrRequestIdOperationCompleted Is Nothing) Then
                Me.GetLtrRequestIdOperationCompleted = AddressOf Me.OnGetLtrRequestIdOperationCompleted
            End If
            Me.InvokeAsync("GetLtrRequestId", New Object() {errMsg, stackTrace}, Me.GetLtrRequestIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLtrRequestIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLtrRequestIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLtrRequestIdCompleted(Me, New GetLtrRequestIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertLetterRequest", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertLetterRequest( _
                    ByVal systemId As String,  _
                    ByVal ltrRequestId As Integer,  _
                    ByVal ltrCode As String,  _
                    ByVal ltrBatchId As Integer,  _
                    ByVal polNo As String,  _
                    ByVal ltrPrintMode As String,  _
                    ByVal ltrPrintStatus As String,  _
                    ByVal ltrUploadStatus As String,  _
                    ByVal ltrReprintRequestId As Integer,  _
                    ByVal ltrPrintqueue As String,  _
                    ByVal ltrWatermark As String,  _
                    ByVal ltrFilename As String,  _
                    ByVal ltrRemark As String,  _
                    ByVal createUser As String,  _
                    ByVal ltrTransType As String,  _
                    ByVal ltrTransId As Integer,  _
                    ByVal ltrEnv As String,  _
                    ByVal ltrCountry As String,  _
                    ByRef errMsg As String,  _
                    ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("InsertLetterRequest", New Object() {systemId, ltrRequestId, ltrCode, ltrBatchId, polNo, ltrPrintMode, ltrPrintStatus, ltrUploadStatus, ltrReprintRequestId, ltrPrintqueue, ltrWatermark, ltrFilename, ltrRemark, createUser, ltrTransType, ltrTransId, ltrEnv, ltrCountry, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertLetterRequestAsync( _
                    ByVal systemId As String,  _
                    ByVal ltrRequestId As Integer,  _
                    ByVal ltrCode As String,  _
                    ByVal ltrBatchId As Integer,  _
                    ByVal polNo As String,  _
                    ByVal ltrPrintMode As String,  _
                    ByVal ltrPrintStatus As String,  _
                    ByVal ltrUploadStatus As String,  _
                    ByVal ltrReprintRequestId As Integer,  _
                    ByVal ltrPrintqueue As String,  _
                    ByVal ltrWatermark As String,  _
                    ByVal ltrFilename As String,  _
                    ByVal ltrRemark As String,  _
                    ByVal createUser As String,  _
                    ByVal ltrTransType As String,  _
                    ByVal ltrTransId As Integer,  _
                    ByVal ltrEnv As String,  _
                    ByVal ltrCountry As String,  _
                    ByVal errMsg As String,  _
                    ByVal stackTrace As String)
            Me.InsertLetterRequestAsync(systemId, ltrRequestId, ltrCode, ltrBatchId, polNo, ltrPrintMode, ltrPrintStatus, ltrUploadStatus, ltrReprintRequestId, ltrPrintqueue, ltrWatermark, ltrFilename, ltrRemark, createUser, ltrTransType, ltrTransId, ltrEnv, ltrCountry, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertLetterRequestAsync( _
                    ByVal systemId As String,  _
                    ByVal ltrRequestId As Integer,  _
                    ByVal ltrCode As String,  _
                    ByVal ltrBatchId As Integer,  _
                    ByVal polNo As String,  _
                    ByVal ltrPrintMode As String,  _
                    ByVal ltrPrintStatus As String,  _
                    ByVal ltrUploadStatus As String,  _
                    ByVal ltrReprintRequestId As Integer,  _
                    ByVal ltrPrintqueue As String,  _
                    ByVal ltrWatermark As String,  _
                    ByVal ltrFilename As String,  _
                    ByVal ltrRemark As String,  _
                    ByVal createUser As String,  _
                    ByVal ltrTransType As String,  _
                    ByVal ltrTransId As Integer,  _
                    ByVal ltrEnv As String,  _
                    ByVal ltrCountry As String,  _
                    ByVal errMsg As String,  _
                    ByVal stackTrace As String,  _
                    ByVal userState As Object)
            If (Me.InsertLetterRequestOperationCompleted Is Nothing) Then
                Me.InsertLetterRequestOperationCompleted = AddressOf Me.OnInsertLetterRequestOperationCompleted
            End If
            Me.InvokeAsync("InsertLetterRequest", New Object() {systemId, ltrRequestId, ltrCode, ltrBatchId, polNo, ltrPrintMode, ltrPrintStatus, ltrUploadStatus, ltrReprintRequestId, ltrPrintqueue, ltrWatermark, ltrFilename, ltrRemark, createUser, ltrTransType, ltrTransId, ltrEnv, ltrCountry, errMsg, stackTrace}, Me.InsertLetterRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertLetterRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertLetterRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertLetterRequestCompleted(Me, New InsertLetterRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertLtrRequest", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertLtrRequest( _
                    ByVal systemId As String,  _
                    ByVal ltrRequestId As Integer,  _
                    ByVal ltrCode As String,  _
                    ByVal ltrBatchId As Integer,  _
                    ByVal polNo As String,  _
                    ByVal ltrPrintMode As String,  _
                    ByVal ltrPrintStatus As String,  _
                    ByVal ltrUploadStatus As String,  _
                    ByVal ltrReprintRequestId As Integer,  _
                    ByVal ltrPrintqueue As String,  _
                    ByVal ltrWatermark As String,  _
                    ByVal ltrFilename As String,  _
                    ByVal ltrRemark As String,  _
                    ByVal createUser As String,  _
                    ByVal ltrTransType As String,  _
                    ByVal ltrTransId As Integer,  _
                    ByVal ltrEnv As String,  _
                    ByVal ltrCountry As String,  _
                    ByVal companyCode As String,  _
                    ByRef errMsg As String,  _
                    ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("InsertLtrRequest", New Object() {systemId, ltrRequestId, ltrCode, ltrBatchId, polNo, ltrPrintMode, ltrPrintStatus, ltrUploadStatus, ltrReprintRequestId, ltrPrintqueue, ltrWatermark, ltrFilename, ltrRemark, createUser, ltrTransType, ltrTransId, ltrEnv, ltrCountry, companyCode, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertLtrRequestAsync( _
                    ByVal systemId As String,  _
                    ByVal ltrRequestId As Integer,  _
                    ByVal ltrCode As String,  _
                    ByVal ltrBatchId As Integer,  _
                    ByVal polNo As String,  _
                    ByVal ltrPrintMode As String,  _
                    ByVal ltrPrintStatus As String,  _
                    ByVal ltrUploadStatus As String,  _
                    ByVal ltrReprintRequestId As Integer,  _
                    ByVal ltrPrintqueue As String,  _
                    ByVal ltrWatermark As String,  _
                    ByVal ltrFilename As String,  _
                    ByVal ltrRemark As String,  _
                    ByVal createUser As String,  _
                    ByVal ltrTransType As String,  _
                    ByVal ltrTransId As Integer,  _
                    ByVal ltrEnv As String,  _
                    ByVal ltrCountry As String,  _
                    ByVal companyCode As String,  _
                    ByVal errMsg As String,  _
                    ByVal stackTrace As String)
            Me.InsertLtrRequestAsync(systemId, ltrRequestId, ltrCode, ltrBatchId, polNo, ltrPrintMode, ltrPrintStatus, ltrUploadStatus, ltrReprintRequestId, ltrPrintqueue, ltrWatermark, ltrFilename, ltrRemark, createUser, ltrTransType, ltrTransId, ltrEnv, ltrCountry, companyCode, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertLtrRequestAsync( _
                    ByVal systemId As String,  _
                    ByVal ltrRequestId As Integer,  _
                    ByVal ltrCode As String,  _
                    ByVal ltrBatchId As Integer,  _
                    ByVal polNo As String,  _
                    ByVal ltrPrintMode As String,  _
                    ByVal ltrPrintStatus As String,  _
                    ByVal ltrUploadStatus As String,  _
                    ByVal ltrReprintRequestId As Integer,  _
                    ByVal ltrPrintqueue As String,  _
                    ByVal ltrWatermark As String,  _
                    ByVal ltrFilename As String,  _
                    ByVal ltrRemark As String,  _
                    ByVal createUser As String,  _
                    ByVal ltrTransType As String,  _
                    ByVal ltrTransId As Integer,  _
                    ByVal ltrEnv As String,  _
                    ByVal ltrCountry As String,  _
                    ByVal companyCode As String,  _
                    ByVal errMsg As String,  _
                    ByVal stackTrace As String,  _
                    ByVal userState As Object)
            If (Me.InsertLtrRequestOperationCompleted Is Nothing) Then
                Me.InsertLtrRequestOperationCompleted = AddressOf Me.OnInsertLtrRequestOperationCompleted
            End If
            Me.InvokeAsync("InsertLtrRequest", New Object() {systemId, ltrRequestId, ltrCode, ltrBatchId, polNo, ltrPrintMode, ltrPrintStatus, ltrUploadStatus, ltrReprintRequestId, ltrPrintqueue, ltrWatermark, ltrFilename, ltrRemark, createUser, ltrTransType, ltrTransId, ltrEnv, ltrCountry, companyCode, errMsg, stackTrace}, Me.InsertLtrRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertLtrRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertLtrRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertLtrRequestCompleted(Me, New InsertLtrRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLtmRequest", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function UpdateLtmRequest(ByVal ltrRequesId As Integer, ByVal updJson As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("UpdateLtmRequest", New Object() {ltrRequesId, updJson, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub UpdateLtmRequestAsync(ByVal ltrRequesId As Integer, ByVal updJson As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.UpdateLtmRequestAsync(ltrRequesId, updJson, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub UpdateLtmRequestAsync(ByVal ltrRequesId As Integer, ByVal updJson As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.UpdateLtmRequestOperationCompleted Is Nothing) Then
                Me.UpdateLtmRequestOperationCompleted = AddressOf Me.OnUpdateLtmRequestOperationCompleted
            End If
            Me.InvokeAsync("UpdateLtmRequest", New Object() {ltrRequesId, updJson, errMsg, stackTrace}, Me.UpdateLtmRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnUpdateLtmRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.UpdateLtmRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UpdateLtmRequestCompleted(Me, New UpdateLtmRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserAccessRight", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserAccessRight(ByVal userId As String, ByVal sysId As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetUserAccessRight", New Object() {userId, sysId, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserAccessRightAsync(ByVal userId As String, ByVal sysId As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetUserAccessRightAsync(userId, sysId, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserAccessRightAsync(ByVal userId As String, ByVal sysId As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetUserAccessRightOperationCompleted Is Nothing) Then
                Me.GetUserAccessRightOperationCompleted = AddressOf Me.OnGetUserAccessRightOperationCompleted
            End If
            Me.InvokeAsync("GetUserAccessRight", New Object() {userId, sysId, errMsg, stackTrace}, Me.GetUserAccessRightOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserAccessRightOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserAccessRightCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserAccessRightCompleted(Me, New GetUserAccessRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLetterDetail", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLetterDetail(ByVal ltrRequestId As String, ByRef singleValDt As System.Data.DataTable, ByRef regionDataSet As System.Data.DataSet, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("GetLetterDetail", New Object() {ltrRequestId, singleValDt, regionDataSet, errMsg, stackTrace})
            singleValDt = CType(results(1),System.Data.DataTable)
            regionDataSet = CType(results(2),System.Data.DataSet)
            errMsg = CType(results(3),String)
            stackTrace = CType(results(4),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLetterDetailAsync(ByVal ltrRequestId As String, ByVal singleValDt As System.Data.DataTable, ByVal regionDataSet As System.Data.DataSet, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetLetterDetailAsync(ltrRequestId, singleValDt, regionDataSet, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLetterDetailAsync(ByVal ltrRequestId As String, ByVal singleValDt As System.Data.DataTable, ByVal regionDataSet As System.Data.DataSet, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetLetterDetailOperationCompleted Is Nothing) Then
                Me.GetLetterDetailOperationCompleted = AddressOf Me.OnGetLetterDetailOperationCompleted
            End If
            Me.InvokeAsync("GetLetterDetail", New Object() {ltrRequestId, singleValDt, regionDataSet, errMsg, stackTrace}, Me.GetLetterDetailOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLetterDetailOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLetterDetailCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLetterDetailCompleted(Me, New GetLetterDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLetterParam_UI", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLetterParam_UI(ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetLetterParam_UI", New Object() {errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLetterParam_UIAsync(ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetLetterParam_UIAsync(errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLetterParam_UIAsync(ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetLetterParam_UIOperationCompleted Is Nothing) Then
                Me.GetLetterParam_UIOperationCompleted = AddressOf Me.OnGetLetterParam_UIOperationCompleted
            End If
            Me.InvokeAsync("GetLetterParam_UI", New Object() {errMsg, stackTrace}, Me.GetLetterParam_UIOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLetterParam_UIOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLetterParam_UICompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLetterParam_UICompleted(Me, New GetLetterParam_UICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLetterParam_UI_Restricted", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLetterParam_UI_Restricted(ByVal isSysAdm As String, ByVal deptList As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetLetterParam_UI_Restricted", New Object() {isSysAdm, deptList, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLetterParam_UI_RestrictedAsync(ByVal isSysAdm As String, ByVal deptList As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetLetterParam_UI_RestrictedAsync(isSysAdm, deptList, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLetterParam_UI_RestrictedAsync(ByVal isSysAdm As String, ByVal deptList As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetLetterParam_UI_RestrictedOperationCompleted Is Nothing) Then
                Me.GetLetterParam_UI_RestrictedOperationCompleted = AddressOf Me.OnGetLetterParam_UI_RestrictedOperationCompleted
            End If
            Me.InvokeAsync("GetLetterParam_UI_Restricted", New Object() {isSysAdm, deptList, errMsg, stackTrace}, Me.GetLetterParam_UI_RestrictedOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLetterParam_UI_RestrictedOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLetterParam_UI_RestrictedCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLetterParam_UI_RestrictedCompleted(Me, New GetLetterParam_UI_RestrictedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCustomer", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCustomer(ByVal polNo As String, ByVal rel As String, ByVal ciwDb As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetCustomer", New Object() {polNo, rel, ciwDb, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCustomerAsync(ByVal polNo As String, ByVal rel As String, ByVal ciwDb As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCustomerAsync(polNo, rel, ciwDb, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCustomerAsync(ByVal polNo As String, ByVal rel As String, ByVal ciwDb As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCustomerOperationCompleted Is Nothing) Then
                Me.GetCustomerOperationCompleted = AddressOf Me.OnGetCustomerOperationCompleted
            End If
            Me.InvokeAsync("GetCustomer", New Object() {polNo, rel, ciwDb, errMsg, stackTrace}, Me.GetCustomerOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCustomerOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCustomerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCustomerCompleted(Me, New GetCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchLetter_UI", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SearchLetter_UI(ByVal ltrCode As String, ByVal polNo As String, ByVal ltrRequestdateFrom As String, ByVal ltrRequestdateTo As String, ByVal ltrPrintdateFrom As String, ByVal ltrPrintdateTo As String, ByVal userID As String, ByVal ltrDept As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("SearchLetter_UI", New Object() {ltrCode, polNo, ltrRequestdateFrom, ltrRequestdateTo, ltrPrintdateFrom, ltrPrintdateTo, userID, ltrDept, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SearchLetter_UIAsync(ByVal ltrCode As String, ByVal polNo As String, ByVal ltrRequestdateFrom As String, ByVal ltrRequestdateTo As String, ByVal ltrPrintdateFrom As String, ByVal ltrPrintdateTo As String, ByVal userID As String, ByVal ltrDept As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.SearchLetter_UIAsync(ltrCode, polNo, ltrRequestdateFrom, ltrRequestdateTo, ltrPrintdateFrom, ltrPrintdateTo, userID, ltrDept, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchLetter_UIAsync(ByVal ltrCode As String, ByVal polNo As String, ByVal ltrRequestdateFrom As String, ByVal ltrRequestdateTo As String, ByVal ltrPrintdateFrom As String, ByVal ltrPrintdateTo As String, ByVal userID As String, ByVal ltrDept As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.SearchLetter_UIOperationCompleted Is Nothing) Then
                Me.SearchLetter_UIOperationCompleted = AddressOf Me.OnSearchLetter_UIOperationCompleted
            End If
            Me.InvokeAsync("SearchLetter_UI", New Object() {ltrCode, polNo, ltrRequestdateFrom, ltrRequestdateTo, ltrPrintdateFrom, ltrPrintdateTo, userID, ltrDept, errMsg, stackTrace}, Me.SearchLetter_UIOperationCompleted, userState)
        End Sub
        
        Private Sub OnSearchLetter_UIOperationCompleted(ByVal arg As Object)
            If (Not (Me.SearchLetter_UICompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SearchLetter_UICompleted(Me, New SearchLetter_UICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrintStatusCodes", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPrintStatusCodes(ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetPrintStatusCodes", New Object() {errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPrintStatusCodesAsync(ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetPrintStatusCodesAsync(errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPrintStatusCodesAsync(ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetPrintStatusCodesOperationCompleted Is Nothing) Then
                Me.GetPrintStatusCodesOperationCompleted = AddressOf Me.OnGetPrintStatusCodesOperationCompleted
            End If
            Me.InvokeAsync("GetPrintStatusCodes", New Object() {errMsg, stackTrace}, Me.GetPrintStatusCodesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPrintStatusCodesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPrintStatusCodesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPrintStatusCodesCompleted(Me, New GetPrintStatusCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLetterRequestSummary", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLetterRequestSummary(ByVal ltrRequestId As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetLetterRequestSummary", New Object() {ltrRequestId, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLetterRequestSummaryAsync(ByVal ltrRequestId As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetLetterRequestSummaryAsync(ltrRequestId, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLetterRequestSummaryAsync(ByVal ltrRequestId As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetLetterRequestSummaryOperationCompleted Is Nothing) Then
                Me.GetLetterRequestSummaryOperationCompleted = AddressOf Me.OnGetLetterRequestSummaryOperationCompleted
            End If
            Me.InvokeAsync("GetLetterRequestSummary", New Object() {ltrRequestId, errMsg, stackTrace}, Me.GetLetterRequestSummaryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLetterRequestSummaryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLetterRequestSummaryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLetterRequestSummaryCompleted(Me, New GetLetterRequestSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertUserEditLetterData", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertUserEditLetterData(ByVal ltrCode As String, ByVal ltrBatchid As Integer, ByVal version As Integer, ByVal polNo As String, ByVal batchSeq As Integer, ByVal fieldSeq As Integer, ByVal fieldName As String, ByVal fieldValue As String, ByVal createUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("InsertUserEditLetterData", New Object() {ltrCode, ltrBatchid, version, polNo, batchSeq, fieldSeq, fieldName, fieldValue, createUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertUserEditLetterDataAsync(ByVal ltrCode As String, ByVal ltrBatchid As Integer, ByVal version As Integer, ByVal polNo As String, ByVal batchSeq As Integer, ByVal fieldSeq As Integer, ByVal fieldName As String, ByVal fieldValue As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertUserEditLetterDataAsync(ltrCode, ltrBatchid, version, polNo, batchSeq, fieldSeq, fieldName, fieldValue, createUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertUserEditLetterDataAsync(ByVal ltrCode As String, ByVal ltrBatchid As Integer, ByVal version As Integer, ByVal polNo As String, ByVal batchSeq As Integer, ByVal fieldSeq As Integer, ByVal fieldName As String, ByVal fieldValue As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertUserEditLetterDataOperationCompleted Is Nothing) Then
                Me.InsertUserEditLetterDataOperationCompleted = AddressOf Me.OnInsertUserEditLetterDataOperationCompleted
            End If
            Me.InvokeAsync("InsertUserEditLetterData", New Object() {ltrCode, ltrBatchid, version, polNo, batchSeq, fieldSeq, fieldName, fieldValue, createUser, errMsg, stackTrace}, Me.InsertUserEditLetterDataOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertUserEditLetterDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertUserEditLetterDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertUserEditLetterDataCompleted(Me, New InsertUserEditLetterDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserEditVer", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserEditVer(ByVal ltrReqId As Integer, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("GetUserEditVer", New Object() {ltrReqId, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserEditVerAsync(ByVal ltrReqId As Integer, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetUserEditVerAsync(ltrReqId, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserEditVerAsync(ByVal ltrReqId As Integer, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetUserEditVerOperationCompleted Is Nothing) Then
                Me.GetUserEditVerOperationCompleted = AddressOf Me.OnGetUserEditVerOperationCompleted
            End If
            Me.InvokeAsync("GetUserEditVer", New Object() {ltrReqId, errMsg, stackTrace}, Me.GetUserEditVerOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserEditVerOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserEditVerCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserEditVerCompleted(Me, New GetUserEditVerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTableFunctionCodes", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetTableFunctionCodes(ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetTableFunctionCodes", New Object() {errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetTableFunctionCodesAsync(ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetTableFunctionCodesAsync(errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetTableFunctionCodesAsync(ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetTableFunctionCodesOperationCompleted Is Nothing) Then
                Me.GetTableFunctionCodesOperationCompleted = AddressOf Me.OnGetTableFunctionCodesOperationCompleted
            End If
            Me.InvokeAsync("GetTableFunctionCodes", New Object() {errMsg, stackTrace}, Me.GetTableFunctionCodesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetTableFunctionCodesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetTableFunctionCodesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetTableFunctionCodesCompleted(Me, New GetTableFunctionCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAuditKeyField", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetAuditKeyField(ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetAuditKeyField", New Object() {errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetAuditKeyFieldAsync(ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetAuditKeyFieldAsync(errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetAuditKeyFieldAsync(ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetAuditKeyFieldOperationCompleted Is Nothing) Then
                Me.GetAuditKeyFieldOperationCompleted = AddressOf Me.OnGetAuditKeyFieldOperationCompleted
            End If
            Me.InvokeAsync("GetAuditKeyField", New Object() {errMsg, stackTrace}, Me.GetAuditKeyFieldOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetAuditKeyFieldOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetAuditKeyFieldCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetAuditKeyFieldCompleted(Me, New GetAuditKeyFieldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchAuditLog_UI", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SearchAuditLog_UI(ByVal action_from_date As String, ByVal action_to_date As String, ByVal [function] As String, ByVal key_field As String, ByVal key_value As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("SearchAuditLog_UI", New Object() {action_from_date, action_to_date, [function], key_field, key_value, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SearchAuditLog_UIAsync(ByVal action_from_date As String, ByVal action_to_date As String, ByVal [function] As String, ByVal key_field As String, ByVal key_value As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.SearchAuditLog_UIAsync(action_from_date, action_to_date, [function], key_field, key_value, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SearchAuditLog_UIAsync(ByVal action_from_date As String, ByVal action_to_date As String, ByVal [function] As String, ByVal key_field As String, ByVal key_value As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.SearchAuditLog_UIOperationCompleted Is Nothing) Then
                Me.SearchAuditLog_UIOperationCompleted = AddressOf Me.OnSearchAuditLog_UIOperationCompleted
            End If
            Me.InvokeAsync("SearchAuditLog_UI", New Object() {action_from_date, action_to_date, [function], key_field, key_value, errMsg, stackTrace}, Me.SearchAuditLog_UIOperationCompleted, userState)
        End Sub
        
        Private Sub OnSearchAuditLog_UIOperationCompleted(ByVal arg As Object)
            If (Not (Me.SearchAuditLog_UICompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SearchAuditLog_UICompleted(Me, New SearchAuditLog_UICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdmGetUserSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdmGetUserSearch(ByVal id_name As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("AdmGetUserSearch", New Object() {id_name, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdmGetUserSearchAsync(ByVal id_name As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.AdmGetUserSearchAsync(id_name, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdmGetUserSearchAsync(ByVal id_name As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.AdmGetUserSearchOperationCompleted Is Nothing) Then
                Me.AdmGetUserSearchOperationCompleted = AddressOf Me.OnAdmGetUserSearchOperationCompleted
            End If
            Me.InvokeAsync("AdmGetUserSearch", New Object() {id_name, errMsg, stackTrace}, Me.AdmGetUserSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdmGetUserSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdmGetUserSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdmGetUserSearchCompleted(Me, New AdmGetUserSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdmGetUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdmGetUser(ByVal id As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("AdmGetUser", New Object() {id, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdmGetUserAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.AdmGetUserAsync(id, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdmGetUserAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.AdmGetUserOperationCompleted Is Nothing) Then
                Me.AdmGetUserOperationCompleted = AddressOf Me.OnAdmGetUserOperationCompleted
            End If
            Me.InvokeAsync("AdmGetUser", New Object() {id, errMsg, stackTrace}, Me.AdmGetUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdmGetUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdmGetUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdmGetUserCompleted(Me, New AdmGetUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelAdmUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DelAdmUser(ByVal id As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DelAdmUser", New Object() {id, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DelAdmUserAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DelAdmUserAsync(id, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DelAdmUserAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DelAdmUserOperationCompleted Is Nothing) Then
                Me.DelAdmUserOperationCompleted = AddressOf Me.OnDelAdmUserOperationCompleted
            End If
            Me.InvokeAsync("DelAdmUser", New Object() {id, errMsg, stackTrace}, Me.DelAdmUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnDelAdmUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.DelAdmUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DelAdmUserCompleted(Me, New DelAdmUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAdmUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveAdmUser(ByVal id As String, ByVal name As String, ByVal isAmin As String, ByVal createUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("SaveAdmUser", New Object() {id, name, isAmin, createUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveAdmUserAsync(ByVal id As String, ByVal name As String, ByVal isAmin As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.SaveAdmUserAsync(id, name, isAmin, createUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveAdmUserAsync(ByVal id As String, ByVal name As String, ByVal isAmin As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.SaveAdmUserOperationCompleted Is Nothing) Then
                Me.SaveAdmUserOperationCompleted = AddressOf Me.OnSaveAdmUserOperationCompleted
            End If
            Me.InvokeAsync("SaveAdmUser", New Object() {id, name, isAmin, createUser, errMsg, stackTrace}, Me.SaveAdmUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveAdmUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveAdmUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveAdmUserCompleted(Me, New SaveAdmUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdmGetGroupSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdmGetGroupSearch(ByVal id_name As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("AdmGetGroupSearch", New Object() {id_name, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdmGetGroupSearchAsync(ByVal id_name As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.AdmGetGroupSearchAsync(id_name, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdmGetGroupSearchAsync(ByVal id_name As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.AdmGetGroupSearchOperationCompleted Is Nothing) Then
                Me.AdmGetGroupSearchOperationCompleted = AddressOf Me.OnAdmGetGroupSearchOperationCompleted
            End If
            Me.InvokeAsync("AdmGetGroupSearch", New Object() {id_name, errMsg, stackTrace}, Me.AdmGetGroupSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdmGetGroupSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdmGetGroupSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdmGetGroupSearchCompleted(Me, New AdmGetGroupSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdmGetGroup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdmGetGroup(ByVal id As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("AdmGetGroup", New Object() {id, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdmGetGroupAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.AdmGetGroupAsync(id, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdmGetGroupAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.AdmGetGroupOperationCompleted Is Nothing) Then
                Me.AdmGetGroupOperationCompleted = AddressOf Me.OnAdmGetGroupOperationCompleted
            End If
            Me.InvokeAsync("AdmGetGroup", New Object() {id, errMsg, stackTrace}, Me.AdmGetGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdmGetGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdmGetGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdmGetGroupCompleted(Me, New AdmGetGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelAdmGroup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DelAdmGroup(ByVal id As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DelAdmGroup", New Object() {id, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DelAdmGroupAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DelAdmGroupAsync(id, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DelAdmGroupAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DelAdmGroupOperationCompleted Is Nothing) Then
                Me.DelAdmGroupOperationCompleted = AddressOf Me.OnDelAdmGroupOperationCompleted
            End If
            Me.InvokeAsync("DelAdmGroup", New Object() {id, errMsg, stackTrace}, Me.DelAdmGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnDelAdmGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.DelAdmGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DelAdmGroupCompleted(Me, New DelAdmGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAdmGroup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveAdmGroup(ByVal id As String, ByVal name As String, ByVal createUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("SaveAdmGroup", New Object() {id, name, createUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveAdmGroupAsync(ByVal id As String, ByVal name As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.SaveAdmGroupAsync(id, name, createUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveAdmGroupAsync(ByVal id As String, ByVal name As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.SaveAdmGroupOperationCompleted Is Nothing) Then
                Me.SaveAdmGroupOperationCompleted = AddressOf Me.OnSaveAdmGroupOperationCompleted
            End If
            Me.InvokeAsync("SaveAdmGroup", New Object() {id, name, createUser, errMsg, stackTrace}, Me.SaveAdmGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveAdmGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveAdmGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveAdmGroupCompleted(Me, New SaveAdmGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdmGetFunctionSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdmGetFunctionSearch(ByVal id_name As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("AdmGetFunctionSearch", New Object() {id_name, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdmGetFunctionSearchAsync(ByVal id_name As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.AdmGetFunctionSearchAsync(id_name, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdmGetFunctionSearchAsync(ByVal id_name As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.AdmGetFunctionSearchOperationCompleted Is Nothing) Then
                Me.AdmGetFunctionSearchOperationCompleted = AddressOf Me.OnAdmGetFunctionSearchOperationCompleted
            End If
            Me.InvokeAsync("AdmGetFunctionSearch", New Object() {id_name, errMsg, stackTrace}, Me.AdmGetFunctionSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdmGetFunctionSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdmGetFunctionSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdmGetFunctionSearchCompleted(Me, New AdmGetFunctionSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdmGetFunction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdmGetFunction(ByVal id As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("AdmGetFunction", New Object() {id, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdmGetFunctionAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.AdmGetFunctionAsync(id, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdmGetFunctionAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.AdmGetFunctionOperationCompleted Is Nothing) Then
                Me.AdmGetFunctionOperationCompleted = AddressOf Me.OnAdmGetFunctionOperationCompleted
            End If
            Me.InvokeAsync("AdmGetFunction", New Object() {id, errMsg, stackTrace}, Me.AdmGetFunctionOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdmGetFunctionOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdmGetFunctionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdmGetFunctionCompleted(Me, New AdmGetFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelAdmFunction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DelAdmFunction(ByVal id As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DelAdmFunction", New Object() {id, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DelAdmFunctionAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DelAdmFunctionAsync(id, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DelAdmFunctionAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DelAdmFunctionOperationCompleted Is Nothing) Then
                Me.DelAdmFunctionOperationCompleted = AddressOf Me.OnDelAdmFunctionOperationCompleted
            End If
            Me.InvokeAsync("DelAdmFunction", New Object() {id, errMsg, stackTrace}, Me.DelAdmFunctionOperationCompleted, userState)
        End Sub
        
        Private Sub OnDelAdmFunctionOperationCompleted(ByVal arg As Object)
            If (Not (Me.DelAdmFunctionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DelAdmFunctionCompleted(Me, New DelAdmFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAdmFunction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveAdmFunction(ByVal id As String, ByVal name As String, ByVal funcCat As String, ByVal treeView As String, ByVal treeSeq As Integer, ByVal createUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("SaveAdmFunction", New Object() {id, name, funcCat, treeView, treeSeq, createUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveAdmFunctionAsync(ByVal id As String, ByVal name As String, ByVal funcCat As String, ByVal treeView As String, ByVal treeSeq As Integer, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.SaveAdmFunctionAsync(id, name, funcCat, treeView, treeSeq, createUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveAdmFunctionAsync(ByVal id As String, ByVal name As String, ByVal funcCat As String, ByVal treeView As String, ByVal treeSeq As Integer, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.SaveAdmFunctionOperationCompleted Is Nothing) Then
                Me.SaveAdmFunctionOperationCompleted = AddressOf Me.OnSaveAdmFunctionOperationCompleted
            End If
            Me.InvokeAsync("SaveAdmFunction", New Object() {id, name, funcCat, treeView, treeSeq, createUser, errMsg, stackTrace}, Me.SaveAdmFunctionOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveAdmFunctionOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveAdmFunctionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveAdmFunctionCompleted(Me, New SaveAdmFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdmGetFunctionCat", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdmGetFunctionCat(ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("AdmGetFunctionCat", New Object() {errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdmGetFunctionCatAsync(ByVal errMsg As String, ByVal stackTrace As String)
            Me.AdmGetFunctionCatAsync(errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdmGetFunctionCatAsync(ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.AdmGetFunctionCatOperationCompleted Is Nothing) Then
                Me.AdmGetFunctionCatOperationCompleted = AddressOf Me.OnAdmGetFunctionCatOperationCompleted
            End If
            Me.InvokeAsync("AdmGetFunctionCat", New Object() {errMsg, stackTrace}, Me.AdmGetFunctionCatOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdmGetFunctionCatOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdmGetFunctionCatCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdmGetFunctionCatCompleted(Me, New AdmGetFunctionCatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdmGetAppsSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdmGetAppsSearch(ByVal id_name As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("AdmGetAppsSearch", New Object() {id_name, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdmGetAppsSearchAsync(ByVal id_name As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.AdmGetAppsSearchAsync(id_name, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdmGetAppsSearchAsync(ByVal id_name As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.AdmGetAppsSearchOperationCompleted Is Nothing) Then
                Me.AdmGetAppsSearchOperationCompleted = AddressOf Me.OnAdmGetAppsSearchOperationCompleted
            End If
            Me.InvokeAsync("AdmGetAppsSearch", New Object() {id_name, errMsg, stackTrace}, Me.AdmGetAppsSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdmGetAppsSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdmGetAppsSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdmGetAppsSearchCompleted(Me, New AdmGetAppsSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdmGetApps", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdmGetApps(ByVal id As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("AdmGetApps", New Object() {id, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdmGetAppsAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.AdmGetAppsAsync(id, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdmGetAppsAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.AdmGetAppsOperationCompleted Is Nothing) Then
                Me.AdmGetAppsOperationCompleted = AddressOf Me.OnAdmGetAppsOperationCompleted
            End If
            Me.InvokeAsync("AdmGetApps", New Object() {id, errMsg, stackTrace}, Me.AdmGetAppsOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdmGetAppsOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdmGetAppsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdmGetAppsCompleted(Me, New AdmGetAppsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelAdmApps", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DelAdmApps(ByVal id As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DelAdmApps", New Object() {id, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DelAdmAppsAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DelAdmAppsAsync(id, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DelAdmAppsAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DelAdmAppsOperationCompleted Is Nothing) Then
                Me.DelAdmAppsOperationCompleted = AddressOf Me.OnDelAdmAppsOperationCompleted
            End If
            Me.InvokeAsync("DelAdmApps", New Object() {id, errMsg, stackTrace}, Me.DelAdmAppsOperationCompleted, userState)
        End Sub
        
        Private Sub OnDelAdmAppsOperationCompleted(ByVal arg As Object)
            If (Not (Me.DelAdmAppsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DelAdmAppsCompleted(Me, New DelAdmAppsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAdmApps", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveAdmApps(ByVal id As String, ByVal appDesc As String, ByVal appPath As String, ByVal appExe As String, ByVal appKey1 As String, ByVal appKey2 As String, ByVal appRemarks As String, ByVal createUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("SaveAdmApps", New Object() {id, appDesc, appPath, appExe, appKey1, appKey2, appRemarks, createUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveAdmAppsAsync(ByVal id As String, ByVal appDesc As String, ByVal appPath As String, ByVal appExe As String, ByVal appKey1 As String, ByVal appKey2 As String, ByVal appRemarks As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.SaveAdmAppsAsync(id, appDesc, appPath, appExe, appKey1, appKey2, appRemarks, createUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveAdmAppsAsync(ByVal id As String, ByVal appDesc As String, ByVal appPath As String, ByVal appExe As String, ByVal appKey1 As String, ByVal appKey2 As String, ByVal appRemarks As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.SaveAdmAppsOperationCompleted Is Nothing) Then
                Me.SaveAdmAppsOperationCompleted = AddressOf Me.OnSaveAdmAppsOperationCompleted
            End If
            Me.InvokeAsync("SaveAdmApps", New Object() {id, appDesc, appPath, appExe, appKey1, appKey2, appRemarks, createUser, errMsg, stackTrace}, Me.SaveAdmAppsOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveAdmAppsOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveAdmAppsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveAdmAppsCompleted(Me, New SaveAdmAppsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdmGetFuncCatSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdmGetFuncCatSearch(ByVal id_name As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("AdmGetFuncCatSearch", New Object() {id_name, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdmGetFuncCatSearchAsync(ByVal id_name As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.AdmGetFuncCatSearchAsync(id_name, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdmGetFuncCatSearchAsync(ByVal id_name As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.AdmGetFuncCatSearchOperationCompleted Is Nothing) Then
                Me.AdmGetFuncCatSearchOperationCompleted = AddressOf Me.OnAdmGetFuncCatSearchOperationCompleted
            End If
            Me.InvokeAsync("AdmGetFuncCatSearch", New Object() {id_name, errMsg, stackTrace}, Me.AdmGetFuncCatSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdmGetFuncCatSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdmGetFuncCatSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdmGetFuncCatSearchCompleted(Me, New AdmGetFuncCatSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdmGetFuncCat", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdmGetFuncCat(ByVal id As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("AdmGetFuncCat", New Object() {id, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdmGetFuncCatAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.AdmGetFuncCatAsync(id, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdmGetFuncCatAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.AdmGetFuncCatOperationCompleted Is Nothing) Then
                Me.AdmGetFuncCatOperationCompleted = AddressOf Me.OnAdmGetFuncCatOperationCompleted
            End If
            Me.InvokeAsync("AdmGetFuncCat", New Object() {id, errMsg, stackTrace}, Me.AdmGetFuncCatOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdmGetFuncCatOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdmGetFuncCatCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdmGetFuncCatCompleted(Me, New AdmGetFuncCatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelAdmFuncCat", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DelAdmFuncCat(ByVal id As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DelAdmFuncCat", New Object() {id, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DelAdmFuncCatAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DelAdmFuncCatAsync(id, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DelAdmFuncCatAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DelAdmFuncCatOperationCompleted Is Nothing) Then
                Me.DelAdmFuncCatOperationCompleted = AddressOf Me.OnDelAdmFuncCatOperationCompleted
            End If
            Me.InvokeAsync("DelAdmFuncCat", New Object() {id, errMsg, stackTrace}, Me.DelAdmFuncCatOperationCompleted, userState)
        End Sub
        
        Private Sub OnDelAdmFuncCatOperationCompleted(ByVal arg As Object)
            If (Not (Me.DelAdmFuncCatCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DelAdmFuncCatCompleted(Me, New DelAdmFuncCatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAdmFuncCat", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveAdmFuncCat(ByVal funcCat As String, ByVal funcCatName As String, ByVal createUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("SaveAdmFuncCat", New Object() {funcCat, funcCatName, createUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveAdmFuncCatAsync(ByVal funcCat As String, ByVal funcCatName As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.SaveAdmFuncCatAsync(funcCat, funcCatName, createUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveAdmFuncCatAsync(ByVal funcCat As String, ByVal funcCatName As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.SaveAdmFuncCatOperationCompleted Is Nothing) Then
                Me.SaveAdmFuncCatOperationCompleted = AddressOf Me.OnSaveAdmFuncCatOperationCompleted
            End If
            Me.InvokeAsync("SaveAdmFuncCat", New Object() {funcCat, funcCatName, createUser, errMsg, stackTrace}, Me.SaveAdmFuncCatOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveAdmFuncCatOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveAdmFuncCatCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveAdmFuncCatCompleted(Me, New SaveAdmFuncCatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdmGetAppsGroup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdmGetAppsGroup(ByVal id As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("AdmGetAppsGroup", New Object() {id, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdmGetAppsGroupAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.AdmGetAppsGroupAsync(id, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdmGetAppsGroupAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.AdmGetAppsGroupOperationCompleted Is Nothing) Then
                Me.AdmGetAppsGroupOperationCompleted = AddressOf Me.OnAdmGetAppsGroupOperationCompleted
            End If
            Me.InvokeAsync("AdmGetAppsGroup", New Object() {id, errMsg, stackTrace}, Me.AdmGetAppsGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdmGetAppsGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdmGetAppsGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdmGetAppsGroupCompleted(Me, New AdmGetAppsGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelAdmAppsGroup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DelAdmAppsGroup(ByVal appId As String, ByVal groupId_Json As String, ByVal createUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DelAdmAppsGroup", New Object() {appId, groupId_Json, createUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DelAdmAppsGroupAsync(ByVal appId As String, ByVal groupId_Json As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DelAdmAppsGroupAsync(appId, groupId_Json, createUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DelAdmAppsGroupAsync(ByVal appId As String, ByVal groupId_Json As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DelAdmAppsGroupOperationCompleted Is Nothing) Then
                Me.DelAdmAppsGroupOperationCompleted = AddressOf Me.OnDelAdmAppsGroupOperationCompleted
            End If
            Me.InvokeAsync("DelAdmAppsGroup", New Object() {appId, groupId_Json, createUser, errMsg, stackTrace}, Me.DelAdmAppsGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnDelAdmAppsGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.DelAdmAppsGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DelAdmAppsGroupCompleted(Me, New DelAdmAppsGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAdmAppsGroup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveAdmAppsGroup(ByVal appId As String, ByVal groupId_Json As String, ByVal createUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("SaveAdmAppsGroup", New Object() {appId, groupId_Json, createUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveAdmAppsGroupAsync(ByVal appId As String, ByVal groupId_Json As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.SaveAdmAppsGroupAsync(appId, groupId_Json, createUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveAdmAppsGroupAsync(ByVal appId As String, ByVal groupId_Json As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.SaveAdmAppsGroupOperationCompleted Is Nothing) Then
                Me.SaveAdmAppsGroupOperationCompleted = AddressOf Me.OnSaveAdmAppsGroupOperationCompleted
            End If
            Me.InvokeAsync("SaveAdmAppsGroup", New Object() {appId, groupId_Json, createUser, errMsg, stackTrace}, Me.SaveAdmAppsGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveAdmAppsGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveAdmAppsGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveAdmAppsGroupCompleted(Me, New SaveAdmAppsGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdmGetGroupUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdmGetGroupUser(ByVal id As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("AdmGetGroupUser", New Object() {id, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdmGetGroupUserAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.AdmGetGroupUserAsync(id, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdmGetGroupUserAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.AdmGetGroupUserOperationCompleted Is Nothing) Then
                Me.AdmGetGroupUserOperationCompleted = AddressOf Me.OnAdmGetGroupUserOperationCompleted
            End If
            Me.InvokeAsync("AdmGetGroupUser", New Object() {id, errMsg, stackTrace}, Me.AdmGetGroupUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdmGetGroupUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdmGetGroupUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdmGetGroupUserCompleted(Me, New AdmGetGroupUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelAdmGroupUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DelAdmGroupUser(ByVal groupId As String, ByVal userId_Json As String, ByVal createUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DelAdmGroupUser", New Object() {groupId, userId_Json, createUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DelAdmGroupUserAsync(ByVal groupId As String, ByVal userId_Json As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DelAdmGroupUserAsync(groupId, userId_Json, createUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DelAdmGroupUserAsync(ByVal groupId As String, ByVal userId_Json As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DelAdmGroupUserOperationCompleted Is Nothing) Then
                Me.DelAdmGroupUserOperationCompleted = AddressOf Me.OnDelAdmGroupUserOperationCompleted
            End If
            Me.InvokeAsync("DelAdmGroupUser", New Object() {groupId, userId_Json, createUser, errMsg, stackTrace}, Me.DelAdmGroupUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnDelAdmGroupUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.DelAdmGroupUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DelAdmGroupUserCompleted(Me, New DelAdmGroupUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAdmGroupUser", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveAdmGroupUser(ByVal groupId As String, ByVal userId_Json As String, ByVal createUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("SaveAdmGroupUser", New Object() {groupId, userId_Json, createUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveAdmGroupUserAsync(ByVal groupId As String, ByVal userId_Json As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.SaveAdmGroupUserAsync(groupId, userId_Json, createUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveAdmGroupUserAsync(ByVal groupId As String, ByVal userId_Json As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.SaveAdmGroupUserOperationCompleted Is Nothing) Then
                Me.SaveAdmGroupUserOperationCompleted = AddressOf Me.OnSaveAdmGroupUserOperationCompleted
            End If
            Me.InvokeAsync("SaveAdmGroupUser", New Object() {groupId, userId_Json, createUser, errMsg, stackTrace}, Me.SaveAdmGroupUserOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveAdmGroupUserOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveAdmGroupUserCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveAdmGroupUserCompleted(Me, New SaveAdmGroupUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdmGetGroupFunction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdmGetGroupFunction(ByVal id As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("AdmGetGroupFunction", New Object() {id, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdmGetGroupFunctionAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.AdmGetGroupFunctionAsync(id, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdmGetGroupFunctionAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.AdmGetGroupFunctionOperationCompleted Is Nothing) Then
                Me.AdmGetGroupFunctionOperationCompleted = AddressOf Me.OnAdmGetGroupFunctionOperationCompleted
            End If
            Me.InvokeAsync("AdmGetGroupFunction", New Object() {id, errMsg, stackTrace}, Me.AdmGetGroupFunctionOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdmGetGroupFunctionOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdmGetGroupFunctionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdmGetGroupFunctionCompleted(Me, New AdmGetGroupFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelAdmGroupFunction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DelAdmGroupFunction(ByVal groupId As String, ByVal funcId_Json As String, ByVal createUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DelAdmGroupFunction", New Object() {groupId, funcId_Json, createUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DelAdmGroupFunctionAsync(ByVal groupId As String, ByVal funcId_Json As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DelAdmGroupFunctionAsync(groupId, funcId_Json, createUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DelAdmGroupFunctionAsync(ByVal groupId As String, ByVal funcId_Json As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DelAdmGroupFunctionOperationCompleted Is Nothing) Then
                Me.DelAdmGroupFunctionOperationCompleted = AddressOf Me.OnDelAdmGroupFunctionOperationCompleted
            End If
            Me.InvokeAsync("DelAdmGroupFunction", New Object() {groupId, funcId_Json, createUser, errMsg, stackTrace}, Me.DelAdmGroupFunctionOperationCompleted, userState)
        End Sub
        
        Private Sub OnDelAdmGroupFunctionOperationCompleted(ByVal arg As Object)
            If (Not (Me.DelAdmGroupFunctionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DelAdmGroupFunctionCompleted(Me, New DelAdmGroupFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAdmGroupFunction", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveAdmGroupFunction(ByVal groupId As String, ByVal funcId_Json As String, ByVal createUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("SaveAdmGroupFunction", New Object() {groupId, funcId_Json, createUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveAdmGroupFunctionAsync(ByVal groupId As String, ByVal funcId_Json As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.SaveAdmGroupFunctionAsync(groupId, funcId_Json, createUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveAdmGroupFunctionAsync(ByVal groupId As String, ByVal funcId_Json As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.SaveAdmGroupFunctionOperationCompleted Is Nothing) Then
                Me.SaveAdmGroupFunctionOperationCompleted = AddressOf Me.OnSaveAdmGroupFunctionOperationCompleted
            End If
            Me.InvokeAsync("SaveAdmGroupFunction", New Object() {groupId, funcId_Json, createUser, errMsg, stackTrace}, Me.SaveAdmGroupFunctionOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveAdmGroupFunctionOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveAdmGroupFunctionCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveAdmGroupFunctionCompleted(Me, New SaveAdmGroupFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdmGetUserGroup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdmGetUserGroup(ByVal id As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("AdmGetUserGroup", New Object() {id, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdmGetUserGroupAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.AdmGetUserGroupAsync(id, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdmGetUserGroupAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.AdmGetUserGroupOperationCompleted Is Nothing) Then
                Me.AdmGetUserGroupOperationCompleted = AddressOf Me.OnAdmGetUserGroupOperationCompleted
            End If
            Me.InvokeAsync("AdmGetUserGroup", New Object() {id, errMsg, stackTrace}, Me.AdmGetUserGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdmGetUserGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdmGetUserGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdmGetUserGroupCompleted(Me, New AdmGetUserGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelAdmUserGroup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DelAdmUserGroup(ByVal userId As String, ByVal groupId_Json As String, ByVal createUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DelAdmUserGroup", New Object() {userId, groupId_Json, createUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DelAdmUserGroupAsync(ByVal userId As String, ByVal groupId_Json As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DelAdmUserGroupAsync(userId, groupId_Json, createUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DelAdmUserGroupAsync(ByVal userId As String, ByVal groupId_Json As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DelAdmUserGroupOperationCompleted Is Nothing) Then
                Me.DelAdmUserGroupOperationCompleted = AddressOf Me.OnDelAdmUserGroupOperationCompleted
            End If
            Me.InvokeAsync("DelAdmUserGroup", New Object() {userId, groupId_Json, createUser, errMsg, stackTrace}, Me.DelAdmUserGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnDelAdmUserGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.DelAdmUserGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DelAdmUserGroupCompleted(Me, New DelAdmUserGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAdmUserGroup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveAdmUserGroup(ByVal userId As String, ByVal groupId_Json As String, ByVal createUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("SaveAdmUserGroup", New Object() {userId, groupId_Json, createUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveAdmUserGroupAsync(ByVal userId As String, ByVal groupId_Json As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.SaveAdmUserGroupAsync(userId, groupId_Json, createUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveAdmUserGroupAsync(ByVal userId As String, ByVal groupId_Json As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.SaveAdmUserGroupOperationCompleted Is Nothing) Then
                Me.SaveAdmUserGroupOperationCompleted = AddressOf Me.OnSaveAdmUserGroupOperationCompleted
            End If
            Me.InvokeAsync("SaveAdmUserGroup", New Object() {userId, groupId_Json, createUser, errMsg, stackTrace}, Me.SaveAdmUserGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveAdmUserGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveAdmUserGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveAdmUserGroupCompleted(Me, New SaveAdmUserGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdmGetFunctionGroup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function AdmGetFunctionGroup(ByVal id As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("AdmGetFunctionGroup", New Object() {id, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AdmGetFunctionGroupAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.AdmGetFunctionGroupAsync(id, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AdmGetFunctionGroupAsync(ByVal id As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.AdmGetFunctionGroupOperationCompleted Is Nothing) Then
                Me.AdmGetFunctionGroupOperationCompleted = AddressOf Me.OnAdmGetFunctionGroupOperationCompleted
            End If
            Me.InvokeAsync("AdmGetFunctionGroup", New Object() {id, errMsg, stackTrace}, Me.AdmGetFunctionGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnAdmGetFunctionGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.AdmGetFunctionGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AdmGetFunctionGroupCompleted(Me, New AdmGetFunctionGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelAdmFunctionGroup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DelAdmFunctionGroup(ByVal funcId As String, ByVal groupId_Json As String, ByVal createUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("DelAdmFunctionGroup", New Object() {funcId, groupId_Json, createUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DelAdmFunctionGroupAsync(ByVal funcId As String, ByVal groupId_Json As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.DelAdmFunctionGroupAsync(funcId, groupId_Json, createUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DelAdmFunctionGroupAsync(ByVal funcId As String, ByVal groupId_Json As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.DelAdmFunctionGroupOperationCompleted Is Nothing) Then
                Me.DelAdmFunctionGroupOperationCompleted = AddressOf Me.OnDelAdmFunctionGroupOperationCompleted
            End If
            Me.InvokeAsync("DelAdmFunctionGroup", New Object() {funcId, groupId_Json, createUser, errMsg, stackTrace}, Me.DelAdmFunctionGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnDelAdmFunctionGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.DelAdmFunctionGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DelAdmFunctionGroupCompleted(Me, New DelAdmFunctionGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SaveAdmFunctionGroup", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveAdmFunctionGroup(ByVal funcId As String, ByVal groupId_Json As String, ByVal createUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("SaveAdmFunctionGroup", New Object() {funcId, groupId_Json, createUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveAdmFunctionGroupAsync(ByVal funcId As String, ByVal groupId_Json As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.SaveAdmFunctionGroupAsync(funcId, groupId_Json, createUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveAdmFunctionGroupAsync(ByVal funcId As String, ByVal groupId_Json As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.SaveAdmFunctionGroupOperationCompleted Is Nothing) Then
                Me.SaveAdmFunctionGroupOperationCompleted = AddressOf Me.OnSaveAdmFunctionGroupOperationCompleted
            End If
            Me.InvokeAsync("SaveAdmFunctionGroup", New Object() {funcId, groupId_Json, createUser, errMsg, stackTrace}, Me.SaveAdmFunctionGroupOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveAdmFunctionGroupOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveAdmFunctionGroupCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveAdmFunctionGroupCompleted(Me, New SaveAdmFunctionGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNextBusinessDate", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetNextBusinessDate(ByVal date_yyyymmdd As String, ByVal ciw_db As String, ByRef errMsg As String, ByRef stackTrace As String) As String
            Dim results() As Object = Me.Invoke("GetNextBusinessDate", New Object() {date_yyyymmdd, ciw_db, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetNextBusinessDateAsync(ByVal date_yyyymmdd As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetNextBusinessDateAsync(date_yyyymmdd, ciw_db, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetNextBusinessDateAsync(ByVal date_yyyymmdd As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetNextBusinessDateOperationCompleted Is Nothing) Then
                Me.GetNextBusinessDateOperationCompleted = AddressOf Me.OnGetNextBusinessDateOperationCompleted
            End If
            Me.InvokeAsync("GetNextBusinessDate", New Object() {date_yyyymmdd, ciw_db, errMsg, stackTrace}, Me.GetNextBusinessDateOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetNextBusinessDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNextBusinessDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNextBusinessDateCompleted(Me, New GetNextBusinessDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNextBusinessDate_MCU", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetNextBusinessDate_MCU(ByVal date_yyyymmdd As String, ByVal conn_name As String, ByRef errMsg As String, ByRef stackTrace As String) As String
            Dim results() As Object = Me.Invoke("GetNextBusinessDate_MCU", New Object() {date_yyyymmdd, conn_name, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetNextBusinessDate_MCUAsync(ByVal date_yyyymmdd As String, ByVal conn_name As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetNextBusinessDate_MCUAsync(date_yyyymmdd, conn_name, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetNextBusinessDate_MCUAsync(ByVal date_yyyymmdd As String, ByVal conn_name As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetNextBusinessDate_MCUOperationCompleted Is Nothing) Then
                Me.GetNextBusinessDate_MCUOperationCompleted = AddressOf Me.OnGetNextBusinessDate_MCUOperationCompleted
            End If
            Me.InvokeAsync("GetNextBusinessDate_MCU", New Object() {date_yyyymmdd, conn_name, errMsg, stackTrace}, Me.GetNextBusinessDate_MCUOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetNextBusinessDate_MCUOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNextBusinessDate_MCUCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNextBusinessDate_MCUCompleted(Me, New GetNextBusinessDate_MCUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CampaignDefaultSearch_DBMoto", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CampaignDefaultSearch_DBMoto(ByVal plan_code As String, ByVal default_campaign As String, ByVal campaign_type As String, ByVal request_num As String, ByVal ciw_db As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("CampaignDefaultSearch_DBMoto", New Object() {plan_code, default_campaign, campaign_type, request_num, ciw_db, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CampaignDefaultSearch_DBMotoAsync(ByVal plan_code As String, ByVal default_campaign As String, ByVal campaign_type As String, ByVal request_num As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CampaignDefaultSearch_DBMotoAsync(plan_code, default_campaign, campaign_type, request_num, ciw_db, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CampaignDefaultSearch_DBMotoAsync(ByVal plan_code As String, ByVal default_campaign As String, ByVal campaign_type As String, ByVal request_num As String, ByVal ciw_db As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CampaignDefaultSearch_DBMotoOperationCompleted Is Nothing) Then
                Me.CampaignDefaultSearch_DBMotoOperationCompleted = AddressOf Me.OnCampaignDefaultSearch_DBMotoOperationCompleted
            End If
            Me.InvokeAsync("CampaignDefaultSearch_DBMoto", New Object() {plan_code, default_campaign, campaign_type, request_num, ciw_db, errMsg, stackTrace}, Me.CampaignDefaultSearch_DBMotoOperationCompleted, userState)
        End Sub
        
        Private Sub OnCampaignDefaultSearch_DBMotoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CampaignDefaultSearch_DBMotoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CampaignDefaultSearch_DBMotoCompleted(Me, New CampaignDefaultSearch_DBMotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampaignTypeCodes", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCampaignTypeCodes(ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetCampaignTypeCodes", New Object() {errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCampaignTypeCodesAsync(ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCampaignTypeCodesAsync(errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCampaignTypeCodesAsync(ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCampaignTypeCodesOperationCompleted Is Nothing) Then
                Me.GetCampaignTypeCodesOperationCompleted = AddressOf Me.OnGetCampaignTypeCodesOperationCompleted
            End If
            Me.InvokeAsync("GetCampaignTypeCodes", New Object() {errMsg, stackTrace}, Me.GetCampaignTypeCodesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCampaignTypeCodesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampaignTypeCodesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampaignTypeCodesCompleted(Me, New GetCampaignTypeCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCampaignSetupActionCodes", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCampaignSetupActionCodes(ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetCampaignSetupActionCodes", New Object() {errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCampaignSetupActionCodesAsync(ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCampaignSetupActionCodesAsync(errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCampaignSetupActionCodesAsync(ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCampaignSetupActionCodesOperationCompleted Is Nothing) Then
                Me.GetCampaignSetupActionCodesOperationCompleted = AddressOf Me.OnGetCampaignSetupActionCodesOperationCompleted
            End If
            Me.InvokeAsync("GetCampaignSetupActionCodes", New Object() {errMsg, stackTrace}, Me.GetCampaignSetupActionCodesOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCampaignSetupActionCodesOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCampaignSetupActionCodesCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCampaignSetupActionCodesCompleted(Me, New GetCampaignSetupActionCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPlanCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPlanCode(ByVal ciwDb As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetPlanCode", New Object() {ciwDb, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPlanCodeAsync(ByVal ciwDb As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetPlanCodeAsync(ciwDb, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPlanCodeAsync(ByVal ciwDb As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetPlanCodeOperationCompleted Is Nothing) Then
                Me.GetPlanCodeOperationCompleted = AddressOf Me.OnGetPlanCodeOperationCompleted
            End If
            Me.InvokeAsync("GetPlanCode", New Object() {ciwDb, errMsg, stackTrace}, Me.GetPlanCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPlanCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPlanCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPlanCodeCompleted(Me, New GetPlanCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDistributeChannelByPlan", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetDistributeChannelByPlan(ByVal planCode As String, ByVal ciwDb As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetDistributeChannelByPlan", New Object() {planCode, ciwDb, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetDistributeChannelByPlanAsync(ByVal planCode As String, ByVal ciwDb As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetDistributeChannelByPlanAsync(planCode, ciwDb, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetDistributeChannelByPlanAsync(ByVal planCode As String, ByVal ciwDb As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetDistributeChannelByPlanOperationCompleted Is Nothing) Then
                Me.GetDistributeChannelByPlanOperationCompleted = AddressOf Me.OnGetDistributeChannelByPlanOperationCompleted
            End If
            Me.InvokeAsync("GetDistributeChannelByPlan", New Object() {planCode, ciwDb, errMsg, stackTrace}, Me.GetDistributeChannelByPlanOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetDistributeChannelByPlanOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetDistributeChannelByPlanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetDistributeChannelByPlanCompleted(Me, New GetDistributeChannelByPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSalesUnitCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSalesUnitCode(ByVal camDb As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetSalesUnitCode", New Object() {camDb, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSalesUnitCodeAsync(ByVal camDb As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetSalesUnitCodeAsync(camDb, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSalesUnitCodeAsync(ByVal camDb As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetSalesUnitCodeOperationCompleted Is Nothing) Then
                Me.GetSalesUnitCodeOperationCompleted = AddressOf Me.OnGetSalesUnitCodeOperationCompleted
            End If
            Me.InvokeAsync("GetSalesUnitCode", New Object() {camDb, errMsg, stackTrace}, Me.GetSalesUnitCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSalesUnitCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSalesUnitCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSalesUnitCodeCompleted(Me, New GetSalesUnitCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckAgentTypeExist", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CheckAgentTypeExist(ByVal agentCode As String, ByVal relateCode As String, ByVal ciwDb As String, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("CheckAgentTypeExist", New Object() {agentCode, relateCode, ciwDb, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CheckAgentTypeExistAsync(ByVal agentCode As String, ByVal relateCode As String, ByVal ciwDb As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.CheckAgentTypeExistAsync(agentCode, relateCode, ciwDb, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CheckAgentTypeExistAsync(ByVal agentCode As String, ByVal relateCode As String, ByVal ciwDb As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.CheckAgentTypeExistOperationCompleted Is Nothing) Then
                Me.CheckAgentTypeExistOperationCompleted = AddressOf Me.OnCheckAgentTypeExistOperationCompleted
            End If
            Me.InvokeAsync("CheckAgentTypeExist", New Object() {agentCode, relateCode, ciwDb, errMsg, stackTrace}, Me.CheckAgentTypeExistOperationCompleted, userState)
        End Sub
        
        Private Sub OnCheckAgentTypeExistOperationCompleted(ByVal arg As Object)
            If (Not (Me.CheckAgentTypeExistCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CheckAgentTypeExistCompleted(Me, New CheckAgentTypeExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMortalityClassByPlan", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetMortalityClassByPlan(ByVal planCode As String, ByVal ciwDb As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetMortalityClassByPlan", New Object() {planCode, ciwDb, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetMortalityClassByPlanAsync(ByVal planCode As String, ByVal ciwDb As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetMortalityClassByPlanAsync(planCode, ciwDb, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetMortalityClassByPlanAsync(ByVal planCode As String, ByVal ciwDb As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetMortalityClassByPlanOperationCompleted Is Nothing) Then
                Me.GetMortalityClassByPlanOperationCompleted = AddressOf Me.OnGetMortalityClassByPlanOperationCompleted
            End If
            Me.InvokeAsync("GetMortalityClassByPlan", New Object() {planCode, ciwDb, errMsg, stackTrace}, Me.GetMortalityClassByPlanOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetMortalityClassByPlanOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetMortalityClassByPlanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetMortalityClassByPlanCompleted(Me, New GetMortalityClassByPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSubPlanCodeByPlan", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSubPlanCodeByPlan(ByVal planCode As String, ByVal ciwDb As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetSubPlanCodeByPlan", New Object() {planCode, ciwDb, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSubPlanCodeByPlanAsync(ByVal planCode As String, ByVal ciwDb As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetSubPlanCodeByPlanAsync(planCode, ciwDb, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSubPlanCodeByPlanAsync(ByVal planCode As String, ByVal ciwDb As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetSubPlanCodeByPlanOperationCompleted Is Nothing) Then
                Me.GetSubPlanCodeByPlanOperationCompleted = AddressOf Me.OnGetSubPlanCodeByPlanOperationCompleted
            End If
            Me.InvokeAsync("GetSubPlanCodeByPlan", New Object() {planCode, ciwDb, errMsg, stackTrace}, Me.GetSubPlanCodeByPlanOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSubPlanCodeByPlanOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSubPlanCodeByPlanCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSubPlanCodeByPlanCompleted(Me, New GetSubPlanCodeByPlanCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRMLifeFundHouseInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRMLifeFundHouseInfo(ByVal rmlifeDb As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetRMLifeFundHouseInfo", New Object() {rmlifeDb, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRMLifeFundHouseInfoAsync(ByVal rmlifeDb As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetRMLifeFundHouseInfoAsync(rmlifeDb, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRMLifeFundHouseInfoAsync(ByVal rmlifeDb As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetRMLifeFundHouseInfoOperationCompleted Is Nothing) Then
                Me.GetRMLifeFundHouseInfoOperationCompleted = AddressOf Me.OnGetRMLifeFundHouseInfoOperationCompleted
            End If
            Me.InvokeAsync("GetRMLifeFundHouseInfo", New Object() {rmlifeDb, errMsg, stackTrace}, Me.GetRMLifeFundHouseInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRMLifeFundHouseInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRMLifeFundHouseInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRMLifeFundHouseInfoCompleted(Me, New GetRMLifeFundHouseInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRMLifeFundTradeInfo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetRMLifeFundTradeInfo(ByVal rmlifeDb As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetRMLifeFundTradeInfo", New Object() {rmlifeDb, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetRMLifeFundTradeInfoAsync(ByVal rmlifeDb As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetRMLifeFundTradeInfoAsync(rmlifeDb, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetRMLifeFundTradeInfoAsync(ByVal rmlifeDb As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetRMLifeFundTradeInfoOperationCompleted Is Nothing) Then
                Me.GetRMLifeFundTradeInfoOperationCompleted = AddressOf Me.OnGetRMLifeFundTradeInfoOperationCompleted
            End If
            Me.InvokeAsync("GetRMLifeFundTradeInfo", New Object() {rmlifeDb, errMsg, stackTrace}, Me.GetRMLifeFundTradeInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetRMLifeFundTradeInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetRMLifeFundTradeInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetRMLifeFundTradeInfoCompleted(Me, New GetRMLifeFundTradeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertCalastoneFundTradeMast", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertCalastoneFundTradeMast(ByVal inTbl As System.Data.DataTable, ByRef errMsg As String, ByRef stackTrace As String) As Boolean
            Dim results() As Object = Me.Invoke("InsertCalastoneFundTradeMast", New Object() {inTbl, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertCalastoneFundTradeMastAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertCalastoneFundTradeMastAsync(inTbl, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertCalastoneFundTradeMastAsync(ByVal inTbl As System.Data.DataTable, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertCalastoneFundTradeMastOperationCompleted Is Nothing) Then
                Me.InsertCalastoneFundTradeMastOperationCompleted = AddressOf Me.OnInsertCalastoneFundTradeMastOperationCompleted
            End If
            Me.InvokeAsync("InsertCalastoneFundTradeMast", New Object() {inTbl, errMsg, stackTrace}, Me.InsertCalastoneFundTradeMastOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertCalastoneFundTradeMastOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertCalastoneFundTradeMastCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertCalastoneFundTradeMastCompleted(Me, New InsertCalastoneFundTradeMastCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCalastoneSearch", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetCalastoneSearch(ByVal fromDate As Date, ByVal toDate As Date, ByVal Country As String, ByVal IsCalastone As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetCalastoneSearch", New Object() {fromDate, toDate, Country, IsCalastone, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetCalastoneSearchAsync(ByVal fromDate As Date, ByVal toDate As Date, ByVal Country As String, ByVal IsCalastone As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetCalastoneSearchAsync(fromDate, toDate, Country, IsCalastone, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetCalastoneSearchAsync(ByVal fromDate As Date, ByVal toDate As Date, ByVal Country As String, ByVal IsCalastone As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetCalastoneSearchOperationCompleted Is Nothing) Then
                Me.GetCalastoneSearchOperationCompleted = AddressOf Me.OnGetCalastoneSearchOperationCompleted
            End If
            Me.InvokeAsync("GetCalastoneSearch", New Object() {fromDate, toDate, Country, IsCalastone, errMsg, stackTrace}, Me.GetCalastoneSearchOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetCalastoneSearchOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetCalastoneSearchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetCalastoneSearchCompleted(Me, New GetCalastoneSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFMSInfoByFundCode", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFMSInfoByFundCode(ByVal rmlifeDb As String, ByVal fundCode As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetFMSInfoByFundCode", New Object() {rmlifeDb, fundCode, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFMSInfoByFundCodeAsync(ByVal rmlifeDb As String, ByVal fundCode As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetFMSInfoByFundCodeAsync(rmlifeDb, fundCode, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFMSInfoByFundCodeAsync(ByVal rmlifeDb As String, ByVal fundCode As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetFMSInfoByFundCodeOperationCompleted Is Nothing) Then
                Me.GetFMSInfoByFundCodeOperationCompleted = AddressOf Me.OnGetFMSInfoByFundCodeOperationCompleted
            End If
            Me.InvokeAsync("GetFMSInfoByFundCode", New Object() {rmlifeDb, fundCode, errMsg, stackTrace}, Me.GetFMSInfoByFundCodeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFMSInfoByFundCodeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFMSInfoByFundCodeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFMSInfoByFundCodeCompleted(Me, New GetFMSInfoByFundCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmailAlert", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmailAlert(ByVal emailAlertCode As String, ByRef errMsg As String, ByRef stackTrace As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetEmailAlert", New Object() {emailAlertCode, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmailAlertAsync(ByVal emailAlertCode As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetEmailAlertAsync(emailAlertCode, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmailAlertAsync(ByVal emailAlertCode As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetEmailAlertOperationCompleted Is Nothing) Then
                Me.GetEmailAlertOperationCompleted = AddressOf Me.OnGetEmailAlertOperationCompleted
            End If
            Me.InvokeAsync("GetEmailAlert", New Object() {emailAlertCode, errMsg, stackTrace}, Me.GetEmailAlertOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmailAlertOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmailAlertCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmailAlertCompleted(Me, New GetEmailAlertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmailId", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmailId(ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("GetEmailId", New Object() {errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmailIdAsync(ByVal errMsg As String, ByVal stackTrace As String)
            Me.GetEmailIdAsync(errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmailIdAsync(ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.GetEmailIdOperationCompleted Is Nothing) Then
                Me.GetEmailIdOperationCompleted = AddressOf Me.OnGetEmailIdOperationCompleted
            End If
            Me.InvokeAsync("GetEmailId", New Object() {errMsg, stackTrace}, Me.GetEmailIdOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmailIdOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmailIdCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmailIdCompleted(Me, New GetEmailIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("GlobalHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertEmailMast", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InsertEmailMast(ByVal emailId As Integer, ByVal emailFrom As String, ByVal emailFromDisplay As String, ByVal emailTo As String, ByVal emailCc As String, ByVal emailBcc As String, ByVal emailSubject As String, ByVal status As String, ByVal createUser As String, ByRef errMsg As String, ByRef stackTrace As String) As Integer
            Dim results() As Object = Me.Invoke("InsertEmailMast", New Object() {emailId, emailFrom, emailFromDisplay, emailTo, emailCc, emailBcc, emailSubject, status, createUser, errMsg, stackTrace})
            errMsg = CType(results(1),String)
            stackTrace = CType(results(2),String)
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InsertEmailMastAsync(ByVal emailId As Integer, ByVal emailFrom As String, ByVal emailFromDisplay As String, ByVal emailTo As String, ByVal emailCc As String, ByVal emailBcc As String, ByVal emailSubject As String, ByVal status As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String)
            Me.InsertEmailMastAsync(emailId, emailFrom, emailFromDisplay, emailTo, emailCc, emailBcc, emailSubject, status, createUser, errMsg, stackTrace, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InsertEmailMastAsync(ByVal emailId As Integer, ByVal emailFrom As String, ByVal emailFromDisplay As String, ByVal emailTo As String, ByVal emailCc As String, ByVal emailBcc As String, ByVal emailSubject As String, ByVal status As String, ByVal createUser As String, ByVal errMsg As String, ByVal stackTrace As String, ByVal userState As Object)
            If (Me.InsertEmailMastOperationCompleted Is Nothing) Then
                Me.InsertEmailMastOperationCompleted = AddressOf Me.OnInsertEmailMastOperationCompleted
            End If
            Me.InvokeAsync("InsertEmailMast", New Object() {emailId, emailFrom, emailFromDisplay, emailTo, emailCc, emailBcc, emailSubject, status, createUser, errMsg, stackTrace}, Me.InsertEmailMastOperationCompleted, userState)
        End Sub
        
        Private Sub OnInsertEmailMastOperationCompleted(ByVal arg As Object)
            If (Not (Me.InsertEmailMastCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InsertEmailMastCompleted(Me, New InsertEmailMastCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://tempuri.org/", IsNullable:=false)>  _
    Partial Public Class GlobalHeader
        Inherits System.Web.Services.Protocols.SoapHeader
        
        Private gValField As GlobalVal
        
        Private anyAttrField() As System.Xml.XmlAttribute
        
        '''<remarks/>
        Public Property gVal() As GlobalVal
            Get
                Return Me.gValField
            End Get
            Set
                Me.gValField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAnyAttributeAttribute()>  _
        Public Property AnyAttr() As System.Xml.XmlAttribute()
            Get
                Return Me.anyAttrField
            End Get
            Set
                Me.anyAttrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class GlobalVal
        
        Private projectNameField As String
        
        Private userTypeField As String
        
        Private ccmDbNameField As String
        
        Private projectNameLASField As String
        
        Private userTypeLASField As String
        
        Private projectNameNBSField As String
        
        Private userTypeNBSField As String
        
        Private posDbNameField As String
        
        Private ciwDbNameField As String
        
        Private nbsDbNameField As String
        
        Private nbsConfigDbNameField As String
        
        Private cmEnvField As String
        
        Private mQ_CompanyIDField As String
        
        Private mQ_EnvironmentUseField As String
        
        Private mQ_ProjectAliasField As String
        
        Private mQ_UserIDField As String
        
        Private mQ_UserTypeField As String
        
        Private mQ_QueueManagerField As String
        
        Private mQ_RemoteQueueField As String
        
        Private mQ_ReplyToQueueField As String
        
        Private mQ_LocalQueueField As String
        
        '''<remarks/>
        Public Property ProjectName() As String
            Get
                Return Me.projectNameField
            End Get
            Set
                Me.projectNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserType() As String
            Get
                Return Me.userTypeField
            End Get
            Set
                Me.userTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CcmDbName() As String
            Get
                Return Me.ccmDbNameField
            End Get
            Set
                Me.ccmDbNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectNameLAS() As String
            Get
                Return Me.projectNameLASField
            End Get
            Set
                Me.projectNameLASField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserTypeLAS() As String
            Get
                Return Me.userTypeLASField
            End Get
            Set
                Me.userTypeLASField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ProjectNameNBS() As String
            Get
                Return Me.projectNameNBSField
            End Get
            Set
                Me.projectNameNBSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserTypeNBS() As String
            Get
                Return Me.userTypeNBSField
            End Get
            Set
                Me.userTypeNBSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PosDbName() As String
            Get
                Return Me.posDbNameField
            End Get
            Set
                Me.posDbNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CiwDbName() As String
            Get
                Return Me.ciwDbNameField
            End Get
            Set
                Me.ciwDbNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NbsDbName() As String
            Get
                Return Me.nbsDbNameField
            End Get
            Set
                Me.nbsDbNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NbsConfigDbName() As String
            Get
                Return Me.nbsConfigDbNameField
            End Get
            Set
                Me.nbsConfigDbNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CmEnv() As String
            Get
                Return Me.cmEnvField
            End Get
            Set
                Me.cmEnvField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MQ_CompanyID() As String
            Get
                Return Me.mQ_CompanyIDField
            End Get
            Set
                Me.mQ_CompanyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MQ_EnvironmentUse() As String
            Get
                Return Me.mQ_EnvironmentUseField
            End Get
            Set
                Me.mQ_EnvironmentUseField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MQ_ProjectAlias() As String
            Get
                Return Me.mQ_ProjectAliasField
            End Get
            Set
                Me.mQ_ProjectAliasField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MQ_UserID() As String
            Get
                Return Me.mQ_UserIDField
            End Get
            Set
                Me.mQ_UserIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MQ_UserType() As String
            Get
                Return Me.mQ_UserTypeField
            End Get
            Set
                Me.mQ_UserTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MQ_QueueManager() As String
            Get
                Return Me.mQ_QueueManagerField
            End Get
            Set
                Me.mQ_QueueManagerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MQ_RemoteQueue() As String
            Get
                Return Me.mQ_RemoteQueueField
            End Get
            Set
                Me.mQ_RemoteQueueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MQ_ReplyToQueue() As String
            Get
                Return Me.mQ_ReplyToQueueField
            End Get
            Set
                Me.mQ_ReplyToQueueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MQ_LocalQueue() As String
            Get
                Return Me.mQ_LocalQueueField
            End Get
            Set
                Me.mQ_LocalQueueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class LetterPrintSetBean
        
        Private print_set_codeField As String
        
        Private ltr_codeField As String
        
        Private seqField As Integer
        
        Private allowSoftCopyField As Boolean
        
        Private allowHardCopyField As Boolean
        
        Private create_userField As String
        
        Private create_dateField As Date
        
        Private last_upd_userField As String
        
        Private last_upd_dateField As Date
        
        '''<remarks/>
        Public Property Print_set_code() As String
            Get
                Return Me.print_set_codeField
            End Get
            Set
                Me.print_set_codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Ltr_code() As String
            Get
                Return Me.ltr_codeField
            End Get
            Set
                Me.ltr_codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Seq() As Integer
            Get
                Return Me.seqField
            End Get
            Set
                Me.seqField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AllowSoftCopy() As Boolean
            Get
                Return Me.allowSoftCopyField
            End Get
            Set
                Me.allowSoftCopyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AllowHardCopy() As Boolean
            Get
                Return Me.allowHardCopyField
            End Get
            Set
                Me.allowHardCopyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Create_user() As String
            Get
                Return Me.create_userField
            End Get
            Set
                Me.create_userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Create_date() As Date
            Get
                Return Me.create_dateField
            End Get
            Set
                Me.create_dateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Last_upd_user() As String
            Get
                Return Me.last_upd_userField
            End Get
            Set
                Me.last_upd_userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Last_upd_date() As Date
            Get
                Return Me.last_upd_dateField
            End Get
            Set
                Me.last_upd_dateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class LetterPrintFileBean
        
        Private printfile_codeField As String
        
        Private print_modeField As String
        
        Private printfile_descField As String
        
        Private receiver_typeField As String
        
        Private max_pageField As Integer
        
        Private create_userField As String
        
        Private create_dateField As Date
        
        Private last_upd_userField As String
        
        Private last_upd_dateField As Date
        
        Private printer_nameField As String
        
        Private coversheet_by_useridField As String
        
        Private hold_batchField As String
        
        '''<remarks/>
        Public Property Printfile_code() As String
            Get
                Return Me.printfile_codeField
            End Get
            Set
                Me.printfile_codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Print_mode() As String
            Get
                Return Me.print_modeField
            End Get
            Set
                Me.print_modeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Printfile_desc() As String
            Get
                Return Me.printfile_descField
            End Get
            Set
                Me.printfile_descField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Receiver_type() As String
            Get
                Return Me.receiver_typeField
            End Get
            Set
                Me.receiver_typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Max_page() As Integer
            Get
                Return Me.max_pageField
            End Get
            Set
                Me.max_pageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Create_user() As String
            Get
                Return Me.create_userField
            End Get
            Set
                Me.create_userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Create_date() As Date
            Get
                Return Me.create_dateField
            End Get
            Set
                Me.create_dateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Last_upd_user() As String
            Get
                Return Me.last_upd_userField
            End Get
            Set
                Me.last_upd_userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Last_upd_date() As Date
            Get
                Return Me.last_upd_dateField
            End Get
            Set
                Me.last_upd_dateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Printer_name() As String
            Get
                Return Me.printer_nameField
            End Get
            Set
                Me.printer_nameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Coversheet_by_userid() As String
            Get
                Return Me.coversheet_by_useridField
            End Get
            Set
                Me.coversheet_by_useridField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Hold_batch() As String
            Get
                Return Me.hold_batchField
            End Get
            Set
                Me.hold_batchField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class LetterImageBean
        
        Private ltr_image_codeField As String
        
        Private ltr_image_pathField As String
        
        Private page_xField As Double
        
        Private page_yField As Double
        
        Private widthField As Double
        
        Private heightField As Double
        
        Private create_userField As String
        
        Private create_dateField As Date
        
        Private last_upd_userField As String
        
        Private last_upd_dateField As Date
        
        '''<remarks/>
        Public Property Ltr_image_code() As String
            Get
                Return Me.ltr_image_codeField
            End Get
            Set
                Me.ltr_image_codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Ltr_image_path() As String
            Get
                Return Me.ltr_image_pathField
            End Get
            Set
                Me.ltr_image_pathField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Page_x() As Double
            Get
                Return Me.page_xField
            End Get
            Set
                Me.page_xField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Page_y() As Double
            Get
                Return Me.page_yField
            End Get
            Set
                Me.page_yField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Width() As Double
            Get
                Return Me.widthField
            End Get
            Set
                Me.widthField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Height() As Double
            Get
                Return Me.heightField
            End Get
            Set
                Me.heightField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Create_user() As String
            Get
                Return Me.create_userField
            End Get
            Set
                Me.create_userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Create_date() As Date
            Get
                Return Me.create_dateField
            End Get
            Set
                Me.create_dateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Last_upd_user() As String
            Get
                Return Me.last_upd_userField
            End Get
            Set
                Me.last_upd_userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Last_upd_date() As Date
            Get
                Return Me.last_upd_dateField
            End Get
            Set
                Me.last_upd_dateField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class LetterParamBean
        
        Private ltr_deptField As String
        
        Private ltr_codeField As String
        
        Private ltr_descField As String
        
        Private addr_roleField As String
        
        Private addr_typeField As String
        
        Private overwrite_latest_addrField As String
        
        Private ltr_headerField As String
        
        Private ltr_footerField As String
        
        Private ltr_bodyField As String
        
        Private ltr_headerimage_codeField As String
        
        Private ltr_footerimage_codeField As String
        
        Private ltr_header_typeField As String
        
        Private ltr_footer_typeField As String
        
        Private upload_toField As String
        
        Private is_printing_setField As String
        
        Private client_copyField As String
        
        Private agent_copyField As String
        
        Private prog_keyField As String
        
        Private printfile_codeField As String
        
        Private create_userField As String
        
        Private create_dateField As Date
        
        Private last_upd_userField As String
        
        Private last_upd_dateField As Date
        
        Private fileTypeField As String
        
        Private ui_dropdown_searchField As String
        
        Private ltr_verField As Short
        
        Private as400_file_typeField As String
        
        Private as400_fileField As String
        
        Private as400_ltr_typeField As String
        
        Private country_codeField As String
        
        Private company_codeField As String
        
        Private ltr_skip_mail_mergeField As String
        
        '''<remarks/>
        Public Property Ltr_dept() As String
            Get
                Return Me.ltr_deptField
            End Get
            Set
                Me.ltr_deptField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Ltr_code() As String
            Get
                Return Me.ltr_codeField
            End Get
            Set
                Me.ltr_codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Ltr_desc() As String
            Get
                Return Me.ltr_descField
            End Get
            Set
                Me.ltr_descField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Addr_role() As String
            Get
                Return Me.addr_roleField
            End Get
            Set
                Me.addr_roleField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Addr_type() As String
            Get
                Return Me.addr_typeField
            End Get
            Set
                Me.addr_typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Overwrite_latest_addr() As String
            Get
                Return Me.overwrite_latest_addrField
            End Get
            Set
                Me.overwrite_latest_addrField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Ltr_header() As String
            Get
                Return Me.ltr_headerField
            End Get
            Set
                Me.ltr_headerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Ltr_footer() As String
            Get
                Return Me.ltr_footerField
            End Get
            Set
                Me.ltr_footerField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Ltr_body() As String
            Get
                Return Me.ltr_bodyField
            End Get
            Set
                Me.ltr_bodyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Ltr_headerimage_code() As String
            Get
                Return Me.ltr_headerimage_codeField
            End Get
            Set
                Me.ltr_headerimage_codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Ltr_footerimage_code() As String
            Get
                Return Me.ltr_footerimage_codeField
            End Get
            Set
                Me.ltr_footerimage_codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Ltr_header_type() As String
            Get
                Return Me.ltr_header_typeField
            End Get
            Set
                Me.ltr_header_typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Ltr_footer_type() As String
            Get
                Return Me.ltr_footer_typeField
            End Get
            Set
                Me.ltr_footer_typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Upload_to() As String
            Get
                Return Me.upload_toField
            End Get
            Set
                Me.upload_toField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Is_printing_set() As String
            Get
                Return Me.is_printing_setField
            End Get
            Set
                Me.is_printing_setField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Client_copy() As String
            Get
                Return Me.client_copyField
            End Get
            Set
                Me.client_copyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Agent_copy() As String
            Get
                Return Me.agent_copyField
            End Get
            Set
                Me.agent_copyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Prog_key() As String
            Get
                Return Me.prog_keyField
            End Get
            Set
                Me.prog_keyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Printfile_code() As String
            Get
                Return Me.printfile_codeField
            End Get
            Set
                Me.printfile_codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Create_user() As String
            Get
                Return Me.create_userField
            End Get
            Set
                Me.create_userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Create_date() As Date
            Get
                Return Me.create_dateField
            End Get
            Set
                Me.create_dateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Last_upd_user() As String
            Get
                Return Me.last_upd_userField
            End Get
            Set
                Me.last_upd_userField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Last_upd_date() As Date
            Get
                Return Me.last_upd_dateField
            End Get
            Set
                Me.last_upd_dateField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FileType() As String
            Get
                Return Me.fileTypeField
            End Get
            Set
                Me.fileTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Ui_dropdown_search() As String
            Get
                Return Me.ui_dropdown_searchField
            End Get
            Set
                Me.ui_dropdown_searchField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Ltr_ver() As Short
            Get
                Return Me.ltr_verField
            End Get
            Set
                Me.ltr_verField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property As400_file_type() As String
            Get
                Return Me.as400_file_typeField
            End Get
            Set
                Me.as400_file_typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property As400_file() As String
            Get
                Return Me.as400_fileField
            End Get
            Set
                Me.as400_fileField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property As400_ltr_type() As String
            Get
                Return Me.as400_ltr_typeField
            End Get
            Set
                Me.as400_ltr_typeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Country_code() As String
            Get
                Return Me.country_codeField
            End Get
            Set
                Me.country_codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Company_code() As String
            Get
                Return Me.company_codeField
            End Get
            Set
                Me.company_codeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Ltr_skip_mail_merge() As String
            Get
                Return Me.ltr_skip_mail_mergeField
            End Get
            Set
                Me.ltr_skip_mail_mergeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class LetterGenerateInfo
        
        Private cmIdxField As String
        
        Private outputFileNameField As String
        
        Private fileByteField() As Byte
        
        '''<remarks/>
        Public Property cmIdx() As String
            Get
                Return Me.cmIdxField
            End Get
            Set
                Me.cmIdxField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property outputFileName() As String
            Get
                Return Me.outputFileNameField
            End Get
            Set
                Me.outputFileNameField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlElementAttribute(DataType:="base64Binary")>  _
        Public Property fileByte() As Byte()
            Get
                Return Me.fileByteField
            End Get
            Set
                Me.fileByteField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class BaseResponseOfLetterGenerateInfo
        
        Private responseIdField As String
        
        Private responseTimeField As Date
        
        Private isSuccessField As Boolean
        
        Private errorMsgField As String
        
        Private errStackTraceField As String
        
        Private valueField As LetterGenerateInfo
        
        '''<remarks/>
        Public Property ResponseId() As String
            Get
                Return Me.responseIdField
            End Get
            Set
                Me.responseIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ResponseTime() As Date
            Get
                Return Me.responseTimeField
            End Get
            Set
                Me.responseTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsSuccess() As Boolean
            Get
                Return Me.isSuccessField
            End Get
            Set
                Me.isSuccessField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorMsg() As String
            Get
                Return Me.errorMsgField
            End Get
            Set
                Me.errorMsgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrStackTrace() As String
            Get
                Return Me.errStackTraceField
            End Get
            Set
                Me.errStackTraceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Value() As LetterGenerateInfo
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class LetterGenerateInput
        
        Private ltrRequestIdField As String
        
        Private fileFormatField As FileFormat
        
        Private isUploadFileField As Boolean
        
        Private docTypeField As DocTypeEnum
        
        Private cMEvnField As String
        
        '''<remarks/>
        Public Property LtrRequestId() As String
            Get
                Return Me.ltrRequestIdField
            End Get
            Set
                Me.ltrRequestIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FileFormat() As FileFormat
            Get
                Return Me.fileFormatField
            End Get
            Set
                Me.fileFormatField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsUploadFile() As Boolean
            Get
                Return Me.isUploadFileField
            End Get
            Set
                Me.isUploadFileField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DocType() As DocTypeEnum
            Get
                Return Me.docTypeField
            End Get
            Set
                Me.docTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CMEvn() As String
            Get
                Return Me.cMEvnField
            End Get
            Set
                Me.cMEvnField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum FileFormat
        
        '''<remarks/>
        pdf
        
        '''<remarks/>
        docx
        
        '''<remarks/>
        xlsx
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Public Enum DocTypeEnum
        
        '''<remarks/>
        LFLifeDoc
        
        '''<remarks/>
        LFPADoc
        
        '''<remarks/>
        LFCEDoc
    End Enum
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class LetterInfo
        
        Private ltrCodeField As String
        
        Private policyNoField As String
        
        Private ltrRequestIdField As Integer
        
        Private ltrBatchIdField As Integer
        
        Private ltrPrintModeField As String
        
        Private countryCodeField As String
        
        Private companyCodeField As String
        
        '''<remarks/>
        Public Property LtrCode() As String
            Get
                Return Me.ltrCodeField
            End Get
            Set
                Me.ltrCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PolicyNo() As String
            Get
                Return Me.policyNoField
            End Get
            Set
                Me.policyNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LtrRequestId() As Integer
            Get
                Return Me.ltrRequestIdField
            End Get
            Set
                Me.ltrRequestIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LtrBatchId() As Integer
            Get
                Return Me.ltrBatchIdField
            End Get
            Set
                Me.ltrBatchIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LtrPrintMode() As String
            Get
                Return Me.ltrPrintModeField
            End Get
            Set
                Me.ltrPrintModeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CountryCode() As String
            Get
                Return Me.countryCodeField
            End Get
            Set
                Me.countryCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompanyCode() As String
            Get
                Return Me.companyCodeField
            End Get
            Set
                Me.companyCodeField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class BaseResponseOfLetterInfo
        
        Private responseIdField As String
        
        Private responseTimeField As Date
        
        Private isSuccessField As Boolean
        
        Private errorMsgField As String
        
        Private errStackTraceField As String
        
        Private valueField As LetterInfo
        
        '''<remarks/>
        Public Property ResponseId() As String
            Get
                Return Me.responseIdField
            End Get
            Set
                Me.responseIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ResponseTime() As Date
            Get
                Return Me.responseTimeField
            End Get
            Set
                Me.responseTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsSuccess() As Boolean
            Get
                Return Me.isSuccessField
            End Get
            Set
                Me.isSuccessField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorMsg() As String
            Get
                Return Me.errorMsgField
            End Get
            Set
                Me.errorMsgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrStackTrace() As String
            Get
                Return Me.errStackTraceField
            End Get
            Set
                Me.errStackTraceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Value() As LetterInfo
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class LetterRegion
        
        Private rowNumField As Integer
        
        Private columnNumField As Integer
        
        Private fieldNameField As String
        
        Private fieldValueField As String
        
        '''<remarks/>
        Public Property RowNum() As Integer
            Get
                Return Me.rowNumField
            End Get
            Set
                Me.rowNumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ColumnNum() As Integer
            Get
                Return Me.columnNumField
            End Get
            Set
                Me.columnNumField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FieldName() As String
            Get
                Return Me.fieldNameField
            End Get
            Set
                Me.fieldNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FieldValue() As String
            Get
                Return Me.fieldValueField
            End Get
            Set
                Me.fieldValueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class LetterField
        
        Private fieldNameField As String
        
        Private fieldValueField As String
        
        '''<remarks/>
        Public Property FieldName() As String
            Get
                Return Me.fieldNameField
            End Get
            Set
                Me.fieldNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FieldValue() As String
            Get
                Return Me.fieldValueField
            End Get
            Set
                Me.fieldValueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class LetterRequest
        
        Private systemIdField As String
        
        Private letterCodeField As String
        
        Private policyNoField As String
        
        Private printModeField As String
        
        Private printStatusField As String
        
        Private uploadStatusField As String
        
        Private reprintRequestIdField As Integer
        
        Private printQueueField As String
        
        Private watermarkField As String
        
        Private filenameField As String
        
        Private remarkField As String
        
        Private createUserField As String
        
        Private transactionTypeField As String
        
        Private transactionIdField As Integer
        
        Private environmentField As String
        
        Private countryField As String
        
        Private companyCodeField As String
        
        Private printDestField As String
        
        '''<remarks/>
        Public Property SystemId() As String
            Get
                Return Me.systemIdField
            End Get
            Set
                Me.systemIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LetterCode() As String
            Get
                Return Me.letterCodeField
            End Get
            Set
                Me.letterCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PolicyNo() As String
            Get
                Return Me.policyNoField
            End Get
            Set
                Me.policyNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrintMode() As String
            Get
                Return Me.printModeField
            End Get
            Set
                Me.printModeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrintStatus() As String
            Get
                Return Me.printStatusField
            End Get
            Set
                Me.printStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UploadStatus() As String
            Get
                Return Me.uploadStatusField
            End Get
            Set
                Me.uploadStatusField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReprintRequestId() As Integer
            Get
                Return Me.reprintRequestIdField
            End Get
            Set
                Me.reprintRequestIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrintQueue() As String
            Get
                Return Me.printQueueField
            End Get
            Set
                Me.printQueueField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Watermark() As String
            Get
                Return Me.watermarkField
            End Get
            Set
                Me.watermarkField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Filename() As String
            Get
                Return Me.filenameField
            End Get
            Set
                Me.filenameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Remark() As String
            Get
                Return Me.remarkField
            End Get
            Set
                Me.remarkField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CreateUser() As String
            Get
                Return Me.createUserField
            End Get
            Set
                Me.createUserField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TransactionType() As String
            Get
                Return Me.transactionTypeField
            End Get
            Set
                Me.transactionTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TransactionId() As Integer
            Get
                Return Me.transactionIdField
            End Get
            Set
                Me.transactionIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Environment() As String
            Get
                Return Me.environmentField
            End Get
            Set
                Me.environmentField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Country() As String
            Get
                Return Me.countryField
            End Get
            Set
                Me.countryField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompanyCode() As String
            Get
                Return Me.companyCodeField
            End Get
            Set
                Me.companyCodeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PrintDest() As String
            Get
                Return Me.printDestField
            End Get
            Set
                Me.printDestField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class MailMergeRegionInfo
        
        Private fieldsField() As MailMergeFieldInfo
        
        Private nameField As String
        
        '''<remarks/>
        Public Property Fields() As MailMergeFieldInfo()
            Get
                Return Me.fieldsField
            End Get
            Set
                Me.fieldsField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set
                Me.nameField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class MailMergeFieldInfo
        
        Private fieldNameNoPrefixField As String
        
        Private fieldNameField As String
        
        Private textBeforeField As String
        
        Private textAfterField As String
        
        Private isMappedField As Boolean
        
        Private isVerticalFormattingField As Boolean
        
        Private resultField As String
        
        Private displayResultField As String
        
        Private isLockedField As Boolean
        
        Private isDirtyField As Boolean
        
        Private localeIdField As Integer
        
        '''<remarks/>
        Public Property FieldNameNoPrefix() As String
            Get
                Return Me.fieldNameNoPrefixField
            End Get
            Set
                Me.fieldNameNoPrefixField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property FieldName() As String
            Get
                Return Me.fieldNameField
            End Get
            Set
                Me.fieldNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TextBefore() As String
            Get
                Return Me.textBeforeField
            End Get
            Set
                Me.textBeforeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TextAfter() As String
            Get
                Return Me.textAfterField
            End Get
            Set
                Me.textAfterField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsMapped() As Boolean
            Get
                Return Me.isMappedField
            End Get
            Set
                Me.isMappedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsVerticalFormatting() As Boolean
            Get
                Return Me.isVerticalFormattingField
            End Get
            Set
                Me.isVerticalFormattingField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Result() As String
            Get
                Return Me.resultField
            End Get
            Set
                Me.resultField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DisplayResult() As String
            Get
                Return Me.displayResultField
            End Get
            Set
                Me.displayResultField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsLocked() As Boolean
            Get
                Return Me.isLockedField
            End Get
            Set
                Me.isLockedField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsDirty() As Boolean
            Get
                Return Me.isDirtyField
            End Get
            Set
                Me.isDirtyField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LocaleId() As Integer
            Get
                Return Me.localeIdField
            End Get
            Set
                Me.localeIdField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WordDocMailMergeDOM
        
        Private fieldListField() As MailMergeFieldInfo
        
        Private regionListField() As MailMergeRegionInfo
        
        '''<remarks/>
        Public Property FieldList() As MailMergeFieldInfo()
            Get
                Return Me.fieldListField
            End Get
            Set
                Me.fieldListField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property RegionList() As MailMergeRegionInfo()
            Get
                Return Me.regionListField
            End Get
            Set
                Me.regionListField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class BaseResponseOfWordDocMailMergeDOM
        
        Private responseIdField As String
        
        Private responseTimeField As Date
        
        Private isSuccessField As Boolean
        
        Private errorMsgField As String
        
        Private errStackTraceField As String
        
        Private valueField As WordDocMailMergeDOM
        
        '''<remarks/>
        Public Property ResponseId() As String
            Get
                Return Me.responseIdField
            End Get
            Set
                Me.responseIdField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ResponseTime() As Date
            Get
                Return Me.responseTimeField
            End Get
            Set
                Me.responseTimeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IsSuccess() As Boolean
            Get
                Return Me.isSuccessField
            End Get
            Set
                Me.isSuccessField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrorMsg() As String
            Get
                Return Me.errorMsgField
            End Get
            Set
                Me.errorMsgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrStackTrace() As String
            Get
                Return Me.errStackTraceField
            End Get
            Set
                Me.errStackTraceField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Value() As WordDocMailMergeDOM
            Get
                Return Me.valueField
            End Get
            Set
                Me.valueField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class BasicDataSetStruct
        
        Private resDSField As System.Data.DataSet
        
        Private errMsgField As String
        
        Private stackTraceField As String
        
        '''<remarks/>
        Public Property ResDS() As System.Data.DataSet
            Get
                Return Me.resDSField
            End Get
            Set
                Me.resDSField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrMsg() As String
            Get
                Return Me.errMsgField
            End Get
            Set
                Me.errMsgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StackTrace() As String
            Get
                Return Me.stackTraceField
            End Get
            Set
                Me.stackTraceField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/")>  _
    Partial Public Class BasicDataTableStruct
        
        Private resDTField As System.Data.DataTable
        
        Private errMsgField As String
        
        Private stackTraceField As String
        
        '''<remarks/>
        Public Property ResDT() As System.Data.DataTable
            Get
                Return Me.resDTField
            End Get
            Set
                Me.resDTField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ErrMsg() As String
            Get
                Return Me.errMsgField
            End Get
            Set
                Me.errMsgField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property StackTrace() As String
            Get
                Return Me.stackTraceField
            End Get
            Set
                Me.stackTraceField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateFundRiskSetupStatusCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateFundRiskSetupStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateFundRiskSetupStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AddFundRiskSetupMastReqIDCompletedEventHandler(ByVal sender As Object, ByVal e As AddFundRiskSetupMastReqIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddFundRiskSetupMastReqIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertFundRiskDerCompletedEventHandler(ByVal sender As Object, ByVal e As InsertFundRiskDerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertFundRiskDerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DeleteFundRiskDerCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteFundRiskDerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteFundRiskDerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub FundRisk_RiskDerSearchCompletedEventHandler(ByVal sender As Object, ByVal e As FundRisk_RiskDerSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FundRisk_RiskDerSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateMPFINVFundCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateMPFINVFundCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateMPFINVFundCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignValidationSetupSubmit_LifeAsiaCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignValidationSetupSubmit_LifeAsiaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignValidationSetupSubmit_LifeAsiaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignCampInfoSetupSubmit_LifeAsiaCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignCampInfoSetupSubmit_LifeAsiaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignCampInfoSetupSubmit_LifeAsiaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignCampSettingSetupSubmit_LifeAsiaCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignCampSettingSetupSubmit_LifeAsiaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignCampSettingSetupSubmit_LifeAsiaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignTierSetupSubmit_LifeAsiaCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignTierSetupSubmit_LifeAsiaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignTierSetupSubmit_LifeAsiaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignRemarkSetupSubmit_LifeAsiaCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignRemarkSetupSubmit_LifeAsiaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignRemarkSetupSubmit_LifeAsiaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignCampCcSetupSubmit_LifeAsiaCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignCampCcSetupSubmit_LifeAsiaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignCampCcSetupSubmit_LifeAsiaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignRemapWordSetupSubmit_LifeAsiaCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignRemapWordSetupSubmit_LifeAsiaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignRemapWordSetupSubmit_LifeAsiaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignCcMastSetupSubmit_LifeAsiaCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignCcMastSetupSubmit_LifeAsiaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignCcMastSetupSubmit_LifeAsiaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignCheckEndorsementCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignCheckEndorsementCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignCheckEndorsementCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignCommCtrlSetupSubmit_LifeAsiaCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignCommCtrlSetupSubmit_LifeAsiaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignCommCtrlSetupSubmit_LifeAsiaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignCommTierSetupSubmit_LifeAsiaCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignCommTierSetupSubmit_LifeAsiaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignCommTierSetupSubmit_LifeAsiaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignCommRateSetupSubmit_LifeAsiaCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignCommRateSetupSubmit_LifeAsiaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignCommRateSetupSubmit_LifeAsiaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getePAMReconCodeTableCompletedEventHandler(ByVal sender As Object, ByVal e As getePAMReconCodeTableCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getePAMReconCodeTableCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property rtnVal() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getLastBusinessDateCompletedEventHandler(ByVal sender As Object, ByVal e As getLastBusinessDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getLastBusinessDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub writeReconReportLogCompletedEventHandler(ByVal sender As Object, ByVal e As writeReconReportLogCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class writeReconReportLogCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub writeAppEventLogCompletedEventHandler(ByVal sender As Object, ByVal e As writeAppEventLogCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class writeAppEventLogCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub upload2SQLbyBulkCopyCompletedEventHandler(ByVal sender As Object, ByVal e As upload2SQLbyBulkCopyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class upload2SQLbyBulkCopyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub removeDataCompletedEventHandler(ByVal sender As Object, ByVal e As removeDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class removeDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getAS400UnitBalUTRSDataCompletedEventHandler(ByVal sender As Object, ByVal e As getAS400UnitBalUTRSDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAS400UnitBalUTRSDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtRtn() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getAS400UTRNDataCompletedEventHandler(ByVal sender As Object, ByVal e As getAS400UTRNDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAS400UTRNDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtRtn() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getUnitBalRptDataCompletedEventHandler(ByVal sender As Object, ByVal e As getUnitBalRptDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getUnitBalRptDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtRtn() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getConnectionStringCompletedEventHandler(ByVal sender As Object, ByVal e As getConnectionStringCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getConnectionStringCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property connstr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getAS400ConnectionStringCompletedEventHandler(ByVal sender As Object, ByVal e As getAS400ConnectionStringCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAS400ConnectionStringCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property connStr() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub isWorkingDayCompletedEventHandler(ByVal sender As Object, ByVal e As isWorkingDayCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class isWorkingDayCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getPolicyStatusCompletedEventHandler(ByVal sender As Object, ByVal e As getPolicyStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getPolicyStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtRtn() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getAS400FundMovmentUTRNRvsTxnListCompletedEventHandler(ByVal sender As Object, ByVal e As getAS400FundMovmentUTRNRvsTxnListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getAS400FundMovmentUTRNRvsTxnListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtRtn() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub getFundMovementRptTxnListCompletedEventHandler(ByVal sender As Object, ByVal e As getFundMovementRptTxnListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getFundMovementRptTxnListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtRtn() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub deleteAS400DownloadFileCompletedEventHandler(ByVal sender As Object, ByVal e As deleteAS400DownloadFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class deleteAS400DownloadFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CopyGeneralLedgerByAccountCodeCompletedEventHandler(ByVal sender As Object, ByVal e As CopyGeneralLedgerByAccountCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CopyGeneralLedgerByAccountCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property row() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetGeneralLedgerReportByYearAndMonthCompletedEventHandler(ByVal sender As Object, ByVal e As GetGeneralLedgerReportByYearAndMonthCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetGeneralLedgerReportByYearAndMonthCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtRtn() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WriteCCMEventLogCompletedEventHandler(ByVal sender As Object, ByVal e As WriteCCMEventLogCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WriteCCMEventLogCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub WriteCCMExportFileLogCompletedEventHandler(ByVal sender As Object, ByVal e As WriteCCMExportFileLogCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class WriteCCMExportFileLogCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetExportFileHistoryCompletedEventHandler(ByVal sender As Object, ByVal e As GetExportFileHistoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetExportFileHistoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dtRtn() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetBOCOMPolicyNoListByDateRangeCompletedEventHandler(ByVal sender As Object, ByVal e As GetBOCOMPolicyNoListByDateRangeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBOCOMPolicyNoListByDateRangeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetPolicyAddressCompletedEventHandler(ByVal sender As Object, ByVal e As GetPolicyAddressCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPolicyAddressCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub PrintSTPRequestByLetterRequestIDCompletedEventHandler(ByVal sender As Object, ByVal e As PrintSTPRequestByLetterRequestIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PrintSTPRequestByLetterRequestIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetLetterCodeCompletedEventHandler(ByVal sender As Object, ByVal e As GetLetterCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLetterCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetLetterCodeWithSubTypeCompletedEventHandler(ByVal sender As Object, ByVal e As GetLetterCodeWithSubTypeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLetterCodeWithSubTypeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetPrintFileToppanCompletedEventHandler(ByVal sender As Object, ByVal e As GetPrintFileToppanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPrintFileToppanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertToppanReconCompletedEventHandler(ByVal sender As Object, ByVal e As InsertToppanReconCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertToppanReconCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertToppanMailerCompletedEventHandler(ByVal sender As Object, ByVal e As InsertToppanMailerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertToppanMailerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetNightBatchPrintFileReconCompletedEventHandler(ByVal sender As Object, ByVal e As GetNightBatchPrintFileReconCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetNightBatchPrintFileReconCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCCMSFundTransRulesCompletedEventHandler(ByVal sender As Object, ByVal e As GetCCMSFundTransRulesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCCMSFundTransRulesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BasicDataTableStruct
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BasicDataTableStruct)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCIWAccumulatedPremiumPaidCompletedEventHandler(ByVal sender As Object, ByVal e As GetCIWAccumulatedPremiumPaidCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCIWAccumulatedPremiumPaidCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetProductTypeByPolNoCompletedEventHandler(ByVal sender As Object, ByVal e As GetProductTypeByPolNoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProductTypeByPolNoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetRoleInfoByPolNoCompletedEventHandler(ByVal sender As Object, ByVal e As GetRoleInfoByPolNoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRoleInfoByPolNoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetFundGainLossValueCompletedEventHandler(ByVal sender As Object, ByVal e As GetFundGainLossValueCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFundGainLossValueCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BasicDataSetStruct
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BasicDataSetStruct)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetEmailNotificationCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmailNotificationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmailNotificationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateEmailNotificationStatusCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateEmailNotificationStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateEmailNotificationStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetLetterTemplateMailMergeInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetLetterTemplateMailMergeInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLetterTemplateMailMergeInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BaseResponseOfWordDocMailMergeDOM
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BaseResponseOfWordDocMailMergeDOM)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetParamAS400MappingCompletedEventHandler(ByVal sender As Object, ByVal e As GetParamAS400MappingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetParamAS400MappingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCustomerAddressCompletedEventHandler(ByVal sender As Object, ByVal e As GetCustomerAddressCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCustomerAddressCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertLetterDataCompletedEventHandler(ByVal sender As Object, ByVal e As InsertLetterDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertLetterDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BaseResponseOfLetterInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BaseResponseOfLetterInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GenerateFileCompletedEventHandler(ByVal sender As Object, ByVal e As GenerateFileCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GenerateFileCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As BaseResponseOfLetterGenerateInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),BaseResponseOfLetterGenerateInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignCommControlSearch_DBMotoCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignCommControlSearch_DBMotoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignCommControlSearch_DBMotoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignCommTierSearch_DBMotoCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignCommTierSearch_DBMotoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignCommTierSearch_DBMotoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignCommRateSearch_DBMotoCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignCommRateSearch_DBMotoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignCommRateSearch_DBMotoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertCampCommTierCompletedEventHandler(ByVal sender As Object, ByVal e As InsertCampCommTierCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCampCommTierCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertCampCommRateCompletedEventHandler(ByVal sender As Object, ByVal e As InsertCampCommRateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCampCommRateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertCampCommCtrlCompletedEventHandler(ByVal sender As Object, ByVal e As InsertCampCommCtrlCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCampCommCtrlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCampCommTierMaxReqSeqCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampCommTierMaxReqSeqCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCampCommTierMaxReqSeqCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCampCommRateMaxReqSeqCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampCommRateMaxReqSeqCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCampCommRateMaxReqSeqCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCampCommCtrlMaxReqSeqCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampCommCtrlMaxReqSeqCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCampCommCtrlMaxReqSeqCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignCommTierSearchCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignCommTierSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignCommTierSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignCommRateSearchCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignCommRateSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignCommRateSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignCommCtrlSearchCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignCommCtrlSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignCommCtrlSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateCampCommTierCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampCommTierCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCampCommTierCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateCampCommRateCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampCommRateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCampCommRateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateCampCommCtrlCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampCommCtrlCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCampCommCtrlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DelCampaignCommTierCompletedEventHandler(ByVal sender As Object, ByVal e As DelCampaignCommTierCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DelCampaignCommTierCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DelCampaignCommRateCompletedEventHandler(ByVal sender As Object, ByVal e As DelCampaignCommRateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DelCampaignCommRateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DelCampaignCommCtrlCompletedEventHandler(ByVal sender As Object, ByVal e As DelCampaignCommCtrlCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DelCampaignCommCtrlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCampaignRequestCommentCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampaignRequestCommentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCampaignRequestCommentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertCampaignRequestCommentCompletedEventHandler(ByVal sender As Object, ByVal e As InsertCampaignRequestCommentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCampaignRequestCommentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCampaignRequestRefNumberCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampaignRequestRefNumberCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCampaignRequestRefNumberCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCampaignPremiumDiscountSummaryCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampaignPremiumDiscountSummaryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCampaignPremiumDiscountSummaryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCampaignCommissionSummaryCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampaignCommissionSummaryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCampaignCommissionSummaryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCampaignCodeNextSeqIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampaignCodeNextSeqIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCampaignCodeNextSeqIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCampaignRequestNumNextSeqIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampaignRequestNumNextSeqIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCampaignRequestNumNextSeqIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub FundRiskMPFINVFundSearchCompletedEventHandler(ByVal sender As Object, ByVal e As FundRiskMPFINVFundSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FundRiskMPFINVFundSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertFundIgnoreCodeCompletedEventHandler(ByVal sender As Object, ByVal e As InsertFundIgnoreCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertFundIgnoreCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DeleteFundIgnoreCodeCompletedEventHandler(ByVal sender As Object, ByVal e As DeleteFundIgnoreCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeleteFundIgnoreCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetFundRiskSetupMastByStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetFundRiskSetupMastByStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFundRiskSetupMastByStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateFundRiskSetupMastCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateFundRiskSetupMastCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateFundRiskSetupMastCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertEmailAttachmentCompletedEventHandler(ByVal sender As Object, ByVal e As InsertEmailAttachmentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertEmailAttachmentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateEmailStatusCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateEmailStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateEmailStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetEmailByIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmailByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmailByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SendEmailByIdCompletedEventHandler(ByVal sender As Object, ByVal e As SendEmailByIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendEmailByIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCampDefaultMaxReqSeqCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampDefaultMaxReqSeqCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCampDefaultMaxReqSeqCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertCampDefaultCompletedEventHandler(ByVal sender As Object, ByVal e As InsertCampDefaultCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCampDefaultCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCampSetupMastByStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampSetupMastByStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCampSetupMastByStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AddCampSetupMastReqIDCompletedEventHandler(ByVal sender As Object, ByVal e As AddCampSetupMastReqIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AddCampSetupMastReqIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignDefaultSearchCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignDefaultSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignDefaultSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DelCampaignDefaultCompletedEventHandler(ByVal sender As Object, ByVal e As DelCampaignDefaultCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DelCampaignDefaultCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateCampDefaultCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampDefaultCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCampDefaultCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateCampSetupStatusCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampSetupStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCampSetupStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertCampValidationCompletedEventHandler(ByVal sender As Object, ByVal e As InsertCampValidationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCampValidationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCampValidationMaxReqSeqCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampValidationMaxReqSeqCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCampValidationMaxReqSeqCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignValidationSearchCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignValidationSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignValidationSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DelCampaignValidationCompletedEventHandler(ByVal sender As Object, ByVal e As DelCampaignValidationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DelCampaignValidationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateCampValidationCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampValidationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCampValidationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignValidationSearch_DBMotoCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignValidationSearch_DBMotoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignValidationSearch_DBMotoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertCampCampInfoCompletedEventHandler(ByVal sender As Object, ByVal e As InsertCampCampInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCampCampInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCampCampInfoMaxReqSeqCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampCampInfoMaxReqSeqCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCampCampInfoMaxReqSeqCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignCampInfoSearchCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignCampInfoSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignCampInfoSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DelCampaignCampInfoCompletedEventHandler(ByVal sender As Object, ByVal e As DelCampaignCampInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DelCampaignCampInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateCampCampInfoCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampCampInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCampCampInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignCampInfoSearch_DBMotoCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignCampInfoSearch_DBMotoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignCampInfoSearch_DBMotoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateCalastoneMastStatusCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCalastoneMastStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCalastoneMastStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertCampCampSettingCompletedEventHandler(ByVal sender As Object, ByVal e As InsertCampCampSettingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCampCampSettingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCampCampSettingMaxReqSeqCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampCampSettingMaxReqSeqCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCampCampSettingMaxReqSeqCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignCampSettingSearchCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignCampSettingSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignCampSettingSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DelCampaignCampSettingCompletedEventHandler(ByVal sender As Object, ByVal e As DelCampaignCampSettingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DelCampaignCampSettingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateCampCampSettingCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampCampSettingCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCampCampSettingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignCampSettingSearch_DBMotoCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignCampSettingSearch_DBMotoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignCampSettingSearch_DBMotoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertCampTierCompletedEventHandler(ByVal sender As Object, ByVal e As InsertCampTierCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCampTierCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCampTierMaxReqSeqCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampTierMaxReqSeqCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCampTierMaxReqSeqCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignTierSearchCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignTierSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignTierSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DelCampaignTierCompletedEventHandler(ByVal sender As Object, ByVal e As DelCampaignTierCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DelCampaignTierCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateCampTierCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampTierCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCampTierCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignTierSearch_DBMotoCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignTierSearch_DBMotoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignTierSearch_DBMotoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertCampRemarkCompletedEventHandler(ByVal sender As Object, ByVal e As InsertCampRemarkCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCampRemarkCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCampRemarkMaxReqSeqCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampRemarkMaxReqSeqCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCampRemarkMaxReqSeqCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignRemarkSearchCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignRemarkSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignRemarkSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DelCampaignRemarkCompletedEventHandler(ByVal sender As Object, ByVal e As DelCampaignRemarkCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DelCampaignRemarkCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateCampRemarkCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampRemarkCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCampRemarkCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignRemarkSearch_DBMotoCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignRemarkSearch_DBMotoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignRemarkSearch_DBMotoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertCampCampCcCompletedEventHandler(ByVal sender As Object, ByVal e As InsertCampCampCcCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCampCampCcCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCampCampCcMaxReqSeqCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampCampCcMaxReqSeqCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCampCampCcMaxReqSeqCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignCampCcSearchCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignCampCcSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignCampCcSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DelCampaignCampCcCompletedEventHandler(ByVal sender As Object, ByVal e As DelCampaignCampCcCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DelCampaignCampCcCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateCampCampCcCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampCampCcCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCampCampCcCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignCampCcSearch_DBMotoCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignCampCcSearch_DBMotoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignCampCcSearch_DBMotoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertCampCcMastCompletedEventHandler(ByVal sender As Object, ByVal e As InsertCampCcMastCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCampCcMastCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCampCcMastMaxReqSeqCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampCcMastMaxReqSeqCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCampCcMastMaxReqSeqCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignCcMastSearchCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignCcMastSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignCcMastSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DelCampaignCcMastCompletedEventHandler(ByVal sender As Object, ByVal e As DelCampaignCcMastCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DelCampaignCcMastCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateCampCcMastCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampCcMastCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCampCcMastCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignCcMastSearch_DBMotoCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignCcMastSearch_DBMotoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignCcMastSearch_DBMotoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertCampRemapWordCompletedEventHandler(ByVal sender As Object, ByVal e As InsertCampRemapWordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCampRemapWordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCampRemapWordMaxReqSeqCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampRemapWordMaxReqSeqCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCampRemapWordMaxReqSeqCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignRemapWordSearchCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignRemapWordSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignRemapWordSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DelCampaignRemapWordCompletedEventHandler(ByVal sender As Object, ByVal e As DelCampaignRemapWordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DelCampaignRemapWordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateCampRemapWordCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampRemapWordCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCampRemapWordCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignRemapWordSearch_DBMotoCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignRemapWordSearch_DBMotoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignRemapWordSearch_DBMotoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCampaignSetupCommentCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampaignSetupCommentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCampaignSetupCommentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertCampaignSetupCommentCompletedEventHandler(ByVal sender As Object, ByVal e As InsertCampaignSetupCommentCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCampaignSetupCommentCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateCampSetupMastCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampSetupMastCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCampSetupMastCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateCampStatusByUICompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCampStatusByUICompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCampStatusByUICompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertCampSetupLogCompletedEventHandler(ByVal sender As Object, ByVal e As InsertCampSetupLogCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCampSetupLogCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignSetupLogSearchCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignSetupLogSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignSetupLogSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub TESTCompletedEventHandler(ByVal sender As Object, ByVal e As TESTCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TESTCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCCMS_CodetableCompletedEventHandler(ByVal sender As Object, ByVal e As GetCCMS_CodetableCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCCMS_CodetableCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetPrintLetterRequestByProgIdAndPrintStatusCompletedEventHandler(ByVal sender As Object, ByVal e As GetPrintLetterRequestByProgIdAndPrintStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPrintLetterRequestByProgIdAndPrintStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdatePosTransQueuePrintStatusCompletedEventHandler(ByVal sender As Object, ByVal e As UpdatePosTransQueuePrintStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdatePosTransQueuePrintStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdatePosTransQueueLetterCompletedCompletedEventHandler(ByVal sender As Object, ByVal e As UpdatePosTransQueueLetterCompletedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdatePosTransQueueLetterCompletedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateCswTransHeaderCompletedCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateCswTransHeaderCompletedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateCswTransHeaderCompletedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetLetterMailMergeRelationCompletedEventHandler(ByVal sender As Object, ByVal e As GetLetterMailMergeRelationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLetterMailMergeRelationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetLetterMailMergeChartCompletedEventHandler(ByVal sender As Object, ByVal e As GetLetterMailMergeChartCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLetterMailMergeChartCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetPlanNameByDescCompletedEventHandler(ByVal sender As Object, ByVal e As GetPlanNameByDescCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPlanNameByDescCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetPlanNameByPolNoCompletedEventHandler(ByVal sender As Object, ByVal e As GetPlanNameByPolNoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPlanNameByPolNoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCMUpoloadTypeListCompletedEventHandler(ByVal sender As Object, ByVal e As GetCMUpoloadTypeListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCMUpoloadTypeListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetNbsPoliciesCompletedEventHandler(ByVal sender As Object, ByVal e As GetNbsPoliciesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetNbsPoliciesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GenApplicationFormCompletedEventHandler(ByVal sender As Object, ByVal e As GenApplicationFormCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GenApplicationFormCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub FindConvertedPolInSameTransCompletedEventHandler(ByVal sender As Object, ByVal e As FindConvertedPolInSameTransCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FindConvertedPolInSameTransCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetBusinessDateCompletedEventHandler(ByVal sender As Object, ByVal e As GetBusinessDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBusinessDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Date
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Date)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignSetupApprovalCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignSetupApprovalCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignSetupApprovalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignClearSetupCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignClearSetupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignClearSetupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignDefaultSetupSubmit_LifeAsiaCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignDefaultSetupSubmit_LifeAsiaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignDefaultSetupSubmit_LifeAsiaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub HelloWorldCompletedEventHandler(ByVal sender As Object, ByVal e As HelloWorldCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class HelloWorldCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetLetterParamCompletedEventHandler(ByVal sender As Object, ByVal e As GetLetterParamCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLetterParamCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LetterParamBean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LetterParamBean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetLetterParamFullListCompletedEventHandler(ByVal sender As Object, ByVal e As GetLetterParamFullListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLetterParamFullListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LetterParamBean()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LetterParamBean())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetImageParamCompletedEventHandler(ByVal sender As Object, ByVal e As GetImageParamCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetImageParamCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LetterImageBean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LetterImageBean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetImageParamListCompletedEventHandler(ByVal sender As Object, ByVal e As GetImageParamListCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetImageParamListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LetterImageBean()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LetterImageBean())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetPrintFileParamCompletedEventHandler(ByVal sender As Object, ByVal e As GetPrintFileParamCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPrintFileParamCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LetterPrintFileBean()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LetterPrintFileBean())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetPrintSetParamCompletedEventHandler(ByVal sender As Object, ByVal e As GetPrintSetParamCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPrintSetParamCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As LetterPrintSetBean()
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),LetterPrintSetBean())
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CreateBatchCompletedEventHandler(ByVal sender As Object, ByVal e As CreateBatchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CreateBatchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateBatchStatusCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateBatchStatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateBatchStatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertBatchDetailCompletedEventHandler(ByVal sender As Object, ByVal e As InsertBatchDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertBatchDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetLtrBatchIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetLtrBatchIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLtrBatchIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertLetterDataDetailCompletedEventHandler(ByVal sender As Object, ByVal e As InsertLetterDataDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertLetterDataDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertBatchDataToRequestDtlCompletedEventHandler(ByVal sender As Object, ByVal e As InsertBatchDataToRequestDtlCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertBatchDataToRequestDtlCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetLtrRequestIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetLtrRequestIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLtrRequestIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertLetterRequestCompletedEventHandler(ByVal sender As Object, ByVal e As InsertLetterRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertLetterRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertLtrRequestCompletedEventHandler(ByVal sender As Object, ByVal e As InsertLtrRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertLtrRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub UpdateLtmRequestCompletedEventHandler(ByVal sender As Object, ByVal e As UpdateLtmRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class UpdateLtmRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetUserAccessRightCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserAccessRightCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserAccessRightCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetLetterDetailCompletedEventHandler(ByVal sender As Object, ByVal e As GetLetterDetailCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLetterDetailCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property singleValDt() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property regionDataSet() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(4),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetLetterParam_UICompletedEventHandler(ByVal sender As Object, ByVal e As GetLetterParam_UICompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLetterParam_UICompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetLetterParam_UI_RestrictedCompletedEventHandler(ByVal sender As Object, ByVal e As GetLetterParam_UI_RestrictedCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLetterParam_UI_RestrictedCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCustomerCompletedEventHandler(ByVal sender As Object, ByVal e As GetCustomerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCustomerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SearchLetter_UICompletedEventHandler(ByVal sender As Object, ByVal e As SearchLetter_UICompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SearchLetter_UICompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetPrintStatusCodesCompletedEventHandler(ByVal sender As Object, ByVal e As GetPrintStatusCodesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPrintStatusCodesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetLetterRequestSummaryCompletedEventHandler(ByVal sender As Object, ByVal e As GetLetterRequestSummaryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLetterRequestSummaryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertUserEditLetterDataCompletedEventHandler(ByVal sender As Object, ByVal e As InsertUserEditLetterDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertUserEditLetterDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetUserEditVerCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserEditVerCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserEditVerCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetTableFunctionCodesCompletedEventHandler(ByVal sender As Object, ByVal e As GetTableFunctionCodesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetTableFunctionCodesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetAuditKeyFieldCompletedEventHandler(ByVal sender As Object, ByVal e As GetAuditKeyFieldCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetAuditKeyFieldCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SearchAuditLog_UICompletedEventHandler(ByVal sender As Object, ByVal e As SearchAuditLog_UICompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SearchAuditLog_UICompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AdmGetUserSearchCompletedEventHandler(ByVal sender As Object, ByVal e As AdmGetUserSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdmGetUserSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AdmGetUserCompletedEventHandler(ByVal sender As Object, ByVal e As AdmGetUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdmGetUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DelAdmUserCompletedEventHandler(ByVal sender As Object, ByVal e As DelAdmUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DelAdmUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SaveAdmUserCompletedEventHandler(ByVal sender As Object, ByVal e As SaveAdmUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveAdmUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AdmGetGroupSearchCompletedEventHandler(ByVal sender As Object, ByVal e As AdmGetGroupSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdmGetGroupSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AdmGetGroupCompletedEventHandler(ByVal sender As Object, ByVal e As AdmGetGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdmGetGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DelAdmGroupCompletedEventHandler(ByVal sender As Object, ByVal e As DelAdmGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DelAdmGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SaveAdmGroupCompletedEventHandler(ByVal sender As Object, ByVal e As SaveAdmGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveAdmGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AdmGetFunctionSearchCompletedEventHandler(ByVal sender As Object, ByVal e As AdmGetFunctionSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdmGetFunctionSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AdmGetFunctionCompletedEventHandler(ByVal sender As Object, ByVal e As AdmGetFunctionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdmGetFunctionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DelAdmFunctionCompletedEventHandler(ByVal sender As Object, ByVal e As DelAdmFunctionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DelAdmFunctionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SaveAdmFunctionCompletedEventHandler(ByVal sender As Object, ByVal e As SaveAdmFunctionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveAdmFunctionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AdmGetFunctionCatCompletedEventHandler(ByVal sender As Object, ByVal e As AdmGetFunctionCatCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdmGetFunctionCatCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AdmGetAppsSearchCompletedEventHandler(ByVal sender As Object, ByVal e As AdmGetAppsSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdmGetAppsSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AdmGetAppsCompletedEventHandler(ByVal sender As Object, ByVal e As AdmGetAppsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdmGetAppsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DelAdmAppsCompletedEventHandler(ByVal sender As Object, ByVal e As DelAdmAppsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DelAdmAppsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SaveAdmAppsCompletedEventHandler(ByVal sender As Object, ByVal e As SaveAdmAppsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveAdmAppsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AdmGetFuncCatSearchCompletedEventHandler(ByVal sender As Object, ByVal e As AdmGetFuncCatSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdmGetFuncCatSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AdmGetFuncCatCompletedEventHandler(ByVal sender As Object, ByVal e As AdmGetFuncCatCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdmGetFuncCatCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DelAdmFuncCatCompletedEventHandler(ByVal sender As Object, ByVal e As DelAdmFuncCatCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DelAdmFuncCatCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SaveAdmFuncCatCompletedEventHandler(ByVal sender As Object, ByVal e As SaveAdmFuncCatCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveAdmFuncCatCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AdmGetAppsGroupCompletedEventHandler(ByVal sender As Object, ByVal e As AdmGetAppsGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdmGetAppsGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DelAdmAppsGroupCompletedEventHandler(ByVal sender As Object, ByVal e As DelAdmAppsGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DelAdmAppsGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SaveAdmAppsGroupCompletedEventHandler(ByVal sender As Object, ByVal e As SaveAdmAppsGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveAdmAppsGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AdmGetGroupUserCompletedEventHandler(ByVal sender As Object, ByVal e As AdmGetGroupUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdmGetGroupUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DelAdmGroupUserCompletedEventHandler(ByVal sender As Object, ByVal e As DelAdmGroupUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DelAdmGroupUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SaveAdmGroupUserCompletedEventHandler(ByVal sender As Object, ByVal e As SaveAdmGroupUserCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveAdmGroupUserCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AdmGetGroupFunctionCompletedEventHandler(ByVal sender As Object, ByVal e As AdmGetGroupFunctionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdmGetGroupFunctionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DelAdmGroupFunctionCompletedEventHandler(ByVal sender As Object, ByVal e As DelAdmGroupFunctionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DelAdmGroupFunctionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SaveAdmGroupFunctionCompletedEventHandler(ByVal sender As Object, ByVal e As SaveAdmGroupFunctionCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveAdmGroupFunctionCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AdmGetUserGroupCompletedEventHandler(ByVal sender As Object, ByVal e As AdmGetUserGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdmGetUserGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DelAdmUserGroupCompletedEventHandler(ByVal sender As Object, ByVal e As DelAdmUserGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DelAdmUserGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SaveAdmUserGroupCompletedEventHandler(ByVal sender As Object, ByVal e As SaveAdmUserGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveAdmUserGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AdmGetFunctionGroupCompletedEventHandler(ByVal sender As Object, ByVal e As AdmGetFunctionGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AdmGetFunctionGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub DelAdmFunctionGroupCompletedEventHandler(ByVal sender As Object, ByVal e As DelAdmFunctionGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DelAdmFunctionGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SaveAdmFunctionGroupCompletedEventHandler(ByVal sender As Object, ByVal e As SaveAdmFunctionGroupCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveAdmFunctionGroupCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetNextBusinessDateCompletedEventHandler(ByVal sender As Object, ByVal e As GetNextBusinessDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetNextBusinessDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetNextBusinessDate_MCUCompletedEventHandler(ByVal sender As Object, ByVal e As GetNextBusinessDate_MCUCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetNextBusinessDate_MCUCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CampaignDefaultSearch_DBMotoCompletedEventHandler(ByVal sender As Object, ByVal e As CampaignDefaultSearch_DBMotoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CampaignDefaultSearch_DBMotoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCampaignTypeCodesCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampaignTypeCodesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCampaignTypeCodesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCampaignSetupActionCodesCompletedEventHandler(ByVal sender As Object, ByVal e As GetCampaignSetupActionCodesCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCampaignSetupActionCodesCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetPlanCodeCompletedEventHandler(ByVal sender As Object, ByVal e As GetPlanCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPlanCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetDistributeChannelByPlanCompletedEventHandler(ByVal sender As Object, ByVal e As GetDistributeChannelByPlanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetDistributeChannelByPlanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetSalesUnitCodeCompletedEventHandler(ByVal sender As Object, ByVal e As GetSalesUnitCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSalesUnitCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub CheckAgentTypeExistCompletedEventHandler(ByVal sender As Object, ByVal e As CheckAgentTypeExistCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CheckAgentTypeExistCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetMortalityClassByPlanCompletedEventHandler(ByVal sender As Object, ByVal e As GetMortalityClassByPlanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetMortalityClassByPlanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetSubPlanCodeByPlanCompletedEventHandler(ByVal sender As Object, ByVal e As GetSubPlanCodeByPlanCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSubPlanCodeByPlanCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetRMLifeFundHouseInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetRMLifeFundHouseInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRMLifeFundHouseInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetRMLifeFundTradeInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetRMLifeFundTradeInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetRMLifeFundTradeInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertCalastoneFundTradeMastCompletedEventHandler(ByVal sender As Object, ByVal e As InsertCalastoneFundTradeMastCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertCalastoneFundTradeMastCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetCalastoneSearchCompletedEventHandler(ByVal sender As Object, ByVal e As GetCalastoneSearchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetCalastoneSearchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetFMSInfoByFundCodeCompletedEventHandler(ByVal sender As Object, ByVal e As GetFMSInfoByFundCodeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFMSInfoByFundCodeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetEmailAlertCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmailAlertCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmailAlertCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetEmailIdCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmailIdCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmailIdCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub InsertEmailMastCompletedEventHandler(ByVal sender As Object, ByVal e As InsertEmailMastCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InsertEmailMastCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property errMsg() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property stackTrace() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
End Namespace
