'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace NBAWS
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="NBAWSSoap", [Namespace]:="http://www.ing.com.hk/")>  _
    Partial Public Class NBAWS
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private comSOAPHeaderValueField As ComSOAPHeader
        
        Private GetUWSysInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUnitTranHistoryOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUWInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetASIOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SaveUWInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetNBSysInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetPropInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SubmitPropRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ProcessPropRequestOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUWAdvicePrintingInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private PrintUWAdviceInBatchOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUserAuthorityOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetUwWorksheetPrtInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetOfferLetterPrtInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetLoadingExclusionPrtInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetFirstYearComRateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetProposalFYCInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetSysBusinessDateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private checkUWAuthorityOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.CRS.My.MySettings.Default.CRS_NBAWS_NBAWS
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Property ComSOAPHeaderValue() As ComSOAPHeader
            Get
                Return Me.comSOAPHeaderValueField
            End Get
            Set
                Me.comSOAPHeaderValueField = value
            End Set
        End Property
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetUWSysInfoCompleted As GetUWSysInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUnitTranHistoryCompleted As GetUnitTranHistoryCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUWInfoCompleted As GetUWInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetASICompleted As GetASICompletedEventHandler
        
        '''<remarks/>
        Public Event SaveUWInfoCompleted As SaveUWInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetNBSysInfoCompleted As GetNBSysInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetPropInfoCompleted As GetPropInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event SubmitPropRequestCompleted As SubmitPropRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event ProcessPropRequestCompleted As ProcessPropRequestCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUWAdvicePrintingInfoCompleted As GetUWAdvicePrintingInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event PrintUWAdviceInBatchCompleted As PrintUWAdviceInBatchCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUserAuthorityCompleted As GetUserAuthorityCompletedEventHandler
        
        '''<remarks/>
        Public Event GetUwWorksheetPrtInfoCompleted As GetUwWorksheetPrtInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetOfferLetterPrtInfoCompleted As GetOfferLetterPrtInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetLoadingExclusionPrtInfoCompleted As GetLoadingExclusionPrtInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetFirstYearComRateCompleted As GetFirstYearComRateCompletedEventHandler
        
        '''<remarks/>
        Public Event GetProposalFYCInfoCompleted As GetProposalFYCInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetSysBusinessDateCompleted As GetSysBusinessDateCompletedEventHandler
        
        '''<remarks/>
        Public Event checkUWAuthorityCompleted As checkUWAuthorityCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ComSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ing.com.hk/GetUWSysInfo", RequestNamespace:="http://www.ing.com.hk/", ResponseNamespace:="http://www.ing.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUWSysInfo(ByRef ds As System.Data.DataSet, ByRef strError As String) As Boolean
            Dim results() As Object = Me.Invoke("GetUWSysInfo", New Object() {ds, strError})
            ds = CType(results(1),System.Data.DataSet)
            strError = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUWSysInfoAsync(ByVal ds As System.Data.DataSet, ByVal strError As String)
            Me.GetUWSysInfoAsync(ds, strError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUWSysInfoAsync(ByVal ds As System.Data.DataSet, ByVal strError As String, ByVal userState As Object)
            If (Me.GetUWSysInfoOperationCompleted Is Nothing) Then
                Me.GetUWSysInfoOperationCompleted = AddressOf Me.OnGetUWSysInfoOperationCompleted
            End If
            Me.InvokeAsync("GetUWSysInfo", New Object() {ds, strError}, Me.GetUWSysInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUWSysInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUWSysInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUWSysInfoCompleted(Me, New GetUWSysInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ComSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ing.com.hk/GetUnitTranHistory", RequestNamespace:="http://www.ing.com.hk/", ResponseNamespace:="http://www.ing.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUnitTranHistory(ByVal strPolicyNo As String, ByRef dsTransHist As System.Data.DataSet, ByRef strError As String, ByVal dteStartDate As Date, ByVal dteEndDate As Date) As Boolean
            Dim results() As Object = Me.Invoke("GetUnitTranHistory", New Object() {strPolicyNo, dsTransHist, strError, dteStartDate, dteEndDate})
            dsTransHist = CType(results(1),System.Data.DataSet)
            strError = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUnitTranHistoryAsync(ByVal strPolicyNo As String, ByVal dsTransHist As System.Data.DataSet, ByVal strError As String, ByVal dteStartDate As Date, ByVal dteEndDate As Date)
            Me.GetUnitTranHistoryAsync(strPolicyNo, dsTransHist, strError, dteStartDate, dteEndDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUnitTranHistoryAsync(ByVal strPolicyNo As String, ByVal dsTransHist As System.Data.DataSet, ByVal strError As String, ByVal dteStartDate As Date, ByVal dteEndDate As Date, ByVal userState As Object)
            If (Me.GetUnitTranHistoryOperationCompleted Is Nothing) Then
                Me.GetUnitTranHistoryOperationCompleted = AddressOf Me.OnGetUnitTranHistoryOperationCompleted
            End If
            Me.InvokeAsync("GetUnitTranHistory", New Object() {strPolicyNo, dsTransHist, strError, dteStartDate, dteEndDate}, Me.GetUnitTranHistoryOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUnitTranHistoryOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUnitTranHistoryCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUnitTranHistoryCompleted(Me, New GetUnitTranHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ComSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ing.com.hk/GetUWInfo", RequestNamespace:="http://www.ing.com.hk/", ResponseNamespace:="http://www.ing.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUWInfo(ByVal strSrc() As String, ByRef ds As System.Data.DataSet, ByRef strError As String) As Boolean
            Dim results() As Object = Me.Invoke("GetUWInfo", New Object() {strSrc, ds, strError})
            ds = CType(results(1),System.Data.DataSet)
            strError = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUWInfoAsync(ByVal strSrc() As String, ByVal ds As System.Data.DataSet, ByVal strError As String)
            Me.GetUWInfoAsync(strSrc, ds, strError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUWInfoAsync(ByVal strSrc() As String, ByVal ds As System.Data.DataSet, ByVal strError As String, ByVal userState As Object)
            If (Me.GetUWInfoOperationCompleted Is Nothing) Then
                Me.GetUWInfoOperationCompleted = AddressOf Me.OnGetUWInfoOperationCompleted
            End If
            Me.InvokeAsync("GetUWInfo", New Object() {strSrc, ds, strError}, Me.GetUWInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUWInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUWInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUWInfoCompleted(Me, New GetUWInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ComSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ing.com.hk/GetASI", RequestNamespace:="http://www.ing.com.hk/", ResponseNamespace:="http://www.ing.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetASI(ByVal strSrc() As String, ByRef ds As System.Data.DataSet, ByRef strError As String) As Boolean
            Dim results() As Object = Me.Invoke("GetASI", New Object() {strSrc, ds, strError})
            ds = CType(results(1),System.Data.DataSet)
            strError = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetASIAsync(ByVal strSrc() As String, ByVal ds As System.Data.DataSet, ByVal strError As String)
            Me.GetASIAsync(strSrc, ds, strError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetASIAsync(ByVal strSrc() As String, ByVal ds As System.Data.DataSet, ByVal strError As String, ByVal userState As Object)
            If (Me.GetASIOperationCompleted Is Nothing) Then
                Me.GetASIOperationCompleted = AddressOf Me.OnGetASIOperationCompleted
            End If
            Me.InvokeAsync("GetASI", New Object() {strSrc, ds, strError}, Me.GetASIOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetASIOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetASICompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetASICompleted(Me, New GetASICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ComSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ing.com.hk/SaveUWInfo", RequestNamespace:="http://www.ing.com.hk/", ResponseNamespace:="http://www.ing.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SaveUWInfo(ByVal strSrc() As String, ByRef ds As System.Data.DataSet, ByRef strError As String) As Boolean
            Dim results() As Object = Me.Invoke("SaveUWInfo", New Object() {strSrc, ds, strError})
            ds = CType(results(1),System.Data.DataSet)
            strError = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SaveUWInfoAsync(ByVal strSrc() As String, ByVal ds As System.Data.DataSet, ByVal strError As String)
            Me.SaveUWInfoAsync(strSrc, ds, strError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SaveUWInfoAsync(ByVal strSrc() As String, ByVal ds As System.Data.DataSet, ByVal strError As String, ByVal userState As Object)
            If (Me.SaveUWInfoOperationCompleted Is Nothing) Then
                Me.SaveUWInfoOperationCompleted = AddressOf Me.OnSaveUWInfoOperationCompleted
            End If
            Me.InvokeAsync("SaveUWInfo", New Object() {strSrc, ds, strError}, Me.SaveUWInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnSaveUWInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.SaveUWInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SaveUWInfoCompleted(Me, New SaveUWInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ComSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ing.com.hk/GetNBSysInfo", RequestNamespace:="http://www.ing.com.hk/", ResponseNamespace:="http://www.ing.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetNBSysInfo(ByRef ds As System.Data.DataSet, ByRef strError As String) As Boolean
            Dim results() As Object = Me.Invoke("GetNBSysInfo", New Object() {ds, strError})
            ds = CType(results(1),System.Data.DataSet)
            strError = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetNBSysInfoAsync(ByVal ds As System.Data.DataSet, ByVal strError As String)
            Me.GetNBSysInfoAsync(ds, strError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetNBSysInfoAsync(ByVal ds As System.Data.DataSet, ByVal strError As String, ByVal userState As Object)
            If (Me.GetNBSysInfoOperationCompleted Is Nothing) Then
                Me.GetNBSysInfoOperationCompleted = AddressOf Me.OnGetNBSysInfoOperationCompleted
            End If
            Me.InvokeAsync("GetNBSysInfo", New Object() {ds, strError}, Me.GetNBSysInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetNBSysInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetNBSysInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetNBSysInfoCompleted(Me, New GetNBSysInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ComSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ing.com.hk/GetPropInfo", RequestNamespace:="http://www.ing.com.hk/", ResponseNamespace:="http://www.ing.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetPropInfo(ByVal strSrc() As String, ByRef ds As System.Data.DataSet, ByRef strError As String) As Boolean
            Dim results() As Object = Me.Invoke("GetPropInfo", New Object() {strSrc, ds, strError})
            ds = CType(results(1),System.Data.DataSet)
            strError = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetPropInfoAsync(ByVal strSrc() As String, ByVal ds As System.Data.DataSet, ByVal strError As String)
            Me.GetPropInfoAsync(strSrc, ds, strError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetPropInfoAsync(ByVal strSrc() As String, ByVal ds As System.Data.DataSet, ByVal strError As String, ByVal userState As Object)
            If (Me.GetPropInfoOperationCompleted Is Nothing) Then
                Me.GetPropInfoOperationCompleted = AddressOf Me.OnGetPropInfoOperationCompleted
            End If
            Me.InvokeAsync("GetPropInfo", New Object() {strSrc, ds, strError}, Me.GetPropInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetPropInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetPropInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetPropInfoCompleted(Me, New GetPropInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ComSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ing.com.hk/SubmitPropRequest", RequestNamespace:="http://www.ing.com.hk/", ResponseNamespace:="http://www.ing.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function SubmitPropRequest(ByVal strSrc() As String, ByRef ds As System.Data.DataSet, ByRef strError As String) As Double
            Dim results() As Object = Me.Invoke("SubmitPropRequest", New Object() {strSrc, ds, strError})
            ds = CType(results(1),System.Data.DataSet)
            strError = CType(results(2),String)
            Return CType(results(0),Double)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SubmitPropRequestAsync(ByVal strSrc() As String, ByVal ds As System.Data.DataSet, ByVal strError As String)
            Me.SubmitPropRequestAsync(strSrc, ds, strError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SubmitPropRequestAsync(ByVal strSrc() As String, ByVal ds As System.Data.DataSet, ByVal strError As String, ByVal userState As Object)
            If (Me.SubmitPropRequestOperationCompleted Is Nothing) Then
                Me.SubmitPropRequestOperationCompleted = AddressOf Me.OnSubmitPropRequestOperationCompleted
            End If
            Me.InvokeAsync("SubmitPropRequest", New Object() {strSrc, ds, strError}, Me.SubmitPropRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnSubmitPropRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.SubmitPropRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SubmitPropRequestCompleted(Me, New SubmitPropRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ComSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ing.com.hk/ProcessPropRequest", RequestNamespace:="http://www.ing.com.hk/", OneWay:=true, Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ProcessPropRequest(ByVal dblTransId As Double, ByVal strError As String)
            Me.Invoke("ProcessPropRequest", New Object() {dblTransId, strError})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcessPropRequestAsync(ByVal dblTransId As Double, ByVal strError As String)
            Me.ProcessPropRequestAsync(dblTransId, strError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ProcessPropRequestAsync(ByVal dblTransId As Double, ByVal strError As String, ByVal userState As Object)
            If (Me.ProcessPropRequestOperationCompleted Is Nothing) Then
                Me.ProcessPropRequestOperationCompleted = AddressOf Me.OnProcessPropRequestOperationCompleted
            End If
            Me.InvokeAsync("ProcessPropRequest", New Object() {dblTransId, strError}, Me.ProcessPropRequestOperationCompleted, userState)
        End Sub
        
        Private Sub OnProcessPropRequestOperationCompleted(ByVal arg As Object)
            If (Not (Me.ProcessPropRequestCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ProcessPropRequestCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ComSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ing.com.hk/GetUWAdvicePrintingInfo", RequestNamespace:="http://www.ing.com.hk/", ResponseNamespace:="http://www.ing.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUWAdvicePrintingInfo(ByVal strPolicyNo As String, ByRef ds As System.Data.DataSet, ByRef strError As String) As Boolean
            Dim results() As Object = Me.Invoke("GetUWAdvicePrintingInfo", New Object() {strPolicyNo, ds, strError})
            ds = CType(results(1),System.Data.DataSet)
            strError = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUWAdvicePrintingInfoAsync(ByVal strPolicyNo As String, ByVal ds As System.Data.DataSet, ByVal strError As String)
            Me.GetUWAdvicePrintingInfoAsync(strPolicyNo, ds, strError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUWAdvicePrintingInfoAsync(ByVal strPolicyNo As String, ByVal ds As System.Data.DataSet, ByVal strError As String, ByVal userState As Object)
            If (Me.GetUWAdvicePrintingInfoOperationCompleted Is Nothing) Then
                Me.GetUWAdvicePrintingInfoOperationCompleted = AddressOf Me.OnGetUWAdvicePrintingInfoOperationCompleted
            End If
            Me.InvokeAsync("GetUWAdvicePrintingInfo", New Object() {strPolicyNo, ds, strError}, Me.GetUWAdvicePrintingInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUWAdvicePrintingInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUWAdvicePrintingInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUWAdvicePrintingInfoCompleted(Me, New GetUWAdvicePrintingInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ComSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ing.com.hk/PrintUWAdviceInBatch", RequestNamespace:="http://www.ing.com.hk/", ResponseNamespace:="http://www.ing.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function PrintUWAdviceInBatch(ByVal strPolicyNo As String, ByRef ds As System.Data.DataSet, ByRef strError As String) As Boolean
            Dim results() As Object = Me.Invoke("PrintUWAdviceInBatch", New Object() {strPolicyNo, ds, strError})
            ds = CType(results(1),System.Data.DataSet)
            strError = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PrintUWAdviceInBatchAsync(ByVal strPolicyNo As String, ByVal ds As System.Data.DataSet, ByVal strError As String)
            Me.PrintUWAdviceInBatchAsync(strPolicyNo, ds, strError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PrintUWAdviceInBatchAsync(ByVal strPolicyNo As String, ByVal ds As System.Data.DataSet, ByVal strError As String, ByVal userState As Object)
            If (Me.PrintUWAdviceInBatchOperationCompleted Is Nothing) Then
                Me.PrintUWAdviceInBatchOperationCompleted = AddressOf Me.OnPrintUWAdviceInBatchOperationCompleted
            End If
            Me.InvokeAsync("PrintUWAdviceInBatch", New Object() {strPolicyNo, ds, strError}, Me.PrintUWAdviceInBatchOperationCompleted, userState)
        End Sub
        
        Private Sub OnPrintUWAdviceInBatchOperationCompleted(ByVal arg As Object)
            If (Not (Me.PrintUWAdviceInBatchCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PrintUWAdviceInBatchCompleted(Me, New PrintUWAdviceInBatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ComSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ing.com.hk/GetUserAuthority", RequestNamespace:="http://www.ing.com.hk/", ResponseNamespace:="http://www.ing.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUserAuthority(ByRef ds As System.Data.DataSet, ByRef strError As String) As Boolean
            Dim results() As Object = Me.Invoke("GetUserAuthority", New Object() {ds, strError})
            ds = CType(results(1),System.Data.DataSet)
            strError = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUserAuthorityAsync(ByVal ds As System.Data.DataSet, ByVal strError As String)
            Me.GetUserAuthorityAsync(ds, strError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUserAuthorityAsync(ByVal ds As System.Data.DataSet, ByVal strError As String, ByVal userState As Object)
            If (Me.GetUserAuthorityOperationCompleted Is Nothing) Then
                Me.GetUserAuthorityOperationCompleted = AddressOf Me.OnGetUserAuthorityOperationCompleted
            End If
            Me.InvokeAsync("GetUserAuthority", New Object() {ds, strError}, Me.GetUserAuthorityOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUserAuthorityOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUserAuthorityCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUserAuthorityCompleted(Me, New GetUserAuthorityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ComSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ing.com.hk/GetUwWorksheetPrtInfo", RequestNamespace:="http://www.ing.com.hk/", ResponseNamespace:="http://www.ing.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetUwWorksheetPrtInfo(ByVal strPolicyNo As String, ByRef ds As System.Data.DataSet, ByRef strError As String) As Boolean
            Dim results() As Object = Me.Invoke("GetUwWorksheetPrtInfo", New Object() {strPolicyNo, ds, strError})
            ds = CType(results(1),System.Data.DataSet)
            strError = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetUwWorksheetPrtInfoAsync(ByVal strPolicyNo As String, ByVal ds As System.Data.DataSet, ByVal strError As String)
            Me.GetUwWorksheetPrtInfoAsync(strPolicyNo, ds, strError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetUwWorksheetPrtInfoAsync(ByVal strPolicyNo As String, ByVal ds As System.Data.DataSet, ByVal strError As String, ByVal userState As Object)
            If (Me.GetUwWorksheetPrtInfoOperationCompleted Is Nothing) Then
                Me.GetUwWorksheetPrtInfoOperationCompleted = AddressOf Me.OnGetUwWorksheetPrtInfoOperationCompleted
            End If
            Me.InvokeAsync("GetUwWorksheetPrtInfo", New Object() {strPolicyNo, ds, strError}, Me.GetUwWorksheetPrtInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetUwWorksheetPrtInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetUwWorksheetPrtInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetUwWorksheetPrtInfoCompleted(Me, New GetUwWorksheetPrtInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ComSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ing.com.hk/GetOfferLetterPrtInfo", RequestNamespace:="http://www.ing.com.hk/", ResponseNamespace:="http://www.ing.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetOfferLetterPrtInfo(ByVal strPolicyNo As String, ByRef ds As System.Data.DataSet, ByRef strError As String) As Boolean
            Dim results() As Object = Me.Invoke("GetOfferLetterPrtInfo", New Object() {strPolicyNo, ds, strError})
            ds = CType(results(1),System.Data.DataSet)
            strError = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetOfferLetterPrtInfoAsync(ByVal strPolicyNo As String, ByVal ds As System.Data.DataSet, ByVal strError As String)
            Me.GetOfferLetterPrtInfoAsync(strPolicyNo, ds, strError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetOfferLetterPrtInfoAsync(ByVal strPolicyNo As String, ByVal ds As System.Data.DataSet, ByVal strError As String, ByVal userState As Object)
            If (Me.GetOfferLetterPrtInfoOperationCompleted Is Nothing) Then
                Me.GetOfferLetterPrtInfoOperationCompleted = AddressOf Me.OnGetOfferLetterPrtInfoOperationCompleted
            End If
            Me.InvokeAsync("GetOfferLetterPrtInfo", New Object() {strPolicyNo, ds, strError}, Me.GetOfferLetterPrtInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetOfferLetterPrtInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetOfferLetterPrtInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetOfferLetterPrtInfoCompleted(Me, New GetOfferLetterPrtInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ComSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ing.com.hk/GetLoadingExclusionPrtInfo", RequestNamespace:="http://www.ing.com.hk/", ResponseNamespace:="http://www.ing.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetLoadingExclusionPrtInfo(ByVal strPolicyNo As String, ByRef ds As System.Data.DataSet, ByRef strError As String) As Boolean
            Dim results() As Object = Me.Invoke("GetLoadingExclusionPrtInfo", New Object() {strPolicyNo, ds, strError})
            ds = CType(results(1),System.Data.DataSet)
            strError = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetLoadingExclusionPrtInfoAsync(ByVal strPolicyNo As String, ByVal ds As System.Data.DataSet, ByVal strError As String)
            Me.GetLoadingExclusionPrtInfoAsync(strPolicyNo, ds, strError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetLoadingExclusionPrtInfoAsync(ByVal strPolicyNo As String, ByVal ds As System.Data.DataSet, ByVal strError As String, ByVal userState As Object)
            If (Me.GetLoadingExclusionPrtInfoOperationCompleted Is Nothing) Then
                Me.GetLoadingExclusionPrtInfoOperationCompleted = AddressOf Me.OnGetLoadingExclusionPrtInfoOperationCompleted
            End If
            Me.InvokeAsync("GetLoadingExclusionPrtInfo", New Object() {strPolicyNo, ds, strError}, Me.GetLoadingExclusionPrtInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetLoadingExclusionPrtInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetLoadingExclusionPrtInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetLoadingExclusionPrtInfoCompleted(Me, New GetLoadingExclusionPrtInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ComSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ing.com.hk/GetFirstYearComRate", RequestNamespace:="http://www.ing.com.hk/", ResponseNamespace:="http://www.ing.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetFirstYearComRate(ByVal iPlanCode As String, ByVal iChannel As String, ByVal iAge As Integer, ByVal iTerm As String, ByRef oCommRate As Double, ByRef dsRate As System.Data.DataSet, ByRef strError As String) As Boolean
            Dim results() As Object = Me.Invoke("GetFirstYearComRate", New Object() {iPlanCode, iChannel, iAge, iTerm, oCommRate, dsRate, strError})
            oCommRate = CType(results(1),Double)
            dsRate = CType(results(2),System.Data.DataSet)
            strError = CType(results(3),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetFirstYearComRateAsync(ByVal iPlanCode As String, ByVal iChannel As String, ByVal iAge As Integer, ByVal iTerm As String, ByVal oCommRate As Double, ByVal dsRate As System.Data.DataSet, ByVal strError As String)
            Me.GetFirstYearComRateAsync(iPlanCode, iChannel, iAge, iTerm, oCommRate, dsRate, strError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetFirstYearComRateAsync(ByVal iPlanCode As String, ByVal iChannel As String, ByVal iAge As Integer, ByVal iTerm As String, ByVal oCommRate As Double, ByVal dsRate As System.Data.DataSet, ByVal strError As String, ByVal userState As Object)
            If (Me.GetFirstYearComRateOperationCompleted Is Nothing) Then
                Me.GetFirstYearComRateOperationCompleted = AddressOf Me.OnGetFirstYearComRateOperationCompleted
            End If
            Me.InvokeAsync("GetFirstYearComRate", New Object() {iPlanCode, iChannel, iAge, iTerm, oCommRate, dsRate, strError}, Me.GetFirstYearComRateOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetFirstYearComRateOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetFirstYearComRateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetFirstYearComRateCompleted(Me, New GetFirstYearComRateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ComSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ing.com.hk/GetProposalFYCInfo", RequestNamespace:="http://www.ing.com.hk/", ResponseNamespace:="http://www.ing.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetProposalFYCInfo(ByVal iPolicyNo As String, ByRef dsCommission As System.Data.DataSet, ByRef strError As String) As Boolean
            Dim results() As Object = Me.Invoke("GetProposalFYCInfo", New Object() {iPolicyNo, dsCommission, strError})
            dsCommission = CType(results(1),System.Data.DataSet)
            strError = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetProposalFYCInfoAsync(ByVal iPolicyNo As String, ByVal dsCommission As System.Data.DataSet, ByVal strError As String)
            Me.GetProposalFYCInfoAsync(iPolicyNo, dsCommission, strError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetProposalFYCInfoAsync(ByVal iPolicyNo As String, ByVal dsCommission As System.Data.DataSet, ByVal strError As String, ByVal userState As Object)
            If (Me.GetProposalFYCInfoOperationCompleted Is Nothing) Then
                Me.GetProposalFYCInfoOperationCompleted = AddressOf Me.OnGetProposalFYCInfoOperationCompleted
            End If
            Me.InvokeAsync("GetProposalFYCInfo", New Object() {iPolicyNo, dsCommission, strError}, Me.GetProposalFYCInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetProposalFYCInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetProposalFYCInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetProposalFYCInfoCompleted(Me, New GetProposalFYCInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ComSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ing.com.hk/GetSysBusinessDate", RequestNamespace:="http://www.ing.com.hk/", ResponseNamespace:="http://www.ing.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetSysBusinessDate(ByRef ds As System.Data.DataSet, ByRef strError As String) As Boolean
            Dim results() As Object = Me.Invoke("GetSysBusinessDate", New Object() {ds, strError})
            ds = CType(results(1),System.Data.DataSet)
            strError = CType(results(2),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetSysBusinessDateAsync(ByVal ds As System.Data.DataSet, ByVal strError As String)
            Me.GetSysBusinessDateAsync(ds, strError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetSysBusinessDateAsync(ByVal ds As System.Data.DataSet, ByVal strError As String, ByVal userState As Object)
            If (Me.GetSysBusinessDateOperationCompleted Is Nothing) Then
                Me.GetSysBusinessDateOperationCompleted = AddressOf Me.OnGetSysBusinessDateOperationCompleted
            End If
            Me.InvokeAsync("GetSysBusinessDate", New Object() {ds, strError}, Me.GetSysBusinessDateOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetSysBusinessDateOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetSysBusinessDateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetSysBusinessDateCompleted(Me, New GetSysBusinessDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapHeaderAttribute("ComSOAPHeaderValue"),  _
         System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ing.com.hk/checkUWAuthority", RequestNamespace:="http://www.ing.com.hk/", ResponseNamespace:="http://www.ing.com.hk/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function checkUWAuthority(ByVal iPolicyNo As String, ByRef strError As String) As Boolean
            Dim results() As Object = Me.Invoke("checkUWAuthority", New Object() {iPolicyNo, strError})
            strError = CType(results(1),String)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub checkUWAuthorityAsync(ByVal iPolicyNo As String, ByVal strError As String)
            Me.checkUWAuthorityAsync(iPolicyNo, strError, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub checkUWAuthorityAsync(ByVal iPolicyNo As String, ByVal strError As String, ByVal userState As Object)
            If (Me.checkUWAuthorityOperationCompleted Is Nothing) Then
                Me.checkUWAuthorityOperationCompleted = AddressOf Me.OncheckUWAuthorityOperationCompleted
            End If
            Me.InvokeAsync("checkUWAuthority", New Object() {iPolicyNo, strError}, Me.checkUWAuthorityOperationCompleted, userState)
        End Sub
        
        Private Sub OncheckUWAuthorityOperationCompleted(ByVal arg As Object)
            If (Not (Me.checkUWAuthorityCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent checkUWAuthorityCompleted(Me, New checkUWAuthorityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://www.ing.com.hk/"),  _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="http://www.ing.com.hk/", IsNullable:=false)>  _
    Partial Public Class ComSOAPHeader
        Inherits System.Web.Services.Protocols.SoapHeader
        
        Private projectAliasField As String
        
        Private libraryNameField As String
        
        Private machineIDField As String
        
        Private userIDField As String
        
        Private userTypeField As String
        
        Private versionNoField As String
        
        Private companyIDField As String
        
        Private environmentUseField As String
        
        Private anyAttrField() As System.Xml.XmlAttribute
        
        '''<remarks/>
        Public Property ProjectAlias() As String
            Get
                Return Me.projectAliasField
            End Get
            Set
                Me.projectAliasField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property LibraryName() As String
            Get
                Return Me.libraryNameField
            End Get
            Set
                Me.libraryNameField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property MachineID() As String
            Get
                Return Me.machineIDField
            End Get
            Set
                Me.machineIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserID() As String
            Get
                Return Me.userIDField
            End Get
            Set
                Me.userIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UserType() As String
            Get
                Return Me.userTypeField
            End Get
            Set
                Me.userTypeField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VersionNo() As String
            Get
                Return Me.versionNoField
            End Get
            Set
                Me.versionNoField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property CompanyID() As String
            Get
                Return Me.companyIDField
            End Get
            Set
                Me.companyIDField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EnvironmentUse() As String
            Get
                Return Me.environmentUseField
            End Get
            Set
                Me.environmentUseField = value
            End Set
        End Property
        
        '''<remarks/>
        <System.Xml.Serialization.XmlAnyAttributeAttribute()>  _
        Public Property AnyAttr() As System.Xml.XmlAttribute()
            Get
                Return Me.anyAttrField
            End Get
            Set
                Me.anyAttrField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetUWSysInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetUWSysInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUWSysInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ds() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetUnitTranHistoryCompletedEventHandler(ByVal sender As Object, ByVal e As GetUnitTranHistoryCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUnitTranHistoryCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsTransHist() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetUWInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetUWInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUWInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ds() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetASICompletedEventHandler(ByVal sender As Object, ByVal e As GetASICompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetASICompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ds() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SaveUWInfoCompletedEventHandler(ByVal sender As Object, ByVal e As SaveUWInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SaveUWInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ds() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetNBSysInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetNBSysInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetNBSysInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ds() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetPropInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetPropInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetPropInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ds() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SubmitPropRequestCompletedEventHandler(ByVal sender As Object, ByVal e As SubmitPropRequestCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SubmitPropRequestCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Double
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Double)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ds() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ProcessPropRequestCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetUWAdvicePrintingInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetUWAdvicePrintingInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUWAdvicePrintingInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ds() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub PrintUWAdviceInBatchCompletedEventHandler(ByVal sender As Object, ByVal e As PrintUWAdviceInBatchCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PrintUWAdviceInBatchCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ds() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetUserAuthorityCompletedEventHandler(ByVal sender As Object, ByVal e As GetUserAuthorityCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUserAuthorityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ds() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetUwWorksheetPrtInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetUwWorksheetPrtInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetUwWorksheetPrtInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ds() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetOfferLetterPrtInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetOfferLetterPrtInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetOfferLetterPrtInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ds() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetLoadingExclusionPrtInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetLoadingExclusionPrtInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetLoadingExclusionPrtInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ds() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetFirstYearComRateCompletedEventHandler(ByVal sender As Object, ByVal e As GetFirstYearComRateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetFirstYearComRateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property oCommRate() As Double
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Double)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsRate() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetProposalFYCInfoCompletedEventHandler(ByVal sender As Object, ByVal e As GetProposalFYCInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetProposalFYCInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property dsCommission() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub GetSysBusinessDateCompletedEventHandler(ByVal sender As Object, ByVal e As GetSysBusinessDateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetSysBusinessDateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property ds() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),System.Data.DataSet)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub checkUWAuthorityCompletedEventHandler(ByVal sender As Object, ByVal e As checkUWAuthorityCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class checkUWAuthorityCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property strError() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
    End Class
End Namespace
